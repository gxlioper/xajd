/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.dtjs.ntzy.gqtgl;

import java.io.IOException;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.DAO.DAO;
import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.comm.CommService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.xsgygl.GyglTyService;

import com.zfsoft.basic.BasicService;

/** 
 * MyEclipse Struts
 * Creation date: 09-21-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NtzyWpjyAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method wpjySq
	 * 物品借用申请
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward wpjySq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		NtzyWpjyService service = new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String userName=session.getAttribute("userName").toString();
		doType= Base.isNull(doType) || doType.equalsIgnoreCase("")? "sq" :doType;
		String xm="";
		
		if("stu".equalsIgnoreCase(userType)){
			xm=service.getXsxm(userName);
		}else{
			xm=service.getDlrXm(userName);
		}
		
		if("save".equalsIgnoreCase(doType)){
			//主表数据插入
			this.insertOperation(request, "ntzy_wpjyb");
			//批量增加副表信息
			String result=request.getAttribute("result").toString();
			if("true".equalsIgnoreCase(result)){
				service.plSave(request, wpjyForm);
			}
			doType="sq";
		}
		
		request.setAttribute("userDep", userDep);
		request.setAttribute("pkValue", request.getParameter("save_sqr")+request.getParameter("save_sqsj")+request.getParameter("save_jyrq"));
		request.setAttribute("save_xn", Base.currXn);
		request.setAttribute("save_xq", Base.currXq);
		request.setAttribute("path", "ntzyWpjy.do?method=wpjySq");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("xm", xm);
		request.setAttribute("doType", doType);
		return mapping.findForward("wpjySq");
	}
	
	
	/** 
	 * Method wpjySq
	 * 物品借用申请
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward wpjyUp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		NtzyWpjyService service = new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		
		String doType=request.getParameter("doType");
		String pkValue=request.getParameter("pkValue");
		String xm="";
		
		
		if("modi".equalsIgnoreCase(doType)){
			this.updateOperation(request, "ntzy_wpjyb");
			//批量修改副表信息
			String result=request.getAttribute("result").toString();
			if("true".equalsIgnoreCase(result)){
				service.plSave(request, wpjyForm);
			}
		}
		
		this.selectPageDataByOne(request, "ntzy_wpjyb", "view_ntzy_wpjy", pkValue);//主表数据查询
		if("save".equalsIgnoreCase(doType)){
			doType="modi";
		}
		
		
		request.setAttribute("save_xn", Base.currXn);
		request.setAttribute("save_xq", Base.currXq);
		request.setAttribute("path", "ntzyWpjy.do?method=wpjySq");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("xm", xm);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		request.setAttribute("option", doType);
		return mapping.findForward("wpjySq");
	}
	
	
	/**
	 * wpjyCx
	 * 物品借用查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward wpjyCx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		NtzyWpjyService service = new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String userName= session.getAttribute("userName").toString();
		
		if("del".equalsIgnoreCase(doType)){
			this.deleteOperation(request, "ntzy_wpjyb");//主表数据删除
			//副表信息删除
			service.delWpbxx();
			doType="qry";
		}
		
		if("stu".equalsIgnoreCase(userType)){
			wpjyForm.setQuerylike_sqr(userName);
		}
		
		if("qry".equalsIgnoreCase(doType)){
			String []outputColumn ={"pkValue","disabled","sqr","xn","xqmc","jbr","sqsj","jyrq","sqbm","xysh","xxsh"};
			request.setAttribute("clientColumns", "  '' disabled, ");
			this.selectPageDataByPagination(request, wpjyForm, "ntzy_wpjyb", "view_ntzy_wpjy", outputColumn);
		}
		
		
		
		if(!"admin".equalsIgnoreCase(userType)
				&& !"xx".equalsIgnoreCase(userType)){
			wpjyForm.setBmdm(userDep);
			request.setAttribute("isBmyh", "true");
		}
		
		request.setAttribute("path", "ntzyWpjy.do?method=wpjyCx");
		request.setAttribute("bmList",DAO.getInstance().getBmListAll());//部门List
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		return mapping.findForward("wpjyCx");
	}
	
	/**
	 * wpjyGh
	 * 物品借用归还
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward wpjyGh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		NtzyWpjyService service = new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		
		String act=request.getParameter("act");
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		String userName=session.getAttribute("userName").toString();
		
		if("modi".equalsIgnoreCase(doType)){
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			//批量归还（撤消）
			this.auditingBatchOperation(request, primaryMap, service.getGhwpMap(userName,act), "ntzy_wpjyb");
			doType="qry";
		}
		
		if("qry".equalsIgnoreCase(doType)){
			String []outputColumn ={"pkValue","disabled","sqr","xn","xqmc","jbr","jyrq","sqbm","ysr","ghrq"};
			service.setWpgh(request, userType);
			this.selectPageDataByPagination(request, wpjyForm, "ntzy_wpjyb", "view_ntzy_wpjy", outputColumn);
		}
		
		request.setAttribute("path", "ntzyWpjy.do?method=wpjyGh");
		request.setAttribute("bmList",DAO.getInstance().getBmListAll());//部门List
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		return mapping.findForward("wpjyGh");
	}
	
	
	/**
	 * wpjySh
	 * 物品借用审核
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward wpjySh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		NtzyWpjyService service = new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		String userDep= session.getAttribute("userDep").toString();
		String shjg=request.getParameter("shjg");
		if("save".equalsIgnoreCase(doType)){
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			//批量审核
			this.auditingBatchOperation(request, primaryMap, service.getValueMap(request, userType, shjg), "ntzy_wpjyb");
			doType="qry";
		}
		
		if(!"admin".equalsIgnoreCase(userType)
				&& !"xx".equalsIgnoreCase(userType)){
			wpjyForm.setBmdm(userDep);
			request.setAttribute("isBmyh", "true");
		}
		
		if("qry".equalsIgnoreCase(doType)){
			String []outputColumn ={"pkValue","disabled","sqr","xn","xqmc","jbr","jyrq","sqbm","xysh","xxsh"};
			service.setDisabled(request, userType,userDep);
			this.selectPageDataByPagination(request, wpjyForm, "ntzy_wpjyb", "view_ntzy_wpjy", outputColumn);
		}
		
		request.setAttribute("path", "ntzyWpjy.do?method=wpjySh");
		request.setAttribute("bmList",DAO.getInstance().getBmListAll());//部门List
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		return mapping.findForward("wpjySh");
	}
	
	
	/**
	 * shOneWpjy
	 * 物品借用，单审
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward shOneWpjy(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		NtzyWpjyService service=new NtzyWpjyService();
		
		String userType=session.getAttribute("userType").toString();
		String doType=request.getParameter("doType");
		String pkValue= request.getParameter("pkValue");
		if("save".equalsIgnoreCase(doType)){
			this.updateOperation(request, "ntzy_wpjyb");
		}
		
		
		this.selectPageDataByOne(request, "ntzy_wpjyb", "view_ntzy_wpjy", pkValue);
		HashMap<String,String>hashMap=(HashMap<String,String>)request.getAttribute("rs");
		if("admin".equalsIgnoreCase(userType)
				||"xx".equalsIgnoreCase(userType)){
			wpjyForm.setSave_xxsh(hashMap.get("xxsh"));
		}else {
			wpjyForm.setSave_xysh(hashMap.get("xysh"));
		}
		
		service.getShql(request, hashMap, userType);
		request.setAttribute("path", "ntzyWpjy.do?method=wpjyCx");
		request.setAttribute("bmList",DAO.getInstance().getBmListAll());//部门List
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		request.setAttribute("option", "shone");
		return mapping.findForward("wpjySq");
	}
	
	public ActionForward wpjySqb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {	
		NtzyWpjyService service=new NtzyWpjyService();
		String pkValue = request.getParameter("pkValue");
		if(!"".equalsIgnoreCase(pkValue) && !Base.isNull(pkValue)){
			this.selectPageDataByOne(request,"ntzy_wpjyb", "view_ntzy_wpjy",  pkValue);
			HashMap<String,String>map=(HashMap<String,String>)request.getAttribute("rs");
			
			request.setAttribute("map", map);
			
		}
		List<String[]>wpbxx=service.getWpbXx(pkValue);
		request.setAttribute("wpbxx", wpbxx);
		return mapping.findForward("wpjySqb");
	}
	
	
	/**
	 * 数据导出
	 * method expDate
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception 
	 * @throws IOException 
	 */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception {
		//从页面获得要导出的表名
		
		NtzyWpjyService service =new NtzyWpjyService();
		NtzyWpjyForm wpjyForm=(NtzyWpjyForm)form;
		String viewName=request.getParameter("daochus");
		
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		

		service.expDate(response.getOutputStream(), wpjyForm, request,viewName);	
		
		return mapping.findForward("");
	}
}