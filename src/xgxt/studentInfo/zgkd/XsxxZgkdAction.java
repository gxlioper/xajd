/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.zgkd;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.String.StringUtils;

import com.zfsoft.basic.BasicAction;
import common.Globals;
import common.GlobalsVariable;

/**
 * <p>Title: 学生工作管理系统</p>
 * <p>Description: 中国矿业大学学生信息Action
 * <p>Copyright: Copyright (c) 2008</p>
 * <p>Company: zfsoft</p>
 * <p>Author: 李容</p>
 * <p>Version: 1.0</p>
 * <p>Time: 2008-09-03</p>
 */
public class XsxxZgkdAction extends BasicAction {	
	
	/***
	 * 加载页面参数
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 * @return void
	 * */
	public void appendProperties(HttpServletRequest request, String xydm,
			String zydm, String nj) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		String xy = "";
		String zy = "";
		String njLocal = nj;
		xy = xy==null ? "": (xydm==null ? "" : xydm); 
		zy = zy==null ? "": (zydm==null ? "" : zydm); 
		njLocal = nj==null ? "": nj;
		String zyKey = xy==null ? "":xy; 
		String bjKey = xy+"!!"+zy+"!!"+njLocal;
		String userType = request.getSession().getAttribute("userType").toString();
//		String writeAble = Base.getWriteAble(request);
		request.setAttribute("mzList", service.getMzList());
		request.setAttribute("zzmmList", service.getZzmmList());
		request.setAttribute("writeAble", "yes");//判断用户读写权
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		request.setAttribute("njList", Base.getNjList());//年级列表
		request.setAttribute("xyList", Base.getXyList());//学院列表
		request.setAttribute("zyList", Base.getZyMap().get(zyKey));//专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));//班级列表
		request.setAttribute("userType", userType);//用户类型
		
	}
	
	/** 
	 * 显示分配维护学生信息字段权限页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dispatchPower(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxZgkdForm model = (XsxxZgkdForm)form;
		//学生信息字段列表;
		List<HashMap<String, String>> xsxxzdList = service.getXsxxzdList();
		//学生家庭信息字段列表;
		List<HashMap<String, String>> jtxxzdList = service.getJtxxzdList();		
		//用户列表
		List<HashMap<String, String>> yhList = service.getYhList();
		
		//默认设置‘学生’的字段
		model.setYhjs(StringUtils.isNull(model.getYhjs()) ? "student" : model.getYhjs());
		//学号字段不提供修改
		HashMap<String, String> xhMap = new HashMap<String, String>();		
		xhMap.put("en", "xh");
		xhMap.put("cn", "学号");
		xsxxzdList.remove(xhMap);
		
		request.setAttribute("xsxxzdList", xsxxzdList);
		request.setAttribute("jtxxzdList", jtxxzdList);
		request.setAttribute("yhList", yhList);
		request.setAttribute("path", "xsxx_zgkd.do?method=dispatchPower");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("success");
	}
	
	/** 
	 * 保存维护字段权限信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward powerSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XsxxZgkdForm qxxx = (XsxxZgkdForm) form;
		XsxxZgkdService service = new XsxxZgkdService();
		String xsxxzd = request.getParameter("xsxxzd");
		String jtxxzd = request.getParameter("jtxxzd");
		
		qxxx.setXsxxzd(xsxxzd);
		qxxx.setJtxxzd(jtxxzd);
		
		request.setAttribute("result", service.savePower(qxxx,request));
		request.setAttribute("xsxxzdList", service.getXsxxzdList());
		request.setAttribute("jtxxzdList", service.getJtxxzdList());
		request.setAttribute("yhList", service.getYhList());	
		request.setAttribute("path", "xsxx_zgkd.do?method=dispatchPower");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("success");
	}
	
	/** 
	 * 显示学生或学院用户修改学生信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuModiInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxglService xsxxglService = new XsxxglService();
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = "";
		if(userOnLine != null && "student".equalsIgnoreCase(userOnLine)){
			yhjs = userOnLine;
			xh = userName;
			String shjg = service.getXxshjg(xh);
			if(shjg!=null && shjg.equalsIgnoreCase("不通过")){
				request.setAttribute("shjg", "shjg");
			}
		}else{
			xh = request.getParameter("xh");
		}
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs);
		//学生可维护的字段的原始值
		HashMap<String, String> rs = service.getStuAndFamily(xh,yhjs);
		//判断是否在设定的修改时间段内
		String sqsjFlag = service.isSqqjFlag();//1：不在申请时间内
		
		request.setAttribute("pksdj", service.getPksdj(xh));//贫困生提示
		request.setAttribute("sqsjFlag", sqsjFlag);
		request.setAttribute("rs", rs);
		request.setAttribute("zdList", zdList);
		appendProperties(request,"","","");
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));
		return mapping.findForward("stumodi");
	}
	
	/** 
	 * 学生和学院用户修改后的信息保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuinfoModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		boolean flag = false;
		if(userOnLine !=null && userOnLine.equalsIgnoreCase("student")){
			yhjs = "student";
			xh = userName;
			flag = service.saveStuinfoModi(yhjs,xh,request);
		}else{
			flag = service.saveStuinfoByXy(yhjs, xh, request);
		}			
		
		request.setAttribute("pksdj", service.getPksdj(xh));
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		return stuModiInfo(mapping, form, request, response);
	}
	
	/**
	 * 学生修改信息审核
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @throws Exception 
	 * */	
	public ActionForward stuModiAuditing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxZgkdService service = new XsxxZgkdService();
		HttpSession session = request.getSession();
		XsxxZgkdForm model = (XsxxZgkdForm) form;
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();
		String go = request.getParameter("go");
		
		if(userType != null && userType.equalsIgnoreCase("xy")){
			model.setXydm(userDep);
		}
		if(Globals.XXDM_BJQNZZXY.equalsIgnoreCase(Base.xxdm)
				&& !"true".equalsIgnoreCase(request.getSession().getAttribute("fdyQx").toString())){
			model.setFdysh("通过");
		}
		List<String[]> rs = null;
		if(go!=null && go.equalsIgnoreCase("go")){
			//查询
			rs = service.getStuInfoAudi(model,request);
			
			request.setAttribute("searchTj", model.getSearchModel());
		}else{
			//TODO 这个地方可以直接将Pages类的maxPage和maxRecord的默认值设置为0, 这涉及到通用的类，如果要修改，先同大师讲明
			model.getPages().setMaxPage(0);
			model.getPages().setMaxRecord(0);
		}

		request.setAttribute("topTr", service.getTopTr());
		request.setAttribute("rs", rs);
		request.setAttribute("rsNum", rs != null ? rs.size() : 0);
		request.setAttribute("pageSize", model.getPages().getPageSize());
		request.setAttribute("path", "xsxx_zgkd.do?method=stuModiAuditing");
		
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		return mapping.findForward("stuInfoAudi");
	}
	
	/** 
	 *显示学生修改信息后的页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward showStuCheck(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		String xh = DealString.toGBK(request.getParameter("xh").trim());
		//运行版本
		String version = Base.getEdition();
		
		//修改字段
		request.setAttribute("xgzd", service.getXgzdxx(xh).get("xgzd"));
		request.setAttribute("newValue", service.getNewValue(xh));
		request.setAttribute("oldValue", service.getOldValue(xh));
		request.setAttribute("chkList", service.getChkList(2));
		appendProperties(request, "", "", "");
		request.setAttribute("path", "xsxx_zgkd.do?method=stuModiAuditing");
		FormModleCommon.commonRequestSet(request);
		
		//版本信息
		request.setAttribute("edition", version);
		return mapping.findForward("new".equalsIgnoreCase(version) ? "xsxxshOne" : "stuCheckOne");
	}	
	
	/** 
	 *学生信息修改单个审核
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveAutidting(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		String yesNo = DealString.toGBK(request.getParameter("yesNo"));
		String xh = request.getParameter("xh");
		//保存审核结果
		request.setAttribute("xh", xh);		
		request.setAttribute("result", service.saveAuditing(xh,yesNo,request));
		request.setAttribute("path", "xsxx_zgkd.do?method=stuModiAuditing");
		FormModleCommon.commonRequestSet(request);
		return showStuCheck(mapping, form, request, response);
	}
	
	/** 
	 *学生信息修改批量审核
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveAutiBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxZgkdForm model = (XsxxZgkdForm) form;
		String yesNo = DealString.toGBK(request.getParameter("yesNo"));
		String[] value = model.getCbv();
		//保存审核结果
		request.setAttribute("result", service.saveAutiBatch(value,yesNo,request));
		return stuModiAuditing(mapping, form, request, response);
	}
	

	/**
	 * 显示学校维护学生信息页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward showStuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();	
		XsxxglService xsxxglService = new XsxxglService();
		String tableName = request.getParameter("realTable");		
		String page = "stu_info";
		String yhjs = session.getAttribute("userType").toString();
		if(yhjs !=null && "admin".equalsIgnoreCase(yhjs)){
			yhjs = "xx";
		}
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs,tableName);
		String xh = request.getParameter("xh");
		//学生可维护的字段的原始值
		HashMap<String, String> rs = service.getStuAndFamily(xh,yhjs);	
		
		request.setAttribute("pksdj", service.getPksdj(xh));
		request.setAttribute("rs", rs);
		request.setAttribute("zdList", zdList);
		appendProperties(request, "", "", "");
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));//学籍状态名称
		return mapping.findForward(page);
	}	
	
	/** 
	 * 学校用户修改后的信息保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		boolean flag = false;
		
		flag = service.saveStuinfoByXy(yhjs, xh, "xsxxb", request);					
		
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		request.setAttribute("pksdj", service.getPksdj(xh));		
		return showStuInfo(mapping, form, request, response);
	}
	
	/**
	 * 显示学校维护学生家庭信息页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward showStuFamily(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();	
		String tableName = "xsfzxxb";
		String yhjs = session.getAttribute("userType").toString();
		if(yhjs !=null && "admin".equalsIgnoreCase(yhjs)){
			yhjs = "xx";
		}
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs,tableName);
		String xh = request.getParameter("xh");
		//学生可维护的字段的原始值
		HashMap<String, String> rs = service.getStuAndFamily(xh,yhjs);
		
		request.setAttribute("rs", rs);
		request.setAttribute("zdList", zdList);
		appendProperties(request, "", "", "");
		return mapping.findForward("stu_family");
	}
	
	/** 
	 * 学校用户修改学生家庭信息后的保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuFamily(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		boolean flag = false;
		
		flag = service.saveStuinfoByXy(yhjs, xh,"xsfzxxb", request);					
		
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		return showStuFamily(mapping, form, request, response);
	}	
}