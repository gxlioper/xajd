/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.portallet;

import java.util.List;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.DAO.DAO;
import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.studentInfo.model.StudentInfoForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-13-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class StudentForPortalletAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward stuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		// 数据查询
		StudentInfoForm dataSearchForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);	
		String xxdm = StandardOperation.getXxdm();
		boolean disabled = true;
		DAO  dao = DAO.getInstance();
		Vector<Object> rs = new Vector<Object>();
		String[] colList = null;
		String[] colListCN = null;
		
		String tableName = "view_xsjbxx";		
		String sql = "";// sql语句		
		String rsNum = "0";// 返回的记录数
		
		String xh = dataSearchForm.getXh();
		String xm = DealString.toGBK(dataSearchForm.getXm());
		
		dataSearchForm.setXm(xm);
		//组合查询条件
		StringBuffer querry = new StringBuffer(" where 1=1");
		querry.append(xh==null || "".equalsIgnoreCase(xh) ? "" : " and xh like '%"+xh+ "%' ");
		querry.append(xm==null || "".equalsIgnoreCase(xm) ? "" : " and xm like '%"+xm+"%' ");
		
		colList = new String[] { "行号","r", "xh", "xm", "xb"};
		StringBuffer temSql = new StringBuffer();
		temSql.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc ,a.ssbh from "+tableName+" a ");
		temSql.append(querry);
		temSql.append(") where r<=");
		temSql.append(dataSearchForm.getPages().getStart()+dataSearchForm.getPages().getPageSize());
		temSql.append(") where r>");
		temSql.append(dataSearchForm.getPages().getStart());
		sql = temSql.toString();
		
		colListCN = dao.getColumnNameCN(colList, tableName);		
		List topTr = dao.arrayToList(colList, colListCN);
		//查询
		if ((request.getParameter("go") != null)&& request.getParameter("go").equalsIgnoreCase("go")) {			
			rs.addAll(dao.rsToVator(sql, new String[] {}, colList));
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}			
		}
		//TODO 分页设置 
		sql = "select count(*) count from "+tableName+" a" + querry;
		dataSearchForm.getPages().setMaxRecord(Integer.parseInt(dao.getOneRs(sql, new String[]{}, "count")));
		
		request.setAttribute("xxdm",xxdm);
		request.setAttribute("disabled", disabled);		
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		return mapping.findForward("sucess");
	}
	
}