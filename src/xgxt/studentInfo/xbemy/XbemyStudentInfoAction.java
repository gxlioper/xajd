  /*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.xbemy;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;


import xgxt.DAO.DAO;
import xgxt.DAO.PicDAO;
import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.base.Excel2Oracle;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.utils.CheckPower;
import xgxt.utils.Fdypd;
import xgxt.utils.dealDate;

/** 
 * MyEclipse Struts
 * Creation date: 04-21-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class XbemyStudentInfoAction extends DispatchAction {
	/** 
	 * 公用的查询方法
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public void baseAction (ActionForm form, String[] outputValue, HttpServletResponse response,HttpServletRequest request) {
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;
		DAO dao = DAO.getInstance();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userDep = session.getAttribute("userDep").toString();
		String userType = dao.getUserType(userDep);
		String go = request.getParameter("go");
		String tableName = request.getParameter("tableName");
		String writeAble = Base.getWriteAble(request);
		
		List rs = null;
		int rsNum = 0;
		List topTr = null;
		String[] colnumCN = null;
		String sql = "";
		
		String nj = xbemy.getNj();
		String xydm = xbemy.getXydm();
		String zydm = xbemy.getZydm();
		String bjdm = xbemy.getBjdm();
		String xh = xbemy.getXh();
		String xm = DealString.toGBK(xbemy.getXm());
		String zkzh = DealString.toGBK(xbemy.getZkzh());
		String zrzymc = DealString.toGBK(xbemy.getZrzymc());
		String zcxxmc = DealString.toGBK(xbemy.getZcxxmc());
		String zczymc = DealString.toGBK(xbemy.getZczymc());
		String zrxxmc = DealString.toGBK(xbemy.getZrxxmc());
//		String lqzydm = xbemy.getLqzydm();
//		String zrzydm = xbemy.getZrzydm();
//		String ydqzydm = xbemy.getYdqzydm();
//		String ydqbjdm = xbemy.getYdqbjdm();
//		String ydhzydm = xbemy.getYdhzydm();
//		String ydhbjdm = xbemy.getYdhbjdm();
		String daqk = xbemy.getDaqk();
		String ddqkdm = xbemy.getDdqkdm();
		String zxlx = DealString.toGBK(xbemy.getZxlx());
		
		xbemy.setXm(xm);
		xbemy.setZkzh(zkzh);
		xbemy.setZrxxmc(zrxxmc);
		xbemy.setZcxxmc(zcxxmc);
		xbemy.setZrzymc(zrzymc);
		xbemy.setZczymc(zczymc);
		
		if(userType!=null && userType.equalsIgnoreCase("xy")){
//			if(tableName!=null && 
//			(tableName.equalsIgnoreCase("xbemy_xszxsqb") 
//					|| tableName.equalsIgnoreCase("view_xbemy_xszzysqb") 
//					|| tableName.equalsIgnoreCase("view_xbemy_xjbdsqb"))){
//				
//			}else{
				xydm = userDep;
				xbemy.setXydm(xydm);
//			}
		}
		
		if(userOnLine!=null && userOnLine.equalsIgnoreCase("student")){
			xbemy.setXh(userName);
		}
		
		xydm = (xydm == null ? "" : xydm);
		zydm = (zydm == null ? "" : zydm);
		nj = (nj == null ? "" : nj);
		String bjKey = xydm + "!!" + zydm + "!!" + nj;
		
		StringBuffer sb = new StringBuffer(" where 1=1 ");
		if(tableName!=null && tableName.equalsIgnoreCase("xbemy_xszxsqb")){
			//学生转学申请查询			
			sb.append(zxlx==null ||"".equalsIgnoreCase(zxlx) ? "" : " and zxlx='" + zxlx + "' ");
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (zcxydm='" + xydm + "' or zrxydm='" + xydm + "') ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (zczydm='" + zydm + "' or zrzydm='" + zydm + "') ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (zcbjdm='" + bjdm + "' or zrbjdm='" + bjdm + "') ");
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xszzysqb")){
			//学生转专业申请查询			
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ZRZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  LQZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (LQZYDM='" + zydm + "' or ZRZYDM='" + zydm + "') ");
			}
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xjbdsqb")){
			//学籍变动
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydhzydm='" + zydm + "'");				
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydhbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydqzydm='" + zydm + "'");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydqbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm and b.bjdm=ydqbjdm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm and b.bjdm=ydhbjdm))");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (ydqzydm='" + zydm + "' or ydhzydm='" + zydm + "') ");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (ydqbjdm='" + bjdm + "' or ydhbjdm='" + bjdm + "') ");
			}
		}else{
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(xydm==null || "".equalsIgnoreCase(nj) ? "" : " and nj='" +nj + "' ");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and xydm='" +xydm + "' ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and zydm='" + zydm + "' ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and bjdm='" + bjdm + "' ");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			sb.append(daqk==null || "".equalsIgnoreCase(daqk) ? "" : " and daqk='" + daqk + "' ");
			sb.append(ddqkdm==null || "".equalsIgnoreCase(ddqkdm) ? "" : " and ddqkdm='" + ddqkdm + "' ");
		}
		if(go!=null && !"".equalsIgnoreCase(go)&& go.equalsIgnoreCase("go")){
			colnumCN = dao.getColumnNameCN(outputValue, tableName);
			topTr = dao.arrayToList(outputValue, colnumCN);
			sql = "select * from " + tableName + sb.toString();
			rs = dao.rsToVator(sql, new String[]{}, outputValue);
			if(rs!=null){
				rsNum = rs.size();
			}
		}				
		
		request.setAttribute("njList", Base.getNjList());
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("rs", rs);	
		request.setAttribute("ddqkList", xbDao.getDDqkList());	
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("topTr", topTr);
	}
	
	/**
	 * 公用的审核查询方法
	 * */
	public void baseAction (ActionForm form, String[] outputValue,HttpServletRequest request,String type) {
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;
		DAO dao = DAO.getInstance();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userDep = session.getAttribute("userDep").toString();
		String userType = dao.getUserType(userDep);
		String go = request.getParameter("go");
		String tableName = request.getParameter("tableName");
		String writeAble = Base.getWriteAble(request);
		String userSpec = session.getAttribute("userType").toString();
		
		List rs = null;
		int rsNum = 0;
		List topTr = null;
		String[] colnumCN = null;
		String sql = "";
		
		String nj = xbemy.getNj();
		String xydm = xbemy.getXydm();
		String zydm = xbemy.getZydm();
		String bjdm = xbemy.getBjdm();
		String xh = xbemy.getXh();
		String xm = DealString.toGBK(xbemy.getXm());
		String zkzh = DealString.toGBK(xbemy.getZkzh());
		String zrzymc = DealString.toGBK(xbemy.getZrzymc());
		String zcxxmc = DealString.toGBK(xbemy.getZcxxmc());
		String zczymc = DealString.toGBK(xbemy.getZczymc());
		String zrxxmc = DealString.toGBK(xbemy.getZrxxmc());
//		String lqzydm = xbemy.getLqzydm();
//		String zrzydm = xbemy.getZrzydm();
//		String ydqzydm = xbemy.getYdqzydm();
//		String ydqbjdm = xbemy.getYdqbjdm();
//		String ydhzydm = xbemy.getYdhzydm();
//		String ydhbjdm = xbemy.getYdhbjdm();
		String zxlx = DealString.toGBK(xbemy.getZxlx());
		
		xbemy.setXm(xm);
		xbemy.setZkzh(zkzh);
		xbemy.setZrxxmc(zrxxmc);
		xbemy.setZcxxmc(zcxxmc);
		xbemy.setZrzymc(zrzymc);
		xbemy.setZczymc(zczymc);		
		
		if(userType!=null && userType.equalsIgnoreCase("xy")){
			if(tableName!=null 
					&& 
			(tableName.equalsIgnoreCase("xbemy_xszxsqb") 
					|| tableName.equalsIgnoreCase("view_xbemy_xszzysqb") 
					|| tableName.equalsIgnoreCase("view_xbemy_xjbdsqb"))){
				
			}else{
				xydm = userDep;
				xbemy.setXydm(xydm);
			}
		}
		
		if(userOnLine!=null && userOnLine.equalsIgnoreCase("xh")){
			xbemy.setXh(userName);
		}
		
		xydm = (xydm == null ? "" : xydm);
		zydm = (zydm == null ? "" : zydm);
		nj = (nj == null ? "" : nj);
		String bjKey = xydm + "!!" + zydm + "!!" + nj;
		
		StringBuffer sb = new StringBuffer(" where 1=1 ");
		if(tableName!=null && tableName.equalsIgnoreCase("xbemy_xszxsqb")){
			//学生转学申请查询			
			sb.append(zxlx==null ||"".equalsIgnoreCase(zxlx) ? "" : " and zxlx='" + zxlx + "' ");
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (zcxydm='" + xydm + "' or zrxydm='" + xydm + "') ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (zczydm='" + zydm + "' or zrzydm='" + zydm + "') ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (zcbjdm='" + bjdm + "' or zrbjdm='" + bjdm + "') ");
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xszzysqb")){
			//学生转专业申请查询			
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ZRZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  LQZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (LQZYDM='" + zydm + "' or ZRZYDM='" + zydm + "') ");
			}
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xjbdsqb")){
			//学籍变动
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydhzydm='" + zydm + "'");				
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydhbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydqzydm='" + zydm + "'");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydqbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm and b.bjdm=ydqbjdm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm and b.bjdm=ydhbjdm))");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (ydqzydm='" + zydm + "' or ydhzydm='" + zydm + "') ");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (ydqbjdm='" + bjdm + "' or ydhbjdm='" + bjdm + "') ");
			}
		}else{
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and xydm='" +xydm + "' ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and zydm='" + zydm + "' ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and bjdm='" + bjdm + "' ");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
//			sb.append(daqk==null || "".equalsIgnoreCase(daqk) ? "" : " and daqk='" + daqk + "' ");
//			sb.append(ddqkdm==null || "".equalsIgnoreCase(ddqkdm) ? "" : " and ddqkdm='" + ddqkdm + "' ");
		}
		
		//学院只能查询到本学院的相关信息
		if(userType!=null && userType.equalsIgnoreCase("xy")){
			if(tableName != null && tableName.equalsIgnoreCase("view_xbemy_xszzysqb")){
				sb.append(" and (a.zrxydm=");
				sb.append(userDep);
				sb.append(" or a.zcxydm=");
				sb.append(userDep);
				sb.append(") ");
			}
			if(tableName != null && tableName.equalsIgnoreCase("view_xbemy_xjbdsqb")){
				sb.append(" and (a.ydqxydm=");
				sb.append(userDep);
				sb.append(" or a.ydhxydm=");
				sb.append(userDep);
				sb.append(") ");
			}
		}
		
		if(go!=null && !"".equalsIgnoreCase(go)&& go.equalsIgnoreCase("go")){
			colnumCN = dao.getColumnNameCN(outputValue, tableName);
			topTr = dao.arrayToList(outputValue, colnumCN);
			if(type.equalsIgnoreCase("transferSpec")){
				//转专业
				if(userType.equalsIgnoreCase("xy") || userSpec.equalsIgnoreCase("admin")){
					sql = "select a.*,(case when (a.zczyxysh='不通过' or a.zrzyxysh='不通过') then '#99CCFF' else '#FFffff' end) bgcolor from " + tableName + " a " + sb.toString() + " order by a.zczyxysh desc";
				}else{
					sql = "select a.*,'' bgcolor from " + tableName + " a " + sb.toString() + " and a.zczyxysh='通过' and a.zrzyxysh='通过' order by a.zrzyxysh desc";
				}
			}else if(type.equalsIgnoreCase("transferStatus")){
				//学籍变动
				if(userType.equalsIgnoreCase("xy") || userSpec.equalsIgnoreCase("admin")){
					sql = "select a.*,(case a.xsszysh when '不通过' then '#FF9999' when '通过' then '#99CCFF' else '#ffffff' end) bgcolor from " + tableName + " a " + sb.toString() + " order by a.xsszysh desc";
				}else{
					sql = "select a.*,'' bgcolor from " + tableName + " a " + sb.toString() + " and a.xsszysh='通过' order by xsszysh";
				}
			}else if(type.equalsIgnoreCase("transferSchool")){
				//转学
				sql = "select a.*,(case nvl(a.xxsh,'未审核') when '通过' then '#99CCFF' when '未审核' then '#ffffff' else '#FF9999' end) bgcolor from " + tableName + " a " + sb.toString() + " order by a.xxsh desc";
			}
			
			rs = dao.rsToVator(sql, new String[]{}, outputValue);
			if(rs!=null){
				rsNum = rs.size();
			}
		}		
		
		request.setAttribute("njList", Base.getNjList());
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("rs", rs);		
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("mzList",dao.getMzList());
		request.setAttribute("topTr", topTr);
		
		//学院只能查询到本学院的相关信息
		if(userType!=null && userType.equalsIgnoreCase("xy")){
			request.setAttribute("zyList", xbDao.getZyListByXydm(userDep));
			request.setAttribute("bjList", xbDao.getBjListByXydm(userDep));
		}
	}
	
	/**
	 * 导出数据方法
	 * */
	public ActionForward expData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {		
		XbemyStudentInfoForm xbForm = (XbemyStudentInfoForm) form;
		String tableName = request.getParameter("tableName");
		String realTable = request.getParameter("realTable");
		
		//String[] colList = null;
		String sql = "";// sql语句
		String zd = " * ";
		StringBuffer sb = new StringBuffer(" where 1=1 ");
		
		String xh = xbForm.getXh();
		String xm = DealString.toGBK(xbForm.getXm());
		String zkzh = DealString.toGBK(xbForm.getZkzh());
//		String zrzymc = DealString.toGBK(xbForm.getZrzymc());
//		String zcxxmc = DealString.toGBK(xbForm.getZcxxmc());			
//		String zczymc = DealString.toGBK(xbForm.getZczymc());
//		String zrxxmc = DealString.toGBK(xbForm.getZrxxmc());
//		String lqzydm = xbForm.getLqzydm();
//		String zrzydm = xbForm.getZrzydm();
//		String ydqbjdm = xbForm.getYdqbjdm();
//		String ydqzydm = xbForm.getYdqzydm();
//		String ydhbjdm = xbForm.getYdhbjdm();
//		String ydhzydm = xbForm.getYdhzydm();
		String xydm = xbForm.getXydm();
		String zydm = xbForm.getZydm();
		String bjdm = xbForm.getBjdm();
		String ddqkdm = xbForm.getDdqkdm();
		String daqk = xbForm.getDaqk();
		String zxlx = DealString.toGBK(xbForm.getZxlx());
		
		
		if(tableName!=null && tableName.equalsIgnoreCase("xbemy_xszxsqb")){
			//学生转学申请查询			
			sb.append(zxlx==null ||"".equalsIgnoreCase(zxlx) ? "" : " and zxlx='" + zxlx + "' ");
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (zcxydm='" + xydm + "' or zrxydm='" + xydm + "') ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (zczydm='" + zydm + "' or zrzydm='" + zydm + "') ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (zcbjdm='" + bjdm + "' or zrbjdm='" + bjdm + "') ");
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xszzysqb")){
			//学生转专业申请查询			
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ZRZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  LQZYDM='" + zydm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=lqzydm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=zrzydm)");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (LQZYDM='" + zydm + "' or ZRZYDM='" + zydm + "') ");
			}
		}else if(tableName!=null && tableName.equalsIgnoreCase("view_xbemy_xjbdsqb")){
			//学籍变动
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			if(zxlx!=null && zxlx.equalsIgnoreCase("转入")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydhzydm='" + zydm + "'");				
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydhbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm)");
			}else if(zxlx!=null&& zxlx.equalsIgnoreCase("转出")){
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and  ydqzydm='" + zydm + "'");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and  ydqbjdm='" + bjdm + "'");
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm)");
			}else{
				sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and (exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydqzydm and b.bjdm=ydqbjdm) or exists(select 1 from view_njxyzybj b where b.xydm='" + xydm + "' and b.zydm=ydhzydm and b.bjdm=ydhbjdm))");
				sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and (ydqzydm='" + zydm + "' or ydhzydm='" + zydm + "') ");
				sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and (ydqbjdm='" + bjdm + "' or ydhbjdm='" + bjdm + "') ");
			}
		}else{
			sb.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
			sb.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
			sb.append(xydm==null || "".equalsIgnoreCase(xydm) ? "" : " and xydm='" +xydm + "' ");
			sb.append(zydm==null || "".equalsIgnoreCase(zydm) ? "" : " and zydm='" + zydm + "' ");
			sb.append(bjdm==null || "".equalsIgnoreCase(bjdm) ? "" : " and bjdm='" + bjdm + "' ");
			sb.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh='" + zkzh + "' ");
			sb.append(daqk==null || "".equalsIgnoreCase(daqk) ? "" : " and daqk='" + daqk + "' ");
			sb.append(ddqkdm==null || "".equalsIgnoreCase(ddqkdm) ? "" : " and ddqkdm='" + ddqkdm + "' ");
		}
//		querry.append(xh==null ||"".equalsIgnoreCase(xh) ? "" : " and xh = '" + xh + "'");
//		querry.append(xm==null ||"".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%'");
//		querry.append(zrzymc==null || "".equalsIgnoreCase(zrzymc) ? "" : " and zrzymc='" + zrzymc + "' ");
//		querry.append(zcxxmc==null || "".equalsIgnoreCase(zcxxmc) ? "" : " and zcxxmc='" + zcxxmc + "' ");
//		querry.append(zczymc==null || "".equalsIgnoreCase(zczymc) ? "" : " and zczymc='" + zczymc + "' ");
//		querry.append(zrxxmc==null || "".equalsIgnoreCase(zrxxmc) ? "" : " and zrxxmc='" + zrxxmc + "' ");
//		querry.append(zkzh==null || "".equalsIgnoreCase(zkzh) ? "" : " and zkzh=" + zkzh);
//		querry.append(lqzydm==null || "".equalsIgnoreCase(lqzydm) ? "" : " and lqzydm='" + lqzydm + "' ");
//		querry.append(zrzydm==null || "".equalsIgnoreCase(zrzydm) ? "" : " and zrzydm='" + zrzydm + "' ");
//		querry.append(ydqbjdm==null || "".equalsIgnoreCase(ydqbjdm) ? "" : " and ydqbjdm='" + ydqbjdm + "' ");
//		querry.append(ydqzydm==null || "".equalsIgnoreCase(ydqzydm) ? "" : " and ydqzydm='" + ydqzydm + "' ");
//		querry.append(ydhbjdm==null || "".equalsIgnoreCase(ydhbjdm) ? "" : " and ydhbjdm='" + ydhbjdm + "' ");
//		querry.append(ydhzydm==null || "".equalsIgnoreCase(ydhzydm) ? "" : " and ydhzydm='" + ydhzydm + "' ");
		
		sql = "select " + zd + "from " + tableName + sb;
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		Excel2Oracle.exportData(sql, realTable, response.getOutputStream());
		return mapping.findForward("success");
	}
	
	
	/**
	 *西北二民院入学档案信息查询
	 * */
	public ActionForward enrollmentArchive (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String[] outputValue = {"xh", "xm", "xb", "nj", "xymc", "zymc", "bjmc", "ddqkmc"};
		String doType = request.getParameter("doType");
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if(doType != null && doType.equalsIgnoreCase("del")){
			boolean flag = false;
			String xh = request.getParameter("xh");		
			xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
			String tabName = "xbemy_rxdab";
			flag = xbDao.delInfoByPk(tabName, "xh", xh, request);
			request.setAttribute("result", flag);
		}
		//调用公共查询方法
		this.baseAction( form , outputValue, response,request);
		
		return mapping.findForward("enrollment_archive");
	}
	
	
	/**
	 * 西北二民院入学档案信息保存
	 * */
	@SuppressWarnings("static-access")
	public ActionForward showEnrollmentArchive (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String xh = request.getParameter("xh");
		xh = (xh ==null || "".equalsIgnoreCase(xh)) ? "" : xh.trim();
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;	
		HashMap<String, String> rs = new HashMap<String, String>();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		String doType = request.getParameter("doType");
		String tabName = "";
		String[] input = null;		
		List ddqkList = null;
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			boolean flag = false;
			tabName = "xbemy_rxdab";
			input = new String[]{"xh","daqk","bz"};
			flag = xbDao.saveInfo(xbemy, input, new String[]{"xh"}, tabName, request);
			request.setAttribute("result", flag);
		}
		
		tabName = "view_xbemy_rxdab";
		input = new String[]{"xh", "xm", "xb", "nj", "xymc", "zymc", "bjmc", "mzmc","syd","daqk","bz"};
		rs = xbDao.getInfoByPk(tabName, "xh", xh, input,true);
		rs.putAll(xbDao.getStuInfo(xh));
		ddqkList = xbDao.getDDqkList();
		
		if(rs != null){
			String xb = rs.get("xb");
			if(xb != null && "男".equalsIgnoreCase(xb)){
				rs.put("xb", "1");
			}else{
				rs.put("xb", "2");
			}
		}
		
		request.setAttribute("ddqkList", ddqkList);
		request.setAttribute("rs", rs);
		
		return mapping.findForward("show_enrollment_archive");
	}
	
	
	/**
	 * 西北二民院毕业档案查询、删除
	 * */
	public ActionForward graduateArchive(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String[] outputValue = {"xh","xm","xb","nj","xymc","zymc","bjmc","pqdwmc", "ffsj", "pqzbh","qdrxm","ddqkmc"};
		String doType = request.getParameter("doType");
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if(doType != null && doType.equalsIgnoreCase("del")){
			boolean flag = false;
			String xh = request.getParameter("xh");		
			xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
			String tabName = "xbemy_bydab";
			flag = xbDao.delInfoByPk(tabName, "xh", xh, request);
			request.setAttribute("result", flag);
		}
		this.baseAction( form , outputValue, response,request);
		
		return mapping.findForward("graduate_archive");
	}
	
	
	/**
	 * 西北二民院毕业档案信息保存
	 * */
	public ActionForward showGraduateArchive (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String xh = request.getParameter("xh");
		xh = (xh ==null || "".equalsIgnoreCase(xh)) ? "" : xh.trim();
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;	
		HashMap<String, String> rs = new HashMap<String, String>();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		String doType = request.getParameter("doType");
		String tabName = "";
		String[] input = null;
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			boolean flag = false;
			tabName = "xbemy_bydab";
			input = new String[]{"xh","pqdwmc","ffsj","pqzbh","qdrxm","bz","ddqkdm"};
			flag = xbDao.saveInfo(xbemy, input, new String[]{"xh"}, tabName, request);
			request.setAttribute("result", flag);
		}
		
		tabName = "view_xbemy_bydab";
		input = new String[]{"xh", "xm", "xb", "nj", "xymc", "zymc", "bjmc","pqdwmc","ffsj","pqzbh","qdrxm","bz","ddqkdm"};
		rs = xbDao.getInfoByPk(tabName, "xh", xh, input,true);
		
		request.setAttribute("ddqkList", xbDao.getDDqkList());
		request.setAttribute("rs", rs);
		return mapping.findForward("show_graduate_archive");
	}
	
	
	/**
	 * 西北二民院转学申请
	 * */	
	public ActionForward showTransferApp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {		
		DAO dao = DAO.getInstance();		
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;	
		HashMap<String, String> rs = new HashMap<String, String>();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		String writeAble = Base.getWriteAble(request);
		String userName = request.getSession().getAttribute("userName").toString();
		String userOnLine = request.getSession().getAttribute("userOnLine").toString();
		writeAble = CheckPower.checkUsrPageAccessPower(userOnLine,userName, "xbemyStuStatus.do?method=showTransferApp")==true ? "yes" : "no";
		String xxmc = StandardOperation.getXxmc();
//		学院专业班级
		String xydm = xbemy.getXydm();
		String zydm = xbemy.getZydm();
		String nj = xbemy.getNj();
		xydm = xydm==null ||"".equalsIgnoreCase(xydm) ? "" : xydm;
		zydm = zydm==null ||"".equalsIgnoreCase(zydm) ? "" : zydm;
		nj = nj==null ||"".equalsIgnoreCase(nj) ? "" : nj;
		String bjKey = xydm+ "!!" + zydm + "!!" + nj;
		
		String xh = request.getParameter("xh");
		String sqrq = request.getParameter("sqrq");
		sqrq = (sqrq == null || "".equalsIgnoreCase(sqrq) ? "" : sqrq.trim());
		xh = (xh ==null || "".equalsIgnoreCase(xh)) ? "" : xh.trim();
		String type = request.getParameter("type");
		
		String page = "";		
		String doType = request.getParameter("doType");
		String tabName = "";
		String[] input = null;
		List mzList = dao.getMzList();		
		
		xh = userOnLine.equalsIgnoreCase("student") ? userName : xh;
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			boolean flag = false;
			tabName = "xbemy_xszxsqb";
			sqrq = xbemy.getSqrq();
			if(sqrq==null || "".equalsIgnoreCase(sqrq)){
				sqrq = dao.getOneRs("select to_char(sysdate,'yyyy-mm-dd') tim from dual", new String[]{}, "tim");
			}		
			xbemy.setSqrq(sqrq);
			input = new String[]{"xh", "xm", "xb", "zkzh", "mzdm","zzmm", "rxsj", "lxdh", "zcxxmc","zcxymc","zcxydm",
					"zczydm", "zczymc","zcbjdm","zcnj", "zcxz","zcxlcc", "zrxxmc","zrxydm","zrxymc","zrzymc", "zrzydm",
					"zrbjdm","zrnj", "zrxz", "zrxlcc", "sqly", "zcxxyj", "zrxxyj", "zylb","zyfx","fxzy","fxzyfx",
					"bxlx","bxxs","xxxs","zsjj","xxszd","xjztm","cym","ksh","jg","csd","byrq","bjyjl","zsbh","zsxlh",
					"xw","xwzsbh","xwzsxlh","xzxm","shbj","dybj","thbs","bz","pyfx",
					"zcsjytyj", "zrsjytyj", "sqrq", "zxlx","sfzh","csrq","syd"};
			flag = xbDao.saveInfo(xbemy, input, new String[]{"xh","sqrq"}, tabName, request);
			request.setAttribute("result", flag);
		}
		
		tabName = "xbemy_xszxsqb";
		input = new String[]{"xh", "xm", "xb", "zkzh", "mzdm","zzmm", "rxsj", "lxdh", "zcxxmc","zcxymc","zcxydm",
				"zczydm", "zczymc","zcbjdm","zcnj", "zcxz","zcxlcc", "zrxxmc","zrxydm","zrxymc","zrzymc", "zrzydm",
				"zrbjdm","zrnj", "zrxz", "zrxlcc", "sqly", "zcxxyj", "zrxxyj", "zylb","zyfx","fxzy","fxzyfx",
				"bxlx","bxxs","xxxs","zsjj","xxszd","xjztm","cym","ksh","jg","csd","byrq","bjyjl","zsbh","zsxlh",
				"xw","xwzsbh","xwzsxlh","xzxm","shbj","dybj","thbs","bz","pyfx",
				"zcsjytyj", "zrsjytyj", "sqrq", "zxlx","sfzh","csrq","syd"};
		rs = xbDao.getInfoByPk(tabName, "xh||sqrq", xh+sqrq, input,false);
		if(sqrq!=null && !"".equalsIgnoreCase(sqrq)){
			if(rs.get("zxlx")!=null && rs.get("zxlx").equalsIgnoreCase("转出")){
				type="outTransfer";
			}
			if(rs.get("zxlx")!=null && rs.get("zxlx").equalsIgnoreCase("转入")){
				type="inTransfer";
			}					
		}
		if(rs==null){
			rs = new HashMap<String, String>();			
		}
		
		if(type!=null && type.equalsIgnoreCase("outTransfer")){
			page = "transfer_app";		
			type = "转出";
			rs.put("zcxxmc", xxmc);
		}
		if(type!=null && type.equalsIgnoreCase("inTransfer")){
			page = "inSchTransfer";
			type = "转入";	
			rs.put("zrxxmc", xxmc);
		}
		rs.put("zxlx", type);		
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));
		request.setAttribute("njList", Base.getNjList());		
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("mzList", mzList);
		request.setAttribute("zzmmList", dao.getZzmmList());
		request.setAttribute("rs", rs);		
		return mapping.findForward(page);
	}
	
	/**
	 * 西北二民院转学申请查询、删除
	 * */
	public ActionForward stuTransferQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String[] outputValue = {"sqrq","xh", "xm", "xb", "zkzh","zcxxmc","zrxxmc","zcxxyj","zrxxyj","zcsjytyj","zrsjytyj","xxsh"};
		String doType = request.getParameter("doType");
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if(doType != null && doType.equalsIgnoreCase("del")){
			boolean flag = false;
			String tabName = "xbemy_xszxsqb";
			String xh = request.getParameter("xh");	
			String sqrq = request.getParameter("sqrq");
			xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
			sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();
			
			flag = xbDao.delInfoByPk(tabName, "xh||sqrq", xh+sqrq, request);
			request.setAttribute("result", flag);
		}
		this.baseAction( form , outputValue, response,request);
		
		return mapping.findForward("transfer_querry");
	}
	
	
	/**
	 * 西北二民院转学审核
	 * */
	public ActionForward stuTransferAuditing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		boolean flag = false;
		XbemyStudentInfoForm xbForm = (XbemyStudentInfoForm) form;
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		HashMap<String, String> map = new HashMap<String, String>();
		XbemyStudentInfoService service = new XbemyStudentInfoService();
		List mzList = xbDao.getMzList();
		String[] outputValue = {"bgcolor","sqrq","xh", "xm", "xb", "zcxxmc","zczymc","zrxxmc","zrzymc","xxsh"};
		String doType = request.getParameter("doType");
		String tabName = "xbemy_xszxsqb";
		String xh = request.getParameter("xh");	
		String sqrq = request.getParameter("sqrq");		
		map.put("转入","transterIn_auditing");
		map.put("转出", "transterOut_auditing");
		
		xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
		sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();		
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			flag = xbDao.updateInfoByPk(tabName, new String[]{"xh","sqrq"}, new String[]{xh,sqrq}, new String[]{"xxsh","zcxxyj","zrxxyj","zcsjytyj","zrsjytyj"}, xbForm, request); 
			if(flag){
				flag = service.insertNewStuInfo(xbForm,request);
			}
			request.setAttribute("rs", rs);
			request.setAttribute("result", flag);
			request.setAttribute("mzList",mzList);
			return mapping.findForward(map.get(DealString.toGBK(xbForm.getZxlx())));
		}
		if(doType != null && doType.equalsIgnoreCase("view")){			
			TransferSchModel model = new TransferSchModel();
			model.setXh(xh);
			model.setSqrq(sqrq);
			rs = service.getAppOfTranferSch(model);
			request.setAttribute("stuExists", xbDao.isStuExists(xh));
			request.setAttribute("rs", rs);
			request.setAttribute("mzList",mzList);
			request.setAttribute("writeAble","yes");
			return mapping.findForward(map.get(rs.get("zxlx")));
		}		
		
		this.baseAction( form , outputValue,request,"transferSchool");
		return mapping.findForward("stu_transfer_auditing");
	}
	
	
	/**
	 * 西北二民院转学报表
	 * */
	public ActionForward printTransferApp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){ 
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		String[] param = {"xh","xm","xb","zkzh","lxdh","rxsj","zcxxmc","zczymc","zcnj","zcxz","zcxlcc","zrxxmc","zrzymc",
						"zrnj","zrxz","zrxlcc","sqly"};
		
		//从页面获取民族代码，查询民族名称返回到报表页面
		String mz = request.getParameter("mz");
		String mzmc = xbDao.getNameByCode("mzdmb", new String[]{"mzdm","mzmc"}, mz);
		rs.put("mzmc", mzmc);		
		
		//获取当前的年月日
		dealDate del = new dealDate();
		String time = del.getToday();
		rs.put("dqn", time.substring(0,4));
		rs.put("dqy", time.substring(5,7));
		rs.put("dqr", time.substring(8,10));
		
		//将页面的信息保存到map中
		for(int i=0; i<param.length; i++){
			rs.put(param[i],DealString.toGBK(request.getParameter(param[i])));
		}
		
		request.setAttribute("rs", rs);
		return mapping.findForward("printTransferApp");
	}
	
	/**
	 * 西北二民院转专业申请
	 * */	
	@SuppressWarnings("static-access")
	public ActionForward showTransferSpecialty(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String xh = request.getParameter("xh");
		String sqrq = request.getParameter("sqrq");
		sqrq = (sqrq == null || "".equalsIgnoreCase(sqrq) ? "" : sqrq.trim());
		xh = (xh ==null || "".equalsIgnoreCase(xh)) ? "" : xh.trim();
		
		DAO dao = DAO.getInstance();
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;	
		HashMap<String, String> rs = new HashMap<String, String>();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		String writeAble = Base.getWriteAble(request);
		String userName = request.getSession().getAttribute("userName").toString();
		String userOnLine = request.getSession().getAttribute("userOnLine").toString();
		writeAble = CheckPower.checkUsrPageAccessPower(userOnLine,userName, "xbemyStuStatus.do?method=TransferSpecialtyQuery")==true ? "yes" : "no";
		
		String doType = request.getParameter("doType");
		String tabName = "xbemy_xszzysqb";
		String[] input = null;
		List mzList = dao.getMzList();
		List zyList = Base.getZyMap().get("");
		List njList = Base.getNjList();
		
		xh = userOnLine.equalsIgnoreCase("student") ? userName : xh;
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			boolean flag = false;
			input = new String[]{"xh","zkzh", "rxsj", "lqzydm", "zcnj", "zcxz", "zcxlcc",   
					"zrzydm", "zrnj", "zrxz", "zrxlcc", "sqly", "sqrq"};
			flag = xbDao.saveInfo(xbemy, input, new String[]{"xh","sqrq"}, tabName, request);
			request.setAttribute("result", flag);
		}
		
		tabName = "view_xbemy_xszzysqb";
		input = new String[]{"xh", "xm", "xb", "zkzh", "mzdm", "rxsj", "lqzydm", "zcnj", "zcxz", "zcxlcc",   
				"zrzydm", "zrnj", "zrxz", "zrxlcc", "sqly", "sqrq"};
		rs = xbDao.getInfoByPk(tabName, "xh||sqrq", xh+sqrq, input,false);
		if(sqrq==null || "".equalsIgnoreCase(sqrq)){
			rs = xbDao.getStuInfo(xh);
			rs.put("lqzydm", rs.get("ydqzydm"));
			rs.put("zcnj", rs.get("ydqnj"));
			rs.put("zcxz", rs.get("ydqxz"));
			rs.put("zcxlcc", rs.get("pycc"));			
		}
		
		
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("mzList", mzList);
		request.setAttribute("zyList", zyList);
		request.setAttribute("njList", njList);
		request.setAttribute("rs", rs);			
		return mapping.findForward("transfer_specialty_app");
	}
	
	/**
	 * 申请转专业查询
	 * */
	public ActionForward TransferSpecialtyQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String[] outputValue = {"sqrq","xh", "xm", "xb", "zkzh","lqzymc","zcnj","zrzymc","zrnj","zczyxysh","zrzyxysh","zjcsh","cwcsh","jwcsh","xscsh"};
		String doType = request.getParameter("doType");
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if(doType != null && doType.equalsIgnoreCase("del")){
			//删除信息
			boolean flag = false;
			String tabName = "xbemy_xszzysqb";
			String xh = request.getParameter("xh");	
			String sqrq = request.getParameter("sqrq");
			xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
			sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();
			
			flag = xbDao.delInfoByPk(tabName, "xh||sqrq", xh+sqrq, request);
			request.setAttribute("result", flag);
		}
		this.baseAction( form , outputValue, response,request);
		
		return mapping.findForward("transfer_specialty_querry");
	}
	
	/**
	 * 西北二民院转专业审核
	 * */
	public ActionForward stuTransferSpecAuditing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		boolean flag = false;
		XbemyStudentInfoForm xbForm = (XbemyStudentInfoForm) form;
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		
		List mzList = xbDao.getMzList();
		String[] outputValue = {"bgcolor","sqrq","xh", "xm", "xb", "lqzymc","zrzymc","zczyxysh","zrzyxysh","zjcsh","cwcsh","jwcsh","xscsh"};
		String doType = request.getParameter("doType");
		String tabName = "view_xbemy_xszzysqb";
		String xh = request.getParameter("xh");	
		String sqrq = request.getParameter("sqrq");
		
		xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
		sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();		
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			//保存审核信息
			tabName = "xbemy_xszzysqb";
			String[] inputValue = null;
			
			String[] rsXy = xbDao.getUserStanding(request, "xh||sqrq", xh+sqrq);
			if(rsXy != null 
					&& (rsXy[0] != null && rsXy[0].equalsIgnoreCase("zcxy"))
					&& (rsXy[1] != null && rsXy[1].equalsIgnoreCase("zrxy"))){
				//转入转出同一个学院
				xbForm.setZczyxysh(xbForm.getXxsh());
				xbForm.setZrzyxysh(xbForm.getXxsh()); 
				inputValue = new String[]{"zczyxysh","zczyyxyj","zrzyxysh","zrzyyxyj","gdxxspyj","zzqjytbayj"};
			}else if(rsXy != null 
					&& (rsXy[0] != null && rsXy[0].equalsIgnoreCase("zcxy"))){
				//转出学院
				xbForm.setZczyxysh(xbForm.getXxsh());
				inputValue = new String[]{"zczyxysh","zczyyxyj","gdxxspyj","zzqjytbayj"};
			}else if(rsXy != null 
					&& (rsXy[1] != null && rsXy[1].equalsIgnoreCase("zrxy"))){
				//转入学院
				xbForm.setZrzyxysh(xbForm.getXxsh()); 
				inputValue = new String[]{"zrzyxysh","zrzyyxyj","gdxxspyj","zzqjytbayj"};
				
			}			
			if(xbDao.getUserGroup(request, "学生处")){
				xbForm.setXscsh(xbForm.getXxsh()); 
				inputValue = new String[]{"xscsh","xscyj","gdxxspyj","zzqjytbayj"}; 
			}
			if(xbDao.getUserGroup(request, "招就处")){
				xbForm.setZjcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"zjcsh","zjcyj","gdxxspyj","zzqjytbayj"}; 
			}
			if(xbDao.getUserGroup(request, "财务处")){
				xbForm.setCwcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"cwcsh","cwcyj","gdxxspyj","zzqjytbayj"}; 
			}
			if(xbDao.getUserGroup(request, "教务处")){
				xbForm.setJwcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"jwcsh","jwcyj","gdxxspyj","zzqjytbayj"};
			}
			
			flag = xbDao.updateInfoByPk(tabName, new String[]{"xh","sqrq"}, new String[]{xh,sqrq}, inputValue, xbForm, request); 
			
			request.setAttribute("rs", rs);
			request.setAttribute("result", flag);
			request.setAttribute("mzList",mzList);
			return mapping.findForward("transter_spec_auditing");
		}
		if(doType != null && doType.equalsIgnoreCase("view")){
			//查询用于单个审核页面显示的数据
			outputValue = new String[]{"xh","xm","xb","sqrq","mzmc","rxsj","zkzh","lqzymc","zcnj","zcxz","zcxlcc","zrzymc",
					"zrnj","zrxz","zrxlcc","sqly","zczyxysh","zrzyxysh","zjcsh","cwcsh","jwcsh","xscsh","zczyyxyj","zrzyyxyj",
					"zjcyj","cwcyj","jwcyj","xscyj","gdxxspyj","zzqjytbayj"};

			rs = xbDao.getInfoByPk(tabName, "xh||sqrq", xh+sqrq, outputValue,false);
			//审核结果
			String[] rsXy = xbDao.getUserStanding(request, "xh||sqrq", xh+sqrq);
			if(rsXy != null 
					&& (rsXy[0] != null && rsXy[0].equalsIgnoreCase("zcxy"))
					&& (rsXy[1] != null && rsXy[1].equalsIgnoreCase("zrxy"))){
				//转入转出同一个学院
				rs.put("xxsh",rs.get("zczyxysh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "zrzcxy");
			}else if(rsXy != null 
					&& (rsXy[0] != null && rsXy[0].equalsIgnoreCase("zcxy"))){
				//转出学院
				rs.put("xxsh",rs.get("zczyxysh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "zcxy");
			}else if(rsXy != null 
					&& (rsXy[1] != null && rsXy[1].equalsIgnoreCase("zrxy"))){
				//转入学院
				rs.put("xxsh",rs.get("zrzyxysh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "zrxy");
				
			}
			if(xbDao.getUserGroup(request, "学生处")){
				rs.put("xxsh",rs.get("xscsh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "xsc");
			}
			if(xbDao.getUserGroup(request, "招就处")){
				rs.put("xxsh",rs.get("zjcsh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "zjc");
			}
			if(xbDao.getUserGroup(request, "财务处")){
				rs.put("xxsh",rs.get("cwcsh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "cwc");
			}
			if(xbDao.getUserGroup(request, "教务处")){
				rs.put("xxsh",rs.get("jwcsh"));
				request.setAttribute("isUser", "isUser");
				request.setAttribute("shdw", "jwc");
			}
			
			request.setAttribute("rs", rs);
			request.setAttribute("mzList",mzList);
			request.setAttribute("writeAble","yes");
			return mapping.findForward("transter_spec_auditing");
		}		
		
		this.baseAction( form , outputValue,request,"transferSpec");
		return mapping.findForward("stu_transfer_spec_auditing");
	}
	
	/**
	 * 西北二民院转专业报表
	 * */
	public ActionForward printTransferSpecApp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){ 
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		String[] param = {"xh","zkzh","rxsj","zcnj","zcxz","zcxlcc","zrnj","zrxz","zrxlcc","sqly"};
		
		//查询学生的基本信息
		String xh = request.getParameter("xh");
		rs = xbemyStudentInfoDAO.getStuInfo(xh);
		
		//从页面获取代码，查询名称返回到报表页面
		String zczydm = request.getParameter("zczydm");
		String zrzydm = request.getParameter("zrzydm");
		String zczymc = xbDao.getNameByCode("view_njxyzybj", new String[]{"zydm","zymc"}, zczydm);
		String zrzymc = xbDao.getNameByCode("view_njxyzybj", new String[]{"zydm","zymc"}, zrzydm);		
		rs.put("zczymc", zczymc);
		rs.put("zrzymc", zrzymc);
		
		//获取当前的年月日
		dealDate del = new dealDate();
		String time = del.getToday();
		rs.put("dqn", time.substring(0,4));
		rs.put("dqy", time.substring(5,7));
		rs.put("dqr", time.substring(8,10));
		
		//将页面的信息保存到map中
		for(int i=0; i<param.length; i++){
			rs.put(param[i],DealString.toGBK(request.getParameter(param[i])));
		}
		
		request.setAttribute("rs", rs);
		return mapping.findForward("printTransferSpecApp");
	}
	
	/**
	 * 学籍变动申请
	 * */
	@SuppressWarnings("static-access")
	public ActionForward showTransferStuStatus(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String xh = request.getParameter("xh");
		String sqrq = request.getParameter("sqrq");
		sqrq = (sqrq == null || "".equalsIgnoreCase(sqrq) ? "" : sqrq.trim());
		xh = (xh ==null || "".equalsIgnoreCase(xh)) ? "" : xh.trim();
		
		DAO dao = DAO.getInstance();
		XbemyStudentInfoForm xbemy = (XbemyStudentInfoForm)form;	
		HashMap<String, String> rs = new HashMap<String, String>();
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		String userName = request.getSession().getAttribute("userName").toString();
		String userOnLine = request.getSession().getAttribute("userOnLine").toString();
		String writeAble = CheckPower.checkUsrPageAccessPower(userOnLine, userName, "xbemyStuStatus.do?method=TransferStatusQuery") == true ? "yes" : "no";
		String doType = request.getParameter("doType");
		String tabName = "xbemy_xjbdsqb";
		String[] input = null;
		List zyList = Base.getZyMap().get("");
		List njList = Base.getNjList();
		List bjList = Base.getBjMap().get("!!!!");
		List ydlbList = dao.getList("select distinct ydlbm ydlbdm,ydlbmc from dm_ydlb", new String[]{}, new String[]{"ydlbdm","ydlbmc"});
		
		xh = userOnLine.equalsIgnoreCase("student") ? userName : xh;
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			boolean flag = false;
			input = new String[]{"xh","qssj","jzsj","ydlbdm","jtdh","jtdz","sqly","sqsj","ydqnj","ydqzydm","ydqbjdm","ydhnj","ydhzydm","ydhbjdm"};
			flag = xbDao.saveInfo(xbemy, input, new String[]{"xh","sqsj"}, tabName, request);
			request.setAttribute("result", flag);
		}
		
		tabName = "view_xbemy_xjbdsqb";
		input = new String[]{"xh", "xm", "xb", "mzmc", "csrq", "syd", "ydqnj", "ydqzydm", "ydqbjdm","ydhnj","ydhzydm","ydhbjdm","ydlbdm","qssj","jzsj","jtdh","jtdz","sqly"};
		rs = xbDao.getInfoByPk(tabName, "xh||sqsj", xh+sqrq, input,false);	
		
		if(sqrq==null || "".equalsIgnoreCase(sqrq)){
			rs = xbDao.getStuInfo(xh);
		}
		
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("zyList", zyList);
		request.setAttribute("njList", njList);
		request.setAttribute("bjList", bjList);
		request.setAttribute("ydlbList", ydlbList);
		request.setAttribute("rs", rs);			
		return mapping.findForward("transfer_stu_status");
	}
	
	/**
	 * 学籍变动申请查询	
	 * */
	public ActionForward TransferStatusQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String[] outputValue = {"sqsj","xh", "xm", "xb","ydqnj", "ydqzymc", "ydqbjmc","ydhnj","ydhzymc","ydhbjmc","xsszysh","hqcsh","zjcsh","cwcsh","jwcsh","xscsh","xldsh"};
		String doType = request.getParameter("doType");
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if(doType != null && doType.equalsIgnoreCase("del")){
			boolean flag = false;
			String tabName = "xbemy_xjbdsqb";
			String xh = request.getParameter("xh");	
			String sqrq = request.getParameter("sqrq");
			xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
			sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();
			
			flag = xbDao.delInfoByPk(tabName, "xh||sqsj", xh+sqrq, request);
			request.setAttribute("result", flag);
		}
		this.baseAction( form , outputValue, response,request);
		
		return mapping.findForward("transfer_status_querry");
	}
	
	/**
	 * 学籍变动审核
	 * */	
	public ActionForward stuTransferStatusAuditing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		boolean flag = false;
		XbemyStudentInfoForm xbForm = (XbemyStudentInfoForm) form;
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		
		List mzList = xbDao.getMzList();
		String[] outputValue = {"bgcolor","sqsj","xh", "xm", "ydqbjmc","ydhbjmc","xsszysh","zjcsh","cwcsh","jwcsh","xscsh","hqcsh","xldsh"};
		String doType = request.getParameter("doType");
		String tabName = "view_xbemy_xjbdsqb";
		String xh = request.getParameter("xh");	
		String sqrq = request.getParameter("sqrq");
		
		xh = (xh ==null || "".equalsIgnoreCase(xh))? "" : xh.trim();
		sqrq = (sqrq ==null || "".equalsIgnoreCase(sqrq))? "" : sqrq.trim();		
		
		if(doType != null && doType.equalsIgnoreCase("save")){
			//保存审核信息
			tabName = "xbemy_xjbdsqb";
			String[] inputValue = null;
			if(xbDao.isOwnCollege(request, "xh||sqsj", xh+sqrq)){
				//学生所在院
				xbForm.setXsszysh(xbForm.getXxsh()); 
				inputValue = new String[]{"xsszysh","xsszyyj"};
			}
			if(xbDao.getUserGroup(request, "学生处")){
				xbForm.setXscsh(xbForm.getXxsh()); 
				inputValue = new String[]{"xscsh","xscyj"}; 
			}
			if(xbDao.getUserGroup(request, "招就处")){
				xbForm.setZjcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"zjcsh","zjcyj"}; 
			}
			if(xbDao.getUserGroup(request, "财务处")){
				xbForm.setCwcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"cwcsh","cwcyj"}; 
			}
			if(xbDao.getUserGroup(request, "教务处")){
				xbForm.setJwcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"jwcsh","jwcyj"};
			}
			if(xbDao.getUserGroup(request, "后勤处")){
				xbForm.setHqcsh(xbForm.getXxsh()); 
				inputValue = new String[]{"hqcsh","hqcyj"};
			}
			if(xbDao.getUserGroup(request, "校领导")){
				xbForm.setXldsh(xbForm.getXxsh()); 
				inputValue = new String[]{"xldsh","xldyj"};
			}
			
			//更新信息
			flag = xbDao.updateInfoByPk(tabName, new String[]{"xh","sqsj"}, new String[]{xh,sqrq}, inputValue, xbForm, request); 
			
			request.setAttribute("rs", rs);
			request.setAttribute("result", flag);
			request.setAttribute("mzList",mzList);
			return mapping.findForward("transter_status_auditing");
		}
		if(doType != null && doType.equalsIgnoreCase("view")){
			//查询用于单个审核页面显示的数据			
			outputValue = new String[]{"xh","xm","xb","mzmc","syd","qssj","jzsj","jtdz","jtdh","sqsj",
					"sqly","ydqzymc","ydqnj","ydqbjmc","ydhzymc","ydhnj","ydhbjmc","xsszyyj","hqcyj",
					"zjcyj","cwcyj","jwcyj","xscyj","xldyj","xsszysh","hqcsh","zjcsh","cwcsh","jwcsh","xscsh","xldsh"};

			rs = xbDao.getInfoByPk(tabName, "xh||sqsj", xh+sqrq, outputValue,false);
			
			if(xbDao.isOwnCollege(request, "xh||sqsj",xh+sqrq)){
				//学生所在学院
				rs.put("xxsh",rs.get("zczyxysh"));
				request.setAttribute("shdw","xsszy");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "学生处")){
				rs.put("xxsh",rs.get("xscsh"));
				request.setAttribute("shdw","xsc");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "招就处")){
				rs.put("xxsh",rs.get("zjcsh"));
				request.setAttribute("shdw","zjc");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "财务处")){
				rs.put("xxsh",rs.get("cwcsh"));
				request.setAttribute("shdw","cwc");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "教务处")){
				rs.put("xxsh",rs.get("jwcsh"));
				request.setAttribute("shdw","jwc");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "后勤处")){
				rs.put("xxsh",rs.get("hqcsh"));
				request.setAttribute("shdw","hqc");
				request.setAttribute("isUser", "isUser");
			}
			if(xbDao.getUserGroup(request, "校领导")){
				rs.put("xxsh",rs.get("xldsh"));
				request.setAttribute("shdw","xld");
				request.setAttribute("isUser", "isUser");
			}
			request.setAttribute("rs", rs);
			request.setAttribute("mzList",mzList);
			request.setAttribute("writeAble","yes");
			return mapping.findForward("transter_status_auditing");
		}		
		
		this.baseAction( form , outputValue,request,"transferStatus");
		return mapping.findForward("stu_transfer_status_auditing");
	}
	
	/**
	 * 西北二民院学籍变动报表
	 * */
	public ActionForward printTransferStatusApp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){ 
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		HashMap<String, String> rs = new HashMap<String, String>();
		String[] param = {"xh","qssj","jzsj","jtdh","jtdz","sqly","ydqnj","ydhnj"};
		
		//查询学生的基本信息
		String xh = request.getParameter("xh");
		rs = xbemyStudentInfoDAO.getStuInfo(xh);
		
		//从页面获取代码，查询名称返回到报表页面
		String ydlbdm = request.getParameter("ydlbdm");
		String ydqzydm = request.getParameter("ydqzydm");
		String ydqbjdm = request.getParameter("ydqbjdm");		
		String ydhzydm = request.getParameter("ydhzydm");
		String ydhbjdm = request.getParameter("ydhbjdm");
		
		String ydlbmc = xbDao.getNameByCode("dm_ydlb", new String[]{"ydlbm","ydlbmc"}, ydlbdm);
		String ydqzymc = xbDao.getNameByCode("view_njxyzybj", new String[]{"zydm","zymc"}, ydqzydm);
		String ydqbjmc = xbDao.getNameByCode("view_njxyzybj", new String[]{"bjdm","bjmc"}, ydqbjdm);
		String ydhzymc = xbDao.getNameByCode("view_njxyzybj", new String[]{"zydm","zymc"}, ydhzydm);
		String ydhbjmc = xbDao.getNameByCode("view_njxyzybj", new String[]{"bjdm","bjmc"}, ydhbjdm);
		
		rs.put("ydlbmc", ydlbmc);
		rs.put("ydqzymc", ydqzymc);
		rs.put("ydqbjmc", ydqbjmc);
		rs.put("ydhzymc", ydhzymc);
		rs.put("ydhbjmc", ydhbjmc);
		
		//获取当前的年月日
		dealDate del = new dealDate();
		String time = del.getToday();
		rs.put("dqn", time.substring(0,4));
		rs.put("dqy", time.substring(5,7));
		rs.put("dqr", time.substring(8,10));
		
		//将页面的信息保存到map中
		for(int i=0; i<param.length; i++){
			rs.put(param[i],DealString.toGBK(request.getParameter(param[i])));
		}
		
		request.setAttribute("rs", rs);
		return mapping.findForward("printTransferStatusApp");
	}
	
	/**
	 * 2010-5-6修改为导入学生或教师自己照片的模块
	 * luning
	 * @throws IOException 
	 * @throws FileNotFoundException 
	 * */
	public ActionForward uploadPicture(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws FileNotFoundException, IOException{ 
		String doType = request.getParameter("doType");
		String type = DealString.toGBK(request.getParameter("type"));
		String id = DealString.toGBK(request.getParameter("id"));
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
		String pictype = request.getParameter("pictype");
		
		//防止上传照片时跳到 思政提示中去
		request.setAttribute("type", type);
		request.setAttribute("id", id);
		
		if(doType!=null && doType.equalsIgnoreCase("upload")){
			if (!"stu".equalsIgnoreCase(pictype)
					&& !userType.equalsIgnoreCase("stu")
					&& !Fdypd.isSzdw(userName) && id.equalsIgnoreCase("")) {
				request.setAttribute("errMsg", "只有在思政队伍中有信息的教师才有权限上传照片");
				return mapping.findForward("success");
			}
			XbemyStudentInfoForm hff = (XbemyStudentInfoForm) form;
			FormFile file = hff.getFile();
			if(file.getFileSize()>=100*1024){
				request.setAttribute("errMsg", "文件过大(大于100K)");
				return mapping.findForward("success");
			}
			if (file == null) {
				return mapping.findForward("false");
			}
			InputStream in = file.getInputStream();
			PicDAO picDAO = new PicDAO();
			if(type.equalsIgnoreCase("fdy")){
				userType = "teacher";
			}else if(type.equalsIgnoreCase("stu")){
				userType = "stu";
			}
			if(id.equalsIgnoreCase("")){
				if("stu".equals(userType)){
					picDAO.savePic_stu(in, userName);
				}else{
					picDAO.savePic(in, userName,userType);
				}
			}else{
				if("stu".equals(userType)){
					picDAO.savePic_stu(in, id);
				}else{
					picDAO.savePic(in, id,userType);
				}
			}
			in.close();
			request.setAttribute("dataImported", "success");
			request.setAttribute("moditag", request.getParameter("moditag"));
		}
		
		return mapping.findForward("success");
	}
	/**
	 * 湖北国土资源个性化，上传zp字段
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws FileNotFoundException
	 * @throws IOException
	 * @author honglin
	 * @date 2012-6-13
	 */
	public ActionForward uploadPicture2(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws FileNotFoundException, IOException{ 
		
		String doType = request.getParameter("doType");
		String type = DealString.toGBK(request.getParameter("type"));
		String id = DealString.toGBK(request.getParameter("id"));
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
		String pictype = request.getParameter("pictype");
		
		//防止上传照片时跳到 思政提示中去
		request.setAttribute("type", type);
		request.setAttribute("id", id);
		//doType="upload";
		if(doType!=null && doType.equalsIgnoreCase("upload")){
			if (!"stu".equalsIgnoreCase(pictype)
					&& !userType.equalsIgnoreCase("stu")
					&& !Fdypd.isSzdw(userName) && id.equalsIgnoreCase("")) {
				request.setAttribute("errMsg", "只有在思政队伍中有信息的教师才有权限上传照片");
				return mapping.findForward("success");
			}
			XbemyStudentInfoForm hff = (XbemyStudentInfoForm) form;
			FormFile file = hff.getFile();
			if(file.getFileSize()>=100*1024){
				request.setAttribute("errMsg", "文件过大(大于100K)");
				return mapping.findForward("success");
			}
			if (file == null) {
				return mapping.findForward("false");
			}
			InputStream in = file.getInputStream();
			PicDAO picDAO = new PicDAO();
			if(type.equalsIgnoreCase("fdy")){
				userType = "teacher";
			}else if(type.equalsIgnoreCase("stu")){
				userType = "stu";
			}
			if(id.equalsIgnoreCase("")){
				if("stu".equals(userType)){
					picDAO.savePic_stu2(in, userName);
				}else{
					picDAO.savePic(in, userName,userType);
				}
			}else{
				if("stu".equals(userType)){
					picDAO.savePic_stu2(in, id);
				}else{
					picDAO.savePic(in, id,userType);
				}
			}
			in.close();
			request.setAttribute("dataImported", "success");
			request.setAttribute("moditag", request.getParameter("moditag"));
		}
		
		return mapping.findForward("uploadPicture2");
	}
	
	/**
	 *  选择转入转出
	 * */
	public ActionForward dispathPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws FileNotFoundException, IOException{ 
		String page = DealString.toGBK(request.getParameter("toPage"));
		if(page!=null && page.equalsIgnoreCase("转出")){
			return new ActionForward("/xbemyStuStatus.do?method=showTransferApp&type=outTransfer");
		}
		if(page!=null && page.equalsIgnoreCase("转入")){
			return new ActionForward("/xbemyStuStatus.do?method=showTransferApp&type=inTransfer");
		}
		return mapping.findForward("success");
	}
}
