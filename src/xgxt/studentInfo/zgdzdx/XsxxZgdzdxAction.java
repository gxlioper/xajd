/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.zgdzdx;

import java.util.HashMap;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.action.Base;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.studentInfo.zgkd.XsxxZgkdService;
import xgxt.utils.Fdypd;
import xgxt.utils.FormModleCommon;

import common.GlobalsVariable;
/**
 * <p>Title: 学生工作管理系统</p>
 * <p>Description: 中国地质大学学生信息Action
 * <p>Copyright: Copyright (c) 2008</p>
 * <p>Company: zfsoft</p>
 * <p>Author: 李容</p>
 * <p>Version: 1.0</p>
 * <p>Time: 2008-10-21</p>
 */
public class XsxxZgdzdxAction extends DispatchAction {
	
	/***
	 * 加载页面参数
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 * @return void
	 * */
	public void appendProperties(HttpServletRequest request, String xydm,
			String zydm, String nj) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		String xy = "";
		String zy = "";
		String njLocal = nj;
		xy = xy==null ? "": (xydm==null ? "" : xydm); 
		zy = zy==null ? "": (zydm==null ? "" : zydm); 
		njLocal = nj==null ? "": nj;
		String zyKey = xy==null ? "":xy; 
		String bjKey = xy+"!!"+zy+"!!"+njLocal;
		String userType = request.getSession().getAttribute("userType").toString();
		String writeAble = Base.getWriteAble(request);
		request.setAttribute("mzList", service.getMzList());
		request.setAttribute("zzmmList", service.getZzmmList());
		request.setAttribute("writeAble", writeAble);//判断用户读写权
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		request.setAttribute("njList", Base.getNjList());//年级列表
		request.setAttribute("xyList", Base.getXyList());//学院列表
		request.setAttribute("zyList", Base.getZyMap().get(zyKey));//专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));//班级列表
		request.setAttribute("nfbyList", service.getChkList(2));
		request.setAttribute("sfzcList", service.getChkList(28));
		request.setAttribute("userType", userType);//用户类型
		
	}
	
	/**
	 * 学生信息查询
	 * @throws Exception 
	 * */
	public ActionForward xsxxSearch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxZgdzdxForm model = (XsxxZgdzdxForm)form;
		HttpSession session = request.getSession();
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		XsxxglService xsxxglService = new XsxxglService();
		String userType = session.getAttribute("userType").toString();
		String userSpeType = service.getSpeType(userType);
		String sfyby = request.getParameter("sfyby");
		String title = "学生信息 - 个人信息 - 信息查询 ";
		String writeAble = "";
		String tableName = "view_xsxxb_zgdzdx";
		String realTable = "xsxxb";
		boolean isFdy = session.getAttribute("fdyQx").toString().equalsIgnoreCase("true") ? true : false;
		String userName = session.getAttribute("userName").toString();
		
		//学生访问
		if (userType.equalsIgnoreCase("student")) {			
			String xh = session.getAttribute("userName").toString();
			return new ActionForward("/stu_info_details.do?xh=" + xh, false);
		}
		//学院用户
		if("xy".equalsIgnoreCase(userSpeType)){
			request.setAttribute("isXy", "true");
			model.setXydm(session.getAttribute("userDep").toString());
		}
		
		model.setSfyby(sfyby);
		model.setTableName(tableName);
		model.setFdy(isFdy);
		model.setUserName(userName);
		if ((request.getParameter("go") != null) && request.getParameter("go").equalsIgnoreCase("go")) {
			Vector<Object> rs = new Vector<Object>();
			rs.addAll(service.selectXsxx(model));
			
			request.setAttribute("rs", rs);
			request.setAttribute("rsNum", rs.size());
			request.setAttribute("topTr", service.getXsxxSearchTopTr());
		}
		
		if (sfyby != null && sfyby.equalsIgnoreCase("yes")) {
			title="学生信息 - 信息查询 - 毕业生信息";
			writeAble= "no";
		}
		//检测是否可以修改学生信息
		if(service.checkXsxxModify()){
			request.setAttribute("userOper", "yes");
		}
		
		request.setAttribute("tableName", tableName);
		request.setAttribute("realTable", realTable);
		request.setAttribute("sfyby", sfyby);		
		request.setAttribute("title", title);
		request.setAttribute("xsLbList", service.serv_getStuType("lb"));//学生类别
		request.setAttribute("xsLxList", service.serv_getStuType("lx"));//学生类型
		request.setAttribute("ydlbList", service.getYdlbList());//异动类别
		appendProperties(request, model.getXydm(), model.getZydm(), model.getNj());
		if(isFdy){//辅导员登录	
			request.setAttribute("bjList", Fdypd.getFdybjList(session.getAttribute("userName").toString()));
		}
		
		//================2010.10.22 edit by luojw==========================
		// 读写权相关
		if (Base.isNull(writeAble)) {
			String path = "stu_info_query.do?method=stuInfo";
			request.setAttribute("path", path);

			String[] message = FormModleCommon.getWriteAbleAndTitle(request);
			writeAble = message != null && message.length >= 1 ? message[0]
					: "";
			if (Base.isNull(title)) {
				title = message != null && message.length >= 2 ? message[1]
						: "";
			}
		}
		request.setAttribute("path", "stu_info_query.do?method=stuInfo");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("userSpeType", userSpeType);
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));
		return mapping.findForward("xsxxSearch");
	}
	
	/**
	 * 显示学校维护学生信息页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward showStuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxZgdzdxService zgdzService = new XsxxZgdzdxService();
		XsxxglService xsxxglService = new XsxxglService();
		String type = request.getParameter("type");
		String tableName = "xsxxb";		
		String page = "stu_info_zgdzdx";
		String yhjs = session.getAttribute("userType").toString();
		String doType = request.getParameter("oper");
		
		if(type!=null && "details".equalsIgnoreCase(type)){
			request.setAttribute("details", "details");
		}
		if(yhjs !=null && "admin".equalsIgnoreCase(yhjs)){
			yhjs = "xx";
		}
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs,tableName);
		String xh = request.getParameter("xh");
		//学生可维护的字段的原始值
		HashMap<String, String> rs = service.getStuAndFamily(xh,yhjs);				
		request.setAttribute("pksdj", service.getPksdj(xh));
		request.setAttribute("rs", rs);
		request.setAttribute("zdList", zdList);
		appendProperties(request, "", "", "");
		request.setAttribute("xsLbList", zgdzService.serv_getStuType("lb"));//学生类别
		request.setAttribute("xsLxList", zgdzService.serv_getStuType("lx"));//学生类型
		request.setAttribute("doType", doType);
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));
		return mapping.findForward(page);
	}
	
	/** 
	 * 学校用户修改后的信息保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuinfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxglService xsxxglService = new XsxxglService();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		String doType = request.getParameter("doType");
		boolean flag = false;
		
		flag = service.saveStuinfoByXy(yhjs, xh, "xsxxb", request);					
		
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		request.setAttribute("doType", doType);
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));
		return showStuInfo(mapping, form, request, response);
	}
	
	/** 
	 * 显示学生或学院用户修改学生信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuModiInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxZgdzdxService zgdzService = new XsxxZgdzdxService();
		XsxxglService xsxxglService = new XsxxglService();
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = "";
		
		if(userOnLine != null && "student".equalsIgnoreCase(userOnLine)){
			yhjs = userOnLine;
			xh = userName;			
		}else{
			xh = request.getParameter("xh");
		}
		
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs);
		//学生可维护的字段的原始值
		HashMap<String, String> rs = service.getStuAndFamily(xh,yhjs);
		//判断是否在设定的修改时间段内
		String sqsjFlag = service.isSqqjFlag();//1：不在申请时间内
		
		request.setAttribute("pksdj", service.getPksdj(xh));
		request.setAttribute("sqsjFlag", sqsjFlag);
		request.setAttribute("rs", rs);
		request.setAttribute("zdList", zdList);
		appendProperties(request,"","","");
		request.setAttribute("xjztList", xsxxglService.getList(GlobalsVariable.XSXX_KTEYS_XJZTLIST));
		request.setAttribute("xsLbList", zgdzService.serv_getStuType("lb"));
		request.setAttribute("xsLxList", zgdzService.serv_getStuType("lx"));
		return mapping.findForward("stumodi");
	}
	
	/** 
	 * 学生和学院用户修改后的信息保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuinfoModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();		
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		boolean flag = false;
		if(userOnLine !=null && userOnLine.equalsIgnoreCase("student")){
			yhjs = "student";
		}
		flag = service.saveStuinfoByXy(yhjs, xh, request);
		
		request.setAttribute("pksdj", service.getPksdj(xh));
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		return stuModiInfo(mapping, form, request, response);
	}
	
	/** 
	 * 学生注册
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuRegister(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		String pk = request.getParameter("pk");
		boolean flag = service.stuRegister(pk,request);
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo",false);
	}
	
	/** 
	 * 初始化学生确认标志
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward initXsqrxxbz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		boolean flag = service.initXsqrxxbz();
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo",false);
	}
	
	/** 
	 * 学生整体注册
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuAllRegister(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		String nj = request.getParameter("nj");
		String xy = request.getParameter("xy");
		String zy = request.getParameter("zy");
		String bj = request.getParameter("bj");
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		boolean flag = service.stuAllRegister(nj,xy,zy,bj,request,response.getOutputStream());
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo",false);
	}
	
	/** 
	 * 学生毕业
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuComplete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		String pk = request.getParameter("pk");
		boolean flag = service.stuComplete(pk,request);
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo",false);
	}
	
	/** 
	 * 学生整体毕业
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuAllComplete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		String nj = request.getParameter("nj");
		String xy = request.getParameter("xy");
		String zy = request.getParameter("zy");
		String bj = request.getParameter("bj");
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		boolean flag = service.stuAllComplete(nj,xy,zy,bj,request,response.getOutputStream());
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo",false);
	}
	
	/** 
	 * 分配必填字段
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward fpbtzd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		XsxxZgkdService zgkdService = new XsxxZgkdService();
		XsxxZgdzdxForm model = (XsxxZgdzdxForm)form;
		String type = request.getParameter("type");
		String xsxxzd = request.getParameter("xsxxzd");
		String jtxxzd = request.getParameter("jtxxzd");
		
		if("save".equalsIgnoreCase(type)){
			model.setXsxxzd(xsxxzd);
			model.setJtxxzd(jtxxzd);
			
			request.setAttribute("result", service.saveBtzdxx(model,request));
		}
		
		request.setAttribute("path", "xsxxZgdzdx.do?method=fpbtzd");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("yhList", zgkdService.getYhList());
		return mapping.findForward("fpbtzd");
	}
	
	/** 
	 * 毕业处理
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward bycl(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgdzdxService service = new XsxxZgdzdxService();
		XsxxZgdzdxForm model = (XsxxZgdzdxForm) form;
		
		String type = request.getParameter("type");
		String userName = session.getAttribute("userName").toString();
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();
		boolean isFdy = (Boolean)session.getAttribute("isFdy");//是否是辅导员
		boolean result = false;//操作结果
		
		if("xy".equalsIgnoreCase(userType) && !isFdy){
			model.setXydm(userDep);
		}
		model.setXjzt(request.getParameter("select_newxjztm"));
		model.setNfby(request.getParameter("nfby"));
		model.setSfzx(request.getParameter("sfzx"));
		model.setSfyby(request.getParameter("sfyby"));
		model.setSfbys(request.getParameter("sfbys"));
		model.setByny(request.getParameter("newbyny"));
		model.setPk(request.getParameter("delPk"));
		model.setNj(request.getParameter("nj"));
		model.setXydm(request.getParameter("xydm"));
		model.setZydm(request.getParameter("zydm"));
		model.setBjdm(request.getParameter("bjdm"));
		
		if("haveCondition".equalsIgnoreCase(type)){//按选择的数据修改
			result = service.saveByxgxxByData(model);
		}else{//按学籍条件修改数据
			result = service.saveByxgxx(model,isFdy, userName);
		}
		
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("result", result);
		request.setAttribute("searchTj", model.getSearchModel());
		
		
		return new ActionForward("/stu_info_query.do?method=stuInfo");
	}
	
}