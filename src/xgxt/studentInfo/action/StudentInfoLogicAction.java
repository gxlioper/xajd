/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.action;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jxl.Workbook;
import jxl.write.Label;
import jxl.write.WritableCellFormat;
import jxl.write.WritableFont;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import xgxt.DAO.DAO;
import xgxt.DAO.PicDAO;
import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.base.DealString;
import xgxt.base.Encrypt;
import xgxt.base.Excel2Oracle;
import xgxt.comm.search.SearchService;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.form.CommanForm;
import xgxt.form.ShgcForm;
import xgxt.form.User;
import xgxt.studentInfo.csmzzyjsxy.StudentInfoCsmzService;
import xgxt.studentInfo.dao.StuInfoDAO;
import xgxt.studentInfo.model.StudentInfoForm;
import xgxt.studentInfo.service.ArchiveService;
import xgxt.studentInfo.service.StudentInfoService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.studentInfo.xbemy.xbemyStudentInfoDAO;
import xgxt.studentInfo.ynys.XsxxYnysService;
import xgxt.studentInfo.zgkd.XsxxZgkdService;
import xgxt.studentInfo.zjgszyjsxy.XsxxZjgszyjsxyService;
import xgxt.studentInfo.zzdx.service.DistributeClassService;
import xgxt.utils.CheckPower;
import xgxt.utils.ExcelMethods;
import xgxt.utils.Fdypd;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.utils.SearchUtils;
import xgxt.utils.String.StringUtils;
import xgxt.xsxx.comm.jbsz.XsxxJbszForm;
import xgxt.xsxx.comm.jbsz.XsxxJbszService;
import xgxt.xsxx.comm.jbxx.XsxxJbxxForm;
import xgxt.xsxx.comm.jbxx.XsxxJbxxService;

import common.Globals;
import common.GlobalsVariable;

/**
 * <p>Title: 学生工作管理系统</p>
 * <p>Description: 学生信息操作Action</p>
 * <p>Copyright: Copyright (c) 2008</p>
 * <p>Company: zfsoft</p>
 * <p>Author: 李容</p>
 * <p>Version: 1.0</p>
 * <p>Time: 2007-12-31</p>
 */
public class StudentInfoLogicAction extends BaseAction {
	
	/***
	 * 加载页面参数
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 * @return void
	 * */
	public void appendProperties(HttpServletRequest request, String xydm,
			String zydm, String nj) throws Exception {
		String xy = "";
		String zy = "";
		String njLocal = nj;
		xy = xy==null ? "": (xydm==null ? "" : xydm); 
		zy = zy==null ? "": (zydm==null ? "" : zydm); 
		njLocal = nj==null ? "": nj;
		String zyKey = xy==null ? "":xy; 
		String bjKey = xy+"!!"+zy+"!!"+njLocal;
		String userType = request.getSession().getAttribute("userType").toString();
		
		request.setAttribute("writeAble", "yes");//判断用户读写权
		request.setAttribute("njList", Base.getNjList());//年级列表
		request.setAttribute("xyList", Base.getXyList());//学院列表
		request.setAttribute("zyList", Base.getZyMap().get(zyKey));//专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));//班级列表		
		request.setAttribute("userType", userType);//用户类型		
	}

	/**
	 * 学生信息查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @throws Exception 
	 */
	public ActionForward stuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception
			{
		
		
		CommanForm dataSearchForm = (CommanForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);//检测是否超时
		DAO dao = DAO.getInstance();
		StuInfoDAO stuDao = new StuInfoDAO();
		XsxxYnysService ynysService = new XsxxYnysService();
		XsxxglService xsxxglService = new XsxxglService();
		
		String userType = (String) session.getAttribute("userOnLine");
		String userDep = (String) session.getAttribute("userDep");
		String userSpceType = dao.getUserType(userDep);
		String userName = (String) session.getAttribute("userName");
		
		
		//是否可修改学生信息
		String modiTag = dao.getOneRs("select modistuinfo from xtszb", new String[] {}, "modistuinfo");
		String xxdm = StandardOperation.getXxdm();
		String oper = request.getParameter("oper");		
		String tableName = "view_xsxxb";
		String path = "stu_info_query.do?method=stuInfo";//菜单路径
		String sfyby = request.getParameter("sfyby");
		String sfzxk = request.getParameter("sfzxk");
		

		if (Globals.XXDM_ZJJTZYJSXY.equalsIgnoreCase(xxdm)) {// 浙江交通职业技术学院
			if (Base.isNull(sfzxk)) {
				return new ActionForward("/xsxx_zxxx.do", false);
			} else {
				request.setAttribute("searchType", "lsxx");
				return new ActionForward("/xsxx_lsxx.do", false);
			}
		}
		
		if (!Base.isNull(sfzxk)) {
			path += "&sfzxk=" + sfzxk;
			request.setAttribute("sfzxk", sfzxk);
		}
		boolean disabled = true;
		Vector<Object> rs = new Vector<Object>();
		//学生访问
		if (userType.equalsIgnoreCase("student")) {			
			String xh = userName;
			//成都体育、湖州师范之前有个性化修改，得用原有旧页面
			if (!Globals.XXDM_CDTYXY.equalsIgnoreCase(xxdm)) {
				//2013-1-31 qph 将查看 学生详细跳转到新路径
				return new ActionForward("/xsxx_tygl.do?method=ckZxsxx&xh="+xh,false);
				//return new ActionForward("/stu_info_details.do?doType=zjck&xh=" + xh, false);
			}
		}
		if(userSpceType.equalsIgnoreCase("xy") && !session.getAttribute("fdyQx").equals(true)){
			dataSearchForm.setXydm(userDep);
		}
		//中国地质大学
		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGDZDX)){
			return new ActionForward("/xsxxZgdzdx.do?method=xsxxSearch");
		}
		//云南艺术
//		if(xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)){
//			return new ActionForward("/xsxxYnys.do?method=xsxxSearch");
//		}
		
		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJCMXY)){
			dataSearchForm.setXjzt(StuInfoDAO.getYxj().get("zxdmmc"));
		}
		
		// 版本
		String edition = Base.getEdition();
		//高级查询
		String superSearch = Base.getSuperSearch();
		
		String[] colList = null;
		String[] colListCN = null;
		String sql = "";// sql语句
		String rsNum = "0";// 返回的记录数
		String sfzx = dataSearchForm.getSfzx();//是否在校

		String nj = dataSearchForm.getNj();
		String xy = dataSearchForm.getXydm();
		String zy = dataSearchForm.getZydm();
		String bj = dataSearchForm.getBjdm();
		String xh = dataSearchForm.getXh();
		String xm = dataSearchForm.getXm();
		String ssbh = dataSearchForm.getSsbh();//宿舍编号
		String jtcyxm = dataSearchForm.getJtcyxm();//家庭成员姓名
		String xz = dataSearchForm.getXz();//学制
		// 井冈山大学
		String mzdm = dataSearchForm.getMzdm(); //民族代码
		String zzmmdm = dataSearchForm.getZzmmdm();//政治面貌
		String sfzsb = DealString.toGBK(dataSearchForm.getSfzsb());// 是否专升本
		String jg = dataSearchForm.getJg();//籍贯
		String xb = dataSearchForm.getXb();//性别
		if("yes".equalsIgnoreCase(superSearch)){
			xb="";
		}
		String csrq = dataSearchForm.getCsrq();//出生日期
		String pycc = dataSearchForm.getPycc();	//培养层次	
		//云南艺术
		String sfzh = dataSearchForm.getSfzh();//身份证号
		String byny = DealString.toGBK(dataSearchForm.getByny());
		String sfdk = dataSearchForm.getSfdk();//是否贷款
		String sjhm = dataSearchForm.getSjhm();		
		String xjztm = dataSearchForm.getXjzt();//学籍状态
		String jtzsrd = dataSearchForm.getJtzsrd();
		String jtzsrg = dataSearchForm.getJtzsrg();
        //中国地质大学
		String xslb = dataSearchForm.getXslb();
		String xslx = dataSearchForm.getXslx();
		dataSearchForm.setKsh(DealString.toGBK(dataSearchForm.getKsh()));
		
		String jgshen = dataSearchForm.getJgshen();
		String jgshi  = dataSearchForm.getJgshi();
		String jgxian = dataSearchForm.getJgxian();
		String jtdzshen = dataSearchForm.getJtdzshen();
		String jtdzshi = dataSearchForm.getJtdzshi();
		String jtdzxian = dataSearchForm.getJtdzxian();
		//宁波城市 
		String ysbjdm = dataSearchForm.getYsbjdm();
		String mkbjdm = dataSearchForm.getMkbjdm(); 
		//北京理工大学珠海学院
		String sfbd = dataSearchForm.getSfbd();
		String jfqk = dataSearchForm.getJfqk();
		//南通职业
		String syd = dataSearchForm.getSyd();
		String ksh =  dataSearchForm.getKsh();
		
		if(StringUtils.isNull(request.getParameter("go")) && Globals.XXDM_ZJLG.equalsIgnoreCase(xxdm)){
			//浙江理工
			dataSearchForm.setXjzt("有");
		}
		if (userSpceType.equalsIgnoreCase("xy")
				&& (xy == null || xy.equalsIgnoreCase(""))
				&& !session.getAttribute("fdyQx").toString().equalsIgnoreCase("true")) {//无辅导员只能访问所带班级限制
			xy = userDep;
			dataSearchForm.setXydm(xy);
			disabled = false;
		}

		dataSearchForm.setXm(xm);
		nj = (nj == null) ? "" : nj;//抽取同一个方法
		xy = (xy == null) ? "" : xy;
		zy = (zy == null) ? "" : zy;
		bj = (bj == null) ? "" : bj;
		String bjKey = xy + "!!" + zy + "!!" + nj;

		// 根据家庭成员信息查询学生信息
		StringBuffer querry = null;
		if (jtcyxm == null || jtcyxm.equalsIgnoreCase("")) {
			querry = new StringBuffer(" where 1=1 ");// sql条件
		} else {
			//这部分是固定条件的组建sql，可以抽取方法
			querry = new StringBuffer(" where a.xh in ");//in 条件
			querry.append("(select xh from view_xsjtxx b where b.jtcy1_xm = '");//like 
			querry.append(DealString.replaceImmitStr(jtcyxm));
			querry.append("' ");
			querry.append(" or jtcy2_xm = '");
			querry.append(DealString.replaceImmitStr(jtcyxm));
			querry.append("' ");
			querry.append(" or jtcy3_xm = '");
			querry.append(DealString.replaceImmitStr(jtcyxm));
			querry.append("') ");
		}

		if((jtzsrd!=null && !jtzsrd.equalsIgnoreCase("")) || (jtzsrg!=null && !jtzsrg.equalsIgnoreCase(""))){
			querry.append(" and exists(select 1 from view_xsjtxx b where a.xh=b.xh and exists(select jtzsr from (select xh,to_number(jtzsr)jtzsr from view_xsjtxx where trim(jtzsr) is not null) c where b.xh=c.xh ");
			if(jtzsrd!=null && !jtzsrd.equalsIgnoreCase("")){
				querry.append(" and to_number(jtzsr)>="+DealString.replaceImmitStr(jtzsrd));
			}
			if(jtzsrg!=null && !jtzsrg.equalsIgnoreCase("")){
				querry.append(" and to_number(jtzsr)<="+DealString.replaceImmitStr(jtzsrg));
			}
			querry.append("))");
		}
		if(sfdk!=null && !sfdk.equalsIgnoreCase("")){
			querry.append(" and sfdk='");
			querry.append(DealString.replaceImmitStr(sfdk));
			querry.append("' ");
		}
		if(sjhm!=null && !sjhm.equalsIgnoreCase("")){
			querry.append(" and sjhm like'%");
			querry.append(DealString.replaceImmitStr(sjhm));
			querry.append("%'");
		}
		if(csrq!=null && !csrq.equalsIgnoreCase("")){
			querry.append(" and csrq like '%");
			querry.append(DealString.replaceImmitStr(csrq));
			querry.append("%'");
		}
		if(StringUtils.isNotNull(dataSearchForm.getSfyby())){
			if("否".equalsIgnoreCase(dataSearchForm.getSfyby())){
				querry.append(" and (sfyby='否' or sfyby is null)");
			}else{
				querry.append(" and sfyby='");
				querry.append(dataSearchForm.getSfyby());
				querry.append("' ");
			}
		}
		if(dataSearchForm.getSfzx()!=null && !dataSearchForm.getSfzx().equalsIgnoreCase("")){
			//============2010.10.16 edit by luojw==============
//			if(dataSearchForm.getSfzx().equalsIgnoreCase("在校")){
//				querry.append(" and (b.sfzx='在校' or b.sfzx is null)");
//			}else{
				querry.append(" and sfzx='");
				querry.append(dataSearchForm.getSfzx());
				querry.append("' ");
		//	}
		}
		if(StringUtils.isNotNull(ysbjdm)){//原始班级代码
			querry.append(" and exists( select 1 from view_zyflxx bks where a.xh=bks.xh and bks.ysbjdm='");
			querry.append(ysbjdm);
			querry.append("')");
		}
		if(StringUtils.isNotNull(mkbjdm)){//模块班级代码
			querry.append(" and exists( select 1 from view_zyflxx bks where a.xh=bks.xh and bks.mkbjdm='");
			querry.append(mkbjdm);
			querry.append("')");
		}
		//辅导员查询
		if(session.getAttribute("fdyQx").toString().equalsIgnoreCase("true")){
			querry.append(" and exists(select 1 from view_fdybbj f where a.bjdm=f.bjdm and f.zgh='"+userName+"')");
		}
//下面的都是同一种检测赋值方式
		//在抽取方法中，通过传入数组或者list，由for 循环进行处理
		querry.append(xy == null || "".equalsIgnoreCase(xy) ? "" : " and xydm='" + xy + "' ");
		querry.append(xjztm == null || "".equalsIgnoreCase(xjztm) ? "" : " and xjztm='" + xjztm + "' ");
		querry.append(xb == null || "".equalsIgnoreCase(xb) ? "" : " and xb='" + xb + "' ");
		querry.append(xz == null || "".equalsIgnoreCase(xz) ? "" : " and xz='" + xz + "' ");
		querry.append(nj == null || "".equalsIgnoreCase(nj) ? "" : " and nj='" + nj + "' ");
		querry.append(zy == null || "".equalsIgnoreCase(zy) ? "" : " and zydm='" + zy + "' ");
		querry.append(bj == null || "".equalsIgnoreCase(bj) ? "" : " and bjdm='" + bj + "' ");
		querry.append(xh == null || "".equalsIgnoreCase(xh) ? "" : " and xh like '%" + DealString.replaceImmitStr(xh) + "%' ");
		querry.append(xm == null || "".equalsIgnoreCase(xm) ? "" : " and xm like '%" + DealString.replaceImmitStr(xm) + "%' ");
		querry.append(sfzh == null || "".equalsIgnoreCase(sfzh) ? "" : " and sfzh like '%" + DealString.replaceImmitStr(sfzh) + "%' ");
		querry.append(mzdm == null || "".equalsIgnoreCase(mzdm) ? "" : " and mz = '" + mzdm + "' ");
		querry.append(zzmmdm == null || "".equalsIgnoreCase(zzmmdm) ? "" : " and zzmm = '" + zzmmdm + "'");
		querry.append(pycc == null || "".equalsIgnoreCase(pycc) ? "" : " and pycc like '%" + DealString.replaceImmitStr(pycc) + "%'");		
		querry.append(byny == null || "".equalsIgnoreCase(byny) ? "" : " and byny like'%" + byny + "%'");
        querry.append(Base.isNull(xslb)?"":" and xslb='"+xslb+"' ");
        querry.append(Base.isNull(xslx)?"":" and xslx='"+xslx+"' ");
        querry.append(ssbh == null || "".equalsIgnoreCase(ssbh) ? "" : " and ssbh like '%" + DealString.replaceImmitStr(ssbh) + "%'");        
        querry.append(ksh == null || "".equalsIgnoreCase(ksh) ? "" : " and ksh like '%" + DealString.replaceImmitStr(ksh) + "%'");
        if(Globals.XXDM_ZJKJXY.equalsIgnoreCase(xxdm)){
        	//浙江科技学院 显示来源省
        	request.setAttribute("showLys", "yes");
        }
        
        if(StringUtils.isNotNull(dataSearchForm.getSfgat())){
        	querry.append(" and sfgat = '");
        	querry.append(dataSearchForm.getSfgat());
        	querry.append("' ");
        }
        if(StringUtils.isNotNull(dataSearchForm.getSfssmz())){
        	querry.append(" and sfssmz = '");
        	querry.append(dataSearchForm.getSfssmz());
        	querry.append("' ");
        }
       if(Globals.XXDM_LSSFXY.equalsIgnoreCase(xxdm)){
    	   // 乐山师范学院
			String qqhm = dataSearchForm.getQqhm();
			if (!Base.isNull(qqhm)) {
				querry.append(" and  qqhm = '" + DealString.replaceImmitStr(qqhm) + "'");
			}
    	   String jtdzValue = "";
          
           if(!Base.isNull(jtdzshen)){
        	   jtdzValue+=jtdzshen+"/";
           }
           if(!Base.isNull(jtdzshi)){
        	   jtdzValue+=jtdzshi+"/";
           }
           if(!Base.isNull(jtdzxian)){
        	   jtdzValue+=jtdzxian;
           }           
           
           querry.append((Base.isNull(jtdzValue))?"":" and jtdz like '%"+jtdzValue+"%' ");
           request.setAttribute("ssList", ynysService.getSsList());
           request.setAttribute("shiList", ynysService.getShiList(dataSearchForm.getJgshen()).get("shiList"));
   		   request.setAttribute("xianList",  ynysService.getShiList(dataSearchForm.getJgshen()).get("xianList"));
       }
       
       //地址信息采用标准码       
       if("yes".equalsIgnoreCase(xsxxglService.getXsxxCs().get("dzxxqdm"))){
    	   String jgValue = "";
    	   if(!Base.isNull(jgshen)){
        	   jgValue+=jgshen+"/";
           }
           if(!Base.isNull(jgshi)){
        	   jgValue+=jgshi+"/";
           }
           if(!Base.isNull(jgxian)){
        	   jgValue+=jgxian;
           }
           String sydValue = "";
           String sydshen = request.getParameter("sydshen");
           String sydshi = request.getParameter("sydshi");
           String sydxian = request.getParameter("sydxian");
           if(!Base.isNull(sydshen)){
        	   sydValue+=sydshen+"/";
           }
           if(!Base.isNull(sydshi)){
        	   sydValue+=sydshi+"/";
           }
           if(!Base.isNull(sydxian)){
        	   sydValue+=sydxian;
           }
           querry.append((Base.isNull(jgValue))?"":" and jg like '%"+jgValue+"%' ");
           querry.append((Base.isNull(sydValue))?"":" and syd like '%"+sydValue+"%' ");
           
           request.setAttribute("ssList", ynysService.getSsList());
           request.setAttribute("shiList", ynysService.getShiList(dataSearchForm.getJgshen()).get("shiList"));
   		   request.setAttribute("xianList",  ynysService.getShiList(dataSearchForm.getJgshen()).get("xianList"));
   		   request.setAttribute("showSheng", "true");
       }else{
    	   querry.append(syd == null || "".equalsIgnoreCase(syd) ? "" : " and syd like '%" + syd + "%'");
           querry.append(jg == null || "".equalsIgnoreCase(jg) ? "" : " and jg like '%" + jg + "%'"); 
       }
        
//		if(xxdm.equalsIgnoreCase(Globals.XXDM_XBMZDX)){
//			//西北民族
//			if(xjztm!=null && !"".equalsIgnoreCase(xjztm) && xjztm.equalsIgnoreCase("有学籍")){
//				querry.append(" and (xjztm='" + xjztm + "' or xjztm='有' or xjztm is null)");
//			}
//			if(xjztm!=null && !"".equalsIgnoreCase(xjztm) && xjztm.equalsIgnoreCase("无学籍")){
//				querry.append(" and (xjztm='" + xjztm + "' or xjztm='无')");
//			}
//		}
		
		if (xxdm.equalsIgnoreCase(Globals.XXDM_HZZY)) {
			// 杭职院 
			tableName = "view_xsxxb";
			sfzxk = request.getParameter("sfzxk");//是否在校库	
			if ("no".equalsIgnoreCase(sfzxk)) {
				//查询毕业生信息 sfyby为是的为毕业学生
				querry.append(" and  b.sfyby='是' ");	
				path = "stu_info_query.do?method=stuInfo&sfzxk=no";//历史学生信息菜单路径
			} else {
				//查询未毕业学生信息 sfyby不为是的为未毕业学生
				querry.append(" and (sfyby <> '是' or sfyby is null)");
				//异动后不在校的学生不显示
				querry.append(" and not exists(select b.xh,b.ydlbmc from (select bb.xh, ee.ydlbmc,bb.ydxh from bks_xjydxx bb, dm_ydlb ee where bb.ydlbm = ee.ydlbm) b where a.xh=b.xh and ydxh=(select max(ydxh )from bks_xjydxx b where a.xh=b.xh) and exists(select c.ydlbmc from dm_ydlb c where sfzx='不在校' and b.ydlbmc=c.ydlbmc))");
				request.setAttribute("isWrite", "yes");
			}	
			request.setAttribute("sfzxk", sfzxk);
		}
//		if(xxdm.equalsIgnoreCase(Globals.XXDM_XBMZDX)){
//			//西北民族
//			if(sfzx!=null && sfzx.equalsIgnoreCase("1")){		
//				//在校学生 
//				querry.append(" and exists(select xh from (select xh,xm,decode(nvl((select (select sfzx from dm_ydlb m where b.ydlbdm=m.ydlbm) sfzx from view_xjydjbxx b where  f.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where b.xh=c.xh) and exists (select c.ydlbmc from dm_ydlb c where  b.ydlbmc=c.ydlbmc)),f.sfzx),null,'在校',nvl((select (select sfzx from dm_ydlb m where b.ydlbdm=m.ydlbm) sfzx from view_xjydjbxx b where  f.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where b.xh=c.xh) and exists (select c.ydlbmc from dm_ydlb c where  b.ydlbmc=c.ydlbmc)),f.sfzx)) sfzx from view_xsxxb f) f where f.sfzx='在校' and a.xh=f.xh)");
//			}
//			if(sfzx!=null && sfzx.equalsIgnoreCase("0")){
//				//不在校
//				querry.append(" and exists(select xh from (select xh,xm,decode(nvl((select (select sfzx from dm_ydlb m where b.ydlbdm=m.ydlbm) sfzx from view_xjydjbxx b where  f.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where b.xh=c.xh) and exists (select c.ydlbmc from dm_ydlb c where  b.ydlbmc=c.ydlbmc)),f.sfzx),null,'在校',nvl((select (select sfzx from dm_ydlb m where b.ydlbdm=m.ydlbm) sfzx from view_xjydjbxx b where  f.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where b.xh=c.xh) and exists (select c.ydlbmc from dm_ydlb c where  b.ydlbmc=c.ydlbmc)),f.sfzx)) sfzx from view_xsxxb f) f where f.sfzx='不在校' and a.xh=f.xh)");
//			}		
//		}
		
		//新版本过滤条件
		SearchService searchService = new SearchService();
		
		String searchTjByUser = searchService.getSearchTjByUser(request, "a", "xydm", "bjdm");
		
		//---------增加是否进修生条件------end-------2012.3.1 qph------------------
		String[] sfjxs = dataSearchForm.getSearchModel().getSearch_tj_sfhq();
		dataSearchForm.getSearchModel().setSearch_tj_sfhq(null);
		
		StringBuilder otherQuery = new StringBuilder();
		
		if (null != sfjxs && sfjxs.length > 0){
			
			StringBuilder sftjx = new StringBuilder();
			
			for (int i = 0 ; i < sfjxs.length ; i++){
				sftjx.append("sfhq='")
				     .append(sfjxs[i])
				     .append("'");
				
				if (i != sfjxs.length-1){
					sftjx.append(" or ");
				}
			}
			
			otherQuery.append(" and exists (select 1 from xsxxb t where a.xh=t.xh and (")
					  .append(sftjx)
					  .append(")) ");
		}
		//---------增加是否进修生条件-------------------------------
		String searchTj = SearchService.getSearchTj(dataSearchForm.getSearchModel());
		String[] inputV = SearchService.getTjInput(dataSearchForm.getSearchModel());
		
		StringBuilder superQuery = new StringBuilder();
		superQuery.append(" where 1 = 1 ");
		superQuery.append(searchTj);
		superQuery.append(searchTjByUser);
		superQuery.append(otherQuery);
		
		//----------是否进修生条件再设置回去，保证页面正常显示 ----2012.3.1 qph------------------
		dataSearchForm.getSearchModel().setSearch_tj_sfhq(sfjxs);
		//---------------------------------------------------------
		
		
		//========2011.1.24 by lr 在校学生和不在校学生分开查询， 排除已经做过在校与否判断的学校===========
		if(!(Globals.XXDM_HZZY.equalsIgnoreCase(xxdm) 
				//|| Globals.XXDM_XBMZDX.equalsIgnoreCase(xxdm) 
				|| Globals.XXDM_ZJYS.equalsIgnoreCase(xxdm))){
			sfzxk = request.getParameter("sfzxk");//是否在校库	
			tableName = "view_xsbfxx";//学生部分信息视图
			if ("no".equalsIgnoreCase(sfzxk)) {//查询历史信息
				querry.append(" and  (sfyby='是' or sfzx='不在校') ");	
				superQuery.append(" and  (sfyby='是' or sfzx='不在校') ");
				path = "stu_info_query.do?method=stuInfo&sfzxk=no";//历史学生信息菜单路径
			} else {//查询在校学生信息	
				querry.append(" and (sfyby='否' or sfyby is null) and (sfzx='在校' or sfzx is null)");
				superQuery.append(" and (sfyby='否' or sfyby is null) and (sfzx='在校' or sfzx is null)");
			}
			request.setAttribute("sfzxk", sfzxk);
		}
		//========end
	
		if (xxdm.equalsIgnoreCase(Globals.XXDM_JGSDX)) {
			// 井冈山大学
			dataSearchForm.setXh("");
			dataSearchForm.setJtcyxm("");
			dataSearchForm.setPycc("");
			dataSearchForm.setSsbh("");
			dataSearchForm.setJg("");
			dataSearchForm.setCsrq("");
			tableName = "view_xsxxb";
			querry.append(mzdm == null || "".equalsIgnoreCase(mzdm) ? "" : " and mz ='" + mzdm + "'");
			querry.append(zzmmdm == null || "".equalsIgnoreCase(zzmmdm) ? "" : " and zzmm ='" + zzmmdm + "'");
			querry.append(sfzsb == null || "".equalsIgnoreCase(sfzsb) ? "" : " and sfzsb ='" + sfzsb + "'");
			querry.append(jg == null || "".equalsIgnoreCase(jg) ? "" : " and jg like '%" + jg + "%'");
			querry.append(xb == null || "".equalsIgnoreCase(xb) ? "" : " and xb ='" + xb + "'");
			querry.append(csrq == null || "".equalsIgnoreCase(csrq) ? "" : " and csrq like'%" + csrq + "%'");
			querry.append(pycc == null || "".equalsIgnoreCase(pycc) ? "" : " and pycc like'%" + pycc + "%'");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_ZJYS)) {
			// 浙江艺术
			querry.append(" and nj>((select dqnd from xtszb)-xz)");
		}else {
			if(xxdm.equalsIgnoreCase(Globals.XXDM_CZXXZYJSXY)){
				dataSearchForm.getPages().setPageSize(60);
			}
			if ("1".equalsIgnoreCase(modiTag)) {
				// 学工可修改学生信息
//				colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh","byny" };--20111125去掉ssbh（宿舍编号）
				colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm","byny" };

				StringBuffer temSql = new StringBuffer();
				temSql.append("select * from (select * from (select rownum r,a.* from (select distinct a.xh, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh,byny  from " + tableName + " a ");
				
				// 是否需要高级查询
				if ("yes".equalsIgnoreCase(superSearch)) {
					temSql.append(superQuery);
					querry=new StringBuffer();
					querry.append(superQuery);
				} else {
					temSql.append(querry);
				}
				
				temSql.append(" order by xh asc)a ) where r<=");
				temSql.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
				temSql.append(") where r>");
				temSql.append(dataSearchForm.getPages().getStart());

				sql = temSql.toString();
				if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
					//西昌学院
					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc", "xjztm","pycc", "ssbh" ,"byny" };
					StringBuffer sb = new StringBuffer();

					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.pycc,a.ssbh,byny from " + tableName + " a ");
					sb.append(querry);
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());


					sql = sb.toString();
				}
//				if (xxdm.equalsIgnoreCase(Globals.XXDM_XBMZDX)) {
//					// 西北民族大学
//					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc", "xjztm", "ssbh", "byny" };
//					StringBuffer sb = new StringBuffer();
//					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,nvl((select b.ydlbmc from view_xjydjbxx b where a.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where c.xh=b.xh)),'') xjztm,a.ssbh,byny from " + tableName + " a ");
//					sb.append(querry);
//					sb.append(" ) where r<=");
//					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
//					sb.append(") where r>");
//					sb.append(dataSearchForm.getPages().getStart());
//					sql = sb.toString();
//				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_BJLHDX)) {
					// 北京联合大学
					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc", "ssbh", "sfzfx", "xjztm", "byny" };
					String hkszd = DealString.toGBK(request.getParameter("hkszd"));
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,a.sfzfx,a.xjztm,byny  from " + tableName + " a ");
					sb.append(querry);
					if(!hkszd.equalsIgnoreCase("")) {
						sb.append( " and hkszd like'%");
						sb.append(hkszd);
						sb.append("%' ");

						querry.append(" and hkszd like '%");
						querry.append(hkszd);
						querry.append("%' ");
					}
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					dataSearchForm.setHkszd(hkszd);
					sql = sb.toString();
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJSYZYXY)){
					//浙江商业职业
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,xjztm,byny  from "+tableName+" a ");
					sb.append(querry);
					sb.append(" and (xjztm<>'无学籍' and xjztm<>'无')");
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_NBLGXY)) {
					// 宁波理工从教务取数据，无学籍的在学工中不显示
					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh" ,"sfyby", "sfzx","byny"};
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh," +
							"decode(sfyby,'','否',sfyby)sfyby, decode(sfzx,'','在校',sfzx)sfzx,byny  from " + tableName + " a ");
					sb.append(querry);
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());

					sql = sb.toString();
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_AHJZGYXY)){
					//安徽建筑工业学院
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh,kh,byny  from " + tableName + " a ");
					sb.append(querry);
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());

					sql = sb.toString();
					colList = new String[]{ "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh", "kh","byny"};
				}
//				if (xxdm.equalsIgnoreCase(Globals.XXDM_ZJJDZYJSXY)) {
//					// 浙江机电职业技术学院					
//					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc", "ssbh", "xjztm" ,"银行卡号", "byny"};
//
//					StringBuffer sb = new StringBuffer();
//					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,a.xjztm,kh 银行卡号,byny from " + tableName + " a ");
//					sb.append(querry);
//					sb.append(" ) where r<=");
//					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
//					sb.append(") where r>");
//					sb.append(dataSearchForm.getPages().getStart());
//
//					sql = sb.toString();
//				}

				if (Globals.XXDM_BJLGDXZHXY.equals(xxdm)) {
					
					colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh","byny","是否报到","缴费情况" };

					StringBuilder sb = new StringBuilder();
					sb.append("select * from (select * from (select rownum r,a.* from  ");
					sb.append("(select * from (select distinct a.xh, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh,byny,");
					sb.append("nvl(b.sfbd,'否') 是否报到,");
					sb.append("nvl(b.jfqk,'未缴费') 缴费情况 ");
					sb.append(" from (select * from ");
					sb.append(tableName);
					sb.append(querry);
					sb.append(" )a  left join (select * from zhxyxsbdxx where ");
					sb.append("xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)) b on a.xh=b.xh) ");
					sb.append(" order by xh asc )a where 1=1 ");
					sb.append(Base.isNull(sfbd) ? "" : " and 是否报到 ='" + sfbd + "'");
					sb.append(Base.isNull(jfqk) ? "" : " and 缴费情况 ='" + jfqk + "'");
					sb.append(") where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					
					sql = sb.toString();
				}
				
				if (Globals.XXDM_SHCBYSGDZKXX.equalsIgnoreCase(xxdm)) {// 上海出版印刷		
					colList = new String[] { "xh", "r", "xm", "xb", "nj", "bjmc", "ssbh","lxdh","家庭困难类型","byny" };

					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select rownum r,a.*,")
						.append("(select mc from xg_xsxx_jtknlxb b where b.dm=a.jjzk) 家庭困难类型 ")
						.append(" from (select a.*,")
						.append("(select b.jjzk from xsfzxxb b where b.xh=a.xh) jjzk from ")
						.append(tableName)
						.append(" a  order by xh asc)a ");
					
					// 是否需要高级查询
					if ("yes".equalsIgnoreCase(superSearch)) {
						sb.append(superQuery);
						querry=new StringBuffer();
						querry.append(superQuery);
					} else {
						sb.append(querry);
					}
					
					sb.append(") where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());

					sql = sb.toString();
				}
				
				colListCN = dao.getColumnNameCN(colList, tableName);
			} else {
				colList = new String[] { "行号", "r",  "xh", "xm", "xb", "nj", "xz", "bjmc", "ssbh" ,"byny" };
				StringBuffer temSql = new StringBuffer();
				temSql.append("select * from (select * from (select rownum r,rownum 行号,a.* from (select distinct a.xh, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,byny from " + tableName + " a ");
				// 是否需要高级查询
				if ("yes".equalsIgnoreCase(superSearch)) {
					temSql.append(superQuery);
				} else {
					temSql.append(querry);
				}
				temSql.append("order by xh asc)a) where r<=");
				temSql.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
				temSql.append(") where r>");
				temSql.append(dataSearchForm.getPages().getStart());
				sql = temSql.toString();
				// colListCN = dao.getColumnNameCN(colList, tableName);
				if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {// 西昌学院
					// 西昌学院有单独的view_xsjbxx 增加了pycc字段				
					colList = new String[] { "r", "行号", "xh", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh", "pycc","byny" };
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.pycc,a.ssbh,byny  from " + tableName + " a ");
					sb.append(querry);
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
//				if (xxdm.equalsIgnoreCase(Globals.XXDM_XBMZDX)) {
//					// 西北民族大学
//					colList = new String[] { "r", "行号", "xh", "xm", "xb", "nj", "xz", "bjmc", "ssbh", "xjztm", "byny" };
//					StringBuffer sb = new StringBuffer();
//					sb.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,nvl((select b.ydlbmc from view_xjydjbxx b where a.xh=b.xh and b.ydxh=(select max(ydxh) from view_xjydjbxx c where c.xh=b.xh)),'')xjztm,a.ssbh,byny  from " + tableName + " a ");
//					sb.append(querry);
//					sb.append(" ) where r<=");
//					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
//					sb.append(") where r>");
//					sb.append(dataSearchForm.getPages().getStart());
//					sql = sb.toString();
//				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_BJLHDX)) {
					// 北京联合大学
					colList = new String[] { "r", "行号", "xh", "xm", "xb", "nj", "xz", "bjmc", "ssbh", "sfzfx", "xjztm","byny" };
					String hkszd = DealString.toGBK(request.getParameter("hkszd"));
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,a.sfzfx,a.xjztm,byny from " + tableName + " a ");
					sb.append(querry);
					if(!hkszd.equalsIgnoreCase("")) {
						sb.append( " and hkszd like '%");
						sb.append(hkszd);
						sb.append("%' ");

						querry.append(" and hkszd like '%");
						querry.append(hkszd);
						querry.append("%' ");
					}
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJSYZYXY)){
					//商业职业技术学院
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,byny from "+tableName+" a ");
					sb.append(querry);
					sb.append(" and (xjztm<>'无学籍' and xjztm<>'无')");
					sb.append(" ) where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_NBLGXY)) {
					// 宁波理工从教务取数据，无学籍的在学工中不显示
					colList = new String[] { "r", "行号", "xh", "xm", "xb", "nj", "xz", "bjmc","xjztm", "ssbh","sfby"};
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc ,a.xjztm,a.ssbh,sfby  from " + tableName + " a ");
					sb.append(querry);
					sb.append(") where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_AHJZGYXY)){
					//安徽建筑工业学院
					colList = new String[] { "r", "行号", "xh", "xm", "xb", "nj", "xz", "bjmc", "xjztm","ssbh","kh","byny" };
					StringBuffer sb = new StringBuffer();
					sb.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh,kh,byny from " + tableName + " a ");
					sb.append(querry);
					sb.append(") where r<=");
					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
					sb.append(") where r>");
					sb.append(dataSearchForm.getPages().getStart());
					sql = sb.toString();
				}
//				if (xxdm.equalsIgnoreCase(Globals.XXDM_ZJJDZYJSXY)) {
//					// 浙江机电职业技术学院					
//					colList = new String[] { "r", "行号","xh", "xm", "xb", "nj", "xz", "bjmc", "ssbh", "xjztm" ,"银行卡号","byny"};
//					StringBuffer sb = new StringBuffer();
//					sb.append("select * from (select * from (select distinct a.xh,rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,a.xjztm,kh 银行卡号,byny from " + tableName + " a ");
//					sb.append(querry);
//					sb.append(" ) where r<=");
//					sb.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
//					sb.append(") where r>");
//					sb.append(dataSearchForm.getPages().getStart());
//					sql = sb.toString();
//				}
				
//				if(xxdm.equalsIgnoreCase(Globals.XXDM_NBCSZYJSXY)){
//					//宁波城市
//					colList = new String[] { "行号", "r",  "xh", "xm", "xb", "nj", "xz", "bjmc", "原始班级", "模块班级", "ssbh" ,"byny" };
//					temSql = new StringBuffer();
//					temSql.append("select * from (select * from (select distinct rownum 行号, a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.ssbh,byny,(select ysbjmc from bks_xsysxjxxb b where a.xh=b.xh)原始班级,(select mkbjmc from bks_xsysxjxxb b where a.xh=b.xh)模块班级 from " + tableName + " a ");
//					temSql.append(querry);
//					temSql.append(") where r<=");
//					temSql.append(dataSearchForm.getPages().getStart() + dataSearchForm.getPages().getPageSize());
//					temSql.append(") where r>");
//					temSql.append(dataSearchForm.getPages().getStart());
//					sql = temSql.toString();
//				}
				colListCN = dao.getColumnNameCN(colList, tableName);
			}

		}
		
		if (Globals.XXDM_JHZYJSXY.equalsIgnoreCase(xxdm)) {
			if (!"no".equalsIgnoreCase(sfzxk)) {
				colList = new String[] { "xh", "r", "xm", "xb", "nj", "xz", "bjmc","xjztm"};
				colListCN = new String[]{"学号", "r", "姓名", "性别", "年级", "学制", "班级名称", "学籍状态"};
			}
		}
		
		List topTr = dao.arrayToList(colList, colListCN);
		//进入页面就查询 modi by yyp 2012.12.14//
		// 查询
		//if ((request.getParameter("go") != null) && request.getParameter("go").equalsIgnoreCase("go")) {
			rs.addAll(dao.rsToVator(sql, inputV, colList));
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
			request.setAttribute("searchTj", dataSearchForm.getSearchModel());
		//}
		// 判断学校是否允许修改学生信息
		if (modiTag != null && modiTag.equalsIgnoreCase("1")) {
			request.setAttribute("userOper", "yes");
		}
		// 学院只能导出数据
		if (userSpceType.equalsIgnoreCase("xy")
				&& (xy != null || !xy.equalsIgnoreCase(""))) {
			// 井冈山大学学院可修改学生信息
			if (!xxdm.equalsIgnoreCase(Globals.XXDM_JGSDX)) {
				request.setAttribute("isXY", "yes");
			}
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_NCDXKJXY)) {
			// 南昌科技 辅导员修改学生信息
			int num = 0;
			sql = "select count(*) num from view_fdyxx where zgh=?";
			num = Integer.parseInt(dao.getOneRs(sql, new String[] { userName }, "num"));
			if (num > 0) {
				// 是辅导员
				request.setAttribute("fdy", "yes");
			}
		}
		
		// TODO 分页设置
		sql = "select count(*) count from " + tableName + " a" ;
		
		if(Globals.XXDM_SHCBYSGDZKXX.equalsIgnoreCase(xxdm)){
			sql = "select count(*) count from (select a.*,b.jjzk from " + tableName + " a left join xsfzxxb b on a.xh=b.xh) a" ;
		}
		
		// 是否需要高级查询
		if ("yes".equalsIgnoreCase(superSearch)) {
			sql += superQuery;
		} else {
			sql += querry;
		}
		
		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJSYZYXY)){
			//浙江商业职业
			sql = "select count(*) count from view_xsxxb a" + querry + " and (xjztm<>'无学籍' and xjztm<>'无')";	
		}
		if (Globals.XXDM_BJLGDXZHXY.equals(xxdm)) {
			StringBuilder sb = new StringBuilder();
			sb.append("select count(*) count from (select * from (select * from (select rownum r,a.* from  ");
			sb.append("(select * from (select distinct a.xh, a.xm,a.xb,a.nj,a.xz,a.bjmc,a.xjztm,a.ssbh,byny,");
			sb.append("nvl(b.sfbd,'否') 是否报到,");
			sb.append("nvl(b.jfqk,'未缴费') 缴费情况 ");
			sb.append(" from (select * from ");
			sb.append(tableName);
			sb.append(querry);
			sb.append(" )a  left join (select * from zhxyxsbdxx where ");
			sb.append("xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)) b on a.xh=b.xh) ");
			sb.append(" order by xh asc )a where 1=1 ");
			sb.append(Base.isNull(sfbd) ? "" : " and 是否报到 ='" + sfbd + "'");
			sb.append(Base.isNull(jfqk) ? "" : " and 缴费情况 ='" + jfqk + "'");
			sb.append(")))");
			
			sql = sb.toString();
		}
		//修复进入查询无显示记录问题 by yyp
		//if ((request.getParameter("go") != null) && request.getParameter("go").equalsIgnoreCase("go")) {
			dataSearchForm.getPages().setMaxRecord( Integer.parseInt(dao.getOneRs(sql, inputV, "count")));
		//}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_HHGXY)){
			//淮海工学院
			setProperties(request);			
		}
		request.setAttribute("oper", oper);
		request.setAttribute("userSpecType", userSpceType);
		request.setAttribute("disabled", disabled);
		List list = Base.getNjList();
		if(Globals.XXDM_GZDX.equals(xxdm)){
			Collections.reverse(list);
		}
		
		request.setAttribute("njList", list);// 发送年级列表
		
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		if(xxdm.equalsIgnoreCase(Globals.XXDM_HZZY)){
			//查询杭州职业技术学院毕业班级
			StudentInfoService service = new StudentInfoService();
			sfyby = sfyby==null ? "" : sfyby;

			if(sfyby.equalsIgnoreCase("yes")){				
				request.setAttribute("bjList", service.getBjList(bjKey,"by"));
			}else{
				request.setAttribute("bjList", service.getBjList(bjKey,"zx"));// 发送班级列表
			}
		}
		if(rs == null || rs.size()<1){//无记录时，初始化总页数和总记录数
			dataSearchForm.getPages().setMaxPage(0);
			dataSearchForm.getPages().setMaxRecord(0);
		}
		request.setAttribute("mzList", dao.getMzList());// 民族名称
		request.setAttribute("zzmmList", dao.getZzmmList());// 政治面貌名称
		request.setAttribute("xjztList", stuDao.getXjztList());//学籍状态列表
		request.setAttribute("xzList", xsxxglService.getXzList());//学制列表
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		request.setAttribute("modiTag", modiTag);
		request.setAttribute("xxdm", xxdm);
		request.setAttribute("xqList", Base.getXqList());
		request.setAttribute("path", path);
		request.setAttribute("ctype", request.getParameter("ctype"));
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("pageSize", dataSearchForm.getPages().getPageSize());
		//学校个性化,桂林理工大学
		//if("10596".equalsIgnoreCase(Base.xxdm)){
		//	return new ActionForward("/sjcz/xxgxh/stu_info_query_"+Base.xxdm+".jsp",false);
		//}
		return mapping.findForward("success");
	}


	public void setProperties(HttpServletRequest request){
		HttpSession session = request.getSession();		
		String userName = session.getAttribute("userName").toString();
		String time = GetTime.getNowTime4();

		request.setAttribute("time", time);
		request.setAttribute("nu", userName);
		request.setAttribute("xskbUrl", Base.getInitProperties().get("xskbUrl"));
		request.setAttribute("bjkbUrl", Base.getInitProperties().get("bjkbUrl"));
		request.setAttribute("jskbUrl", Base.getInitProperties().get("jskbUrl"));
	}

	/**
	 * 显示学生信息维护页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward showStuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		CommanForm stuForm = (CommanForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		StuInfoDAO stuDao = new StuInfoDAO();
		StudentInfoCsmzService csmzService = new StudentInfoCsmzService();
		XsxxglService service = new XsxxglService();

		String oper = request.getParameter("oper");
		String userName = session.getAttribute("userName").toString();
		String writeAble = CheckPower.checkUsrPower(userName, "stu_info_query.do") ? "yes" : "no";
		String xxdm = StandardOperation.getXxdm();
		String[] columns = null;
		HashMap<String, String> map = new HashMap<String, String>();

		String sql = "";
		String xb = "";// 性别单选
		String xydm = stuForm.getXydm();
		String zydm = stuForm.getZydm();
		String bjdm = stuForm.getBjdm();
		String nj = stuForm.getNj();
		String xh = stuForm.getXh();
		String type = request.getParameter("type");
		
		//地址信息是否采用标准码
		boolean dzxxqdmFlag = "yes".equalsIgnoreCase(service.getXsxxCs().get("dzxxqdm")) ? true : false;
		
		if ("update".equalsIgnoreCase(oper)) {
			xh = request.getParameter("xh");			
			if(type!=null && "details".equalsIgnoreCase(type)){
				request.setAttribute("details", "details");
			}						
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGKYDX)){//中国矿业大学
				return new ActionForward("/xsxx_zgkd.do?method=showStuInfo&realTable=xsxxb",false);
			}
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGDZDX)){//中国地质大学
				return new ActionForward("/xsxxZgdzdx.do?method=showStuInfo&realTable=xsxxb",false);
			}
			//数据查询
			
			//北京理工大学珠海学院
			if (Globals.XXDM_BJLGDXZHXY.equals(xxdm)) {
				columns = dao.getColumnName("select a.xjlb xjzt,a.syd lydq,nvl((select sfbd from zhxyxsbdxx where xh=a.xh and xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)),'否') sfbd,nvl((select jfqk from zhxyxsbdxx where xh=a.xh and xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)),'未缴费') jfqk,a.* from view_xsxxb a where 1=2");
				sql = "select a.xjlb xjzt,a.syd lydq,nvl((select sfbd from zhxyxsbdxx where xh=a.xh and xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)),'否') sfbd,nvl((select jfqk from zhxyxsbdxx where xh=a.xh and xn=(select dqxn from xtszb) and xqdm=(select dqxq from xtszb)),'未缴费') jfqk,a.* from view_xsxxb a where xh=?";	
			} else {
				columns = dao.getColumnName("select a.xjlb xjzt,a.syd lydq,a.hkszd hkd,a.* from view_xsxxb a where 1=2");
				sql = "select a.xjlb xjzt,a.syd lydq,a.hkszd hkd,a.* from view_xsxxb a where xh=?";	
			}
			
			for(int i=0; i<columns.length; i++){
				columns[i] = columns[i].toLowerCase();
			}
			map = dao.getMap(sql, new String[] { xh }, columns);
			
			if("new".equalsIgnoreCase(Base.getInitProperties().get("edition"))){
				// sjf
				Map<String, String> fzxxMap = dao.getMapNotOut("select * from xsfzxxb a where a.xh=?", new String[]{xh});
				
				for(Map.Entry<String, String> fzxx : fzxxMap.entrySet()){
					String key = fzxx.getKey();
					String value = fzxx.getValue();
					
					if(map.containsKey(key)){
						if(StringUtils.isNull(map.get(key))){
							map.put(key, value);
						}
					}else {
						map.put(key, value);
					}
				}
			
				// ======================学生身体信息表 - qlj ================
				map.putAll(service.getXsstList(xh));
				// =============================================
				
			}
			// 汉字转换成数字
			xb = map.get("xb");
			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
				if (xb != null && !"".equalsIgnoreCase(xb)) {
					//map.put("xb", "男".equalsIgnoreCase(xb) ? "1" : "2");
				}
			}
			if(xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)){
				//东北林业 
				sql = "select jtszd jtdz, jtyb,jjzk jtjjqk from view_xsjtxx where xh=?";
				map.putAll(dao.getMap(sql, new String[]{xh}, new String[]{"jtdz","jtyb","jtjjqk"}));
			}
			if (xxdm.equalsIgnoreCase(Globals.XXDM_LSSFXY)) {//乐山师范学院
				String rxqdw = map.get("rxqdw");
				String jg    = map.get("jg");
				String syd    = map.get("syd");
				String jtdz   = map.get("jtdz");
				
				if(!Base.isNull(rxqdw)){
					String[] arrDq = rxqdw.split("/");
					map.put("rxqxxshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
					map.put("rxqxxshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
					map.put("rxqxxxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
					map.put("rxqbyxx", (arrDq != null && arrDq.length>=4)?arrDq[3]:"");
				}
				if(!Base.isNull(jg)){
					String[] arrDq = jg.split("/");
					map.put("jgshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
					map.put("jgshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
					map.put("jgxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
				}
				if(!Base.isNull(syd)){
					String[] arrDq = syd.split("/");
					map.put("syshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
					map.put("syshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
					map.put("syxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
				}
				if(!Base.isNull(jtdz)){
					String[] arrDq = jtdz.split("/");
					map.put("jtdzshen",  (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
					map.put("jtdzshi",  (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
					map.put("jtdzxian",  (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
					map.put("mph",  (arrDq != null && arrDq.length>=4)?arrDq[3]:"");
				}								
				request.setAttribute("ssList", stuDao.getSsList());				
				request.setAttribute("jgshiList", stuDao.getShiList(map.get("jgshen")).get("shiList"));
				request.setAttribute("jgxianList",  stuDao.getShiList(map.get("jgshen")).get("xianList"));
				request.setAttribute("syshiList", stuDao.getShiList(map.get("syshen")).get("shiList"));
				request.setAttribute("syxianList",  stuDao.getShiList(map.get("syshen")).get("xianList"));
				request.setAttribute("rxqxxshiList", stuDao.getShiList(map.get("rxqxxshen")).get("shiList"));
				request.setAttribute("rxqxxxianList",  stuDao.getShiList(map.get("rxqxxshen")).get("xianList"));
				request.setAttribute("jtdzshiList", stuDao.getShiList(map.get("rxqxxshen")).get("shiList"));
				request.setAttribute("jtdzxianList",  stuDao.getShiList(map.get("rxqxxshen")).get("xianList"));
			}else if(Globals.XXDM_GDTYZYJSXY.equalsIgnoreCase(xxdm)){//广东体育职业技术学院
				request.setAttribute("csdshiList", stuDao.getShiList(stuForm.getCsds()).get("shiList"));
				request.setAttribute("csdxianList",  stuDao.getShiList(stuForm.getCsdshi()).get("xianList"));
			}
			
				if(dzxxqdmFlag){//地址信息取标准码
					String syd = map.get("syd");				
					if(!Base.isNull(syd)){
						String[] arrDq = syd.split("/");
						map.put("syshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
						map.put("syshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
						map.put("syxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");					
					}								
					if(StringUtils.isNotNull(map.get("jg"))){
						String[] arrDq = map.get("jg").split("/");
						map.put("jgshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
						map.put("jgshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
						map.put("jgxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
					}
					if(StringUtils.isNotNull(map.get("hkd"))){
						String[] arrDq = map.get("hkd").split("/");
						map.put("hkshen", (arrDq != null && arrDq.length>=1)?arrDq[0]:"");
						map.put("hkshi", (arrDq != null && arrDq.length>=2)?arrDq[1]:"");
						map.put("hkxian", (arrDq != null && arrDq.length>=3)?arrDq[2]:"");
					}
					request.setAttribute("ssList", stuDao.getSsList());	
					request.setAttribute("shiList", stuDao.getShiList(map.get("syshen")).get("shiList"));
					request.setAttribute("xianList",  stuDao.getShiList(map.get("syshen")).get("xianList"));
					request.setAttribute("jgshiList", stuDao.getShiList(map.get("jgshen")).get("shiList"));
					request.setAttribute("jgxianList",  stuDao.getShiList(map.get("jgshen")).get("xianList"));
					// ----------2010/5/13 edit by luojw -------------
					// 户口
					request.setAttribute("hkshiList", stuDao.getShiList(
							map.get("hkshen")).get("shiList"));
					request.setAttribute("hkxianList", stuDao.getShiList(
							map.get("hkshi")).get("xianList"));
					// ----------end-------------
				}
		
			if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){//天津交通职业学院
				map.putAll(service.getXsxxjlb(xh));
			}
			
			XsxxJbxxForm myForm=new XsxxJbxxForm();
			XsxxJbxxService jbxxService =new XsxxJbxxService();
			if(Base.getXsxxwh().equalsIgnoreCase("kwh")){
				myForm.setTableName("xsxxb");
				myForm.setXh(xh);
				HashMap<String,String>hashMap=jbxxService.getXsxgxx(myForm);
				if(hashMap!=null && hashMap.size()>0){
					map.putAll(hashMap);
				}else{
					String msg = "学生信息数据源未确定，请联系相关人员！";
					request.setAttribute("yhInfo", msg);
					return new ActionForward("/yhInfo.do", false);
				}
			}
			
			//========2011.1.21 lr 加载取自其它模块的数据（如辅导员）
			
			// ======================可维护学生信息================================
			
			if(Base.getXsxxwh().equalsIgnoreCase("kwh")){
				myForm.setTableName("view_xsxxb");
				myForm.setXh(xh);
				map.putAll(jbxxService.getXsxgxx(myForm));
			}
			//  ======================================================
			
			map.putAll(service.getXsglxx(xh));
			//====end==============
			if(xxdm.equalsIgnoreCase(Globals.XXDM_HZSFXY)){//湖州师范
				map.putAll(service.getXskzzd(xh));
				map.put("sftsxs", service.sfTsxs(xh));
			}
			request.setAttribute("rs", map);
			xydm = map.get("xydm");
			bjdm = map.get("bjdm");
			zydm = map.get("zydm");
			nj = map.get("nj");
		}
		if ("add".equalsIgnoreCase(oper)) {			
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGKYDX)){//中国矿业大学
				return new ActionForward("/xsxx_zgkd.do?method=showStuInfo&realTable=xsxxb",false);
			}
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGDZDX)){//中国地质大学
				return new ActionForward("/xsxxZgdzdx.do?method=showStuInfo&realTable=xsxxb",false);
			}
			stuForm.setXb("1");
			request.setAttribute("rs", stuForm);
			
			if (xxdm.equalsIgnoreCase(Globals.XXDM_LSSFXY)) {//乐山师范学院
				request.setAttribute("ssList", stuDao.getSsList());
				request.setAttribute("jgshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("jgxianList",  stuDao.getShiList("9999999").get("xianList"));
				request.setAttribute("syshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("syxianList",  stuDao.getShiList("9999999").get("xianList"));
				request.setAttribute("rxqxxshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("rxqxxxianList",  stuDao.getShiList("9999999").get("xianList"));
				request.setAttribute("jtdzshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("jtdzxianList",  stuDao.getShiList("9999999").get("xianList"));
			}else if(Globals.XXDM_GDTYZYJSXY.equalsIgnoreCase(xxdm)){//广东体育职业技术学院
				request.setAttribute("csdshiList", stuDao.getShiList(stuForm.getCsds()).get("shiList"));
				request.setAttribute("csdxianList",  stuDao.getShiList(stuForm.getCsdshi()).get("xianList"));
			}
			
			if (dzxxqdmFlag) {
				request.setAttribute("ssList", stuDao.getSsList());
				request.setAttribute("shiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("xianList",  stuDao.getShiList("9999999").get("xianList"));
				request.setAttribute("jgshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("jgxianList",  stuDao.getShiList("9999999").get("xianList"));
				// ----------2010/5/13 edit by luojw -------------
				//户口
				request.setAttribute("hkshiList", stuDao.getShiList("9999999").get("shiList"));
				request.setAttribute("hkxianList", stuDao.getShiList("9999999").get("xianList"));
				// ----------end-------------
			}
		}

		xydm = (xydm == null ? "" : xydm);
		zydm = (zydm == null ? "" : zydm);
		bjdm = (bjdm == null ? "" : bjdm);
		nj = (nj == null ? "" : nj);
		String bjKey = xydm + "!!" + zydm + "!!" + nj;
		if (xxdm.equalsIgnoreCase(Globals.XXDM_NCDXKJXY)) {
			// 南昌科技学院 辅导员修改所带班级的学生信息
			int num = Integer.parseInt(
					dao.getOneRs("select count(*) num from view_fdyxx where zgh=?",
							new String[] { userName }, "num")
			);
			if (num > 0) {
				sql = "";
				sql = "select bjdm from fdybjb where zgh=? and bjdm = ?";
				String sdbjdm = dao.getOneRs(sql, new String[] { userName, bjdm }, "bjdm");
				if (sdbjdm != null 
						&& !sdbjdm.equalsIgnoreCase("")
						&& sdbjdm.equalsIgnoreCase(bjdm)) {
					//在学生修改信息时间范围内，读写权可写，否则不可修改
					writeAble = service.isXsxxxgsj() ? "yes" : "no";
				} else if (sdbjdm != null && !sdbjdm.equalsIgnoreCase("")
						&& !sdbjdm.equalsIgnoreCase(bjdm)) {
					writeAble = "no";
				}
			}
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_CSMZZYJSXY)){//长沙民政
			request.setAttribute("byzffztList", csmzService.getByzffztList());
		}
		request.setAttribute("xydm", xydm);
		request.setAttribute("zydm", zydm);
		request.setAttribute("bjdm", bjdm);
		request.setAttribute("njList", Base.getNjList());// 发送年级列表
		request.setAttribute("xyList", Base.getXyList());// 发送学院列表
		request.setAttribute("zyList", Base.getZyMap().get(xydm));// 发送专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));// 发送班级列表
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("xxdm", xxdm);
		request.setAttribute("oper", oper);
		request.setAttribute("mzList", dao.getMzList());
		request.setAttribute("zzmmList", dao.getZzmmList());
		request.setAttribute("yhList", service.getYhList());//银行信息列表
		request.setAttribute("pyccList", service.getList(GlobalsVariable.XTWH_PYCC_LIST));//培养层次
		request.setAttribute("kslbList", service.getList(GlobalsVariable.XTWH_KSLB_LIST));//考生类别
		request.setAttribute("rxfsList", service.getList(GlobalsVariable.XTWH_RXFS_LIST));//入学方式
		request.setAttribute("pyfsList", service.getList(GlobalsVariable.XTWH_PYFS_LIST));//培养方式
		request.setAttribute("sfzxk", request.getParameter("sfzxk"));
		
		//==================== 新版家庭信息与学生信息合并标志 - sjf ===================//
		request.setAttribute("edition", Base.getInitProperties().get("edition"));
		
		//存放相关家庭关系
		request.setAttribute("jtgxList", service.getJtgxList());
		//========================= end ==================================//
		
		if (xxdm.equalsIgnoreCase(Globals.XXDM_BJLHDX)) {
			// 北京联合
			sql = "select distinct zjdm,zjmc from zjxxb order by zjdm";
			List<HashMap<String, String>> zjList = dao.getList(sql, new String[] {}, new String[] { "zjdm", "zjmc" });
			request.setAttribute("zjList", zjList);
		}		
		
		//  =================判断学生信息是否可维护========================
		if(Base.getXsxxwh().equalsIgnoreCase("kwh")
				&& "add".equalsIgnoreCase(oper)){
			//判断非空字段
			if(stuDao.checkFkzd()){
				return new ActionForward("/xsxxJbxx.do?method=xsxxwh",false);
			}else{
				String msg = "非空字段未维护，请联系管理人员！";
				request.setAttribute("yhInfo", msg);
				return new ActionForward("/yhInfo.do", false);
			}
		//修改操作
		}else if(Base.getXsxxwh().equalsIgnoreCase("kwh")){
			if(!stuDao.checkFkzd()){
				String msg = "非空字段未维护，请联系管理人员！";
				request.setAttribute("yhInfo", msg);
				return new ActionForward("/yhInfo.do", false);
			}else{
				XsxxJbxxForm myForm=new XsxxJbxxForm();
				XsxxJbszForm model=new XsxxJbszForm();
				XsxxJbxxService jbxxService =new XsxxJbxxService();
				XsxxJbszService jbszService =new XsxxJbszService();
				XsxxYnysService ynysService = new XsxxYnysService();
				CommanForm dataSearchForm =new CommanForm();
				//显示区域
				request.setAttribute("xsqList",jbxxService.getXsqnrList(myForm));
				//字段位置
				request.setAttribute("zdwzList", jbxxService.getZdwzList(myForm));
				//启用字段
				request.setAttribute("qyzdList", jbxxService.getQyzdList(myForm));
				//显示区显示字段
				request.setAttribute("xsqzdList", jbszService.getXsqZdwzList(model));
				//加载下拉列表
				jbxxService.setXlkList(myForm, request);
				
				jbxxService.checkZdSize(request,model);
				request.setAttribute("ssList", ynysService.getSsList());
		        request.setAttribute("shiList", ynysService.getShiList(dataSearchForm.getJgshen()).get("shiList"));
				request.setAttribute("xianList",  ynysService.getShiList(dataSearchForm.getJgshen()).get("xianList"));
				FormModleCommon.setNjXyZyBjListForFdyBzr(request);
				return mapping.findForward("xsxxwh");
			}
		}
		
		return transferPage(request, mapping);	
	}

	public ActionForward transferPage(HttpServletRequest request, ActionMapping mapping){
		DAO dao = DAO.getInstance();
		StuInfoDAO stuInfoDao = new StuInfoDAO();
		String xxdm = StandardOperation.getXxdm();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType").toString();
		request.setAttribute("xjztList", stuInfoDao.getXjztList());
		//校区信息
		request.setAttribute("yxdmList", stuInfoDao.getYxdmList());
		if (xxdm.equalsIgnoreCase(Globals.XXDM_BJSGMJSXYFWFY)) {
			// 北京市工贸技师学院服务分院
			return mapping.findForward("stuinfo_bjsgmjsxy");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)) {
			// 东北林业大学
			return mapping.findForward("stuinfo_dblydx");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_SHGC)) {
			// 上海工程技术大学
			return mapping.findForward("stuinfo_shgc");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_GDNZZYJSXY)) {
			// 广东女子
			return mapping.findForward("stuinfo_gdnzzy");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
			// 西昌学院
			return mapping.findForward("stuinfo_xcxy");
		}
//		if (xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)) {
//			// 云南艺术
//			return mapping.findForward("stuinfo_ynys");
//		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_GDBYXY)) {
			// 白云学院
			return mapping.findForward("stuinfo_byxy");
		}
		if (xxdm.equalsIgnoreCase(Globals.XXDM_NCDXKJXY)) {
			// 南昌大学科技学院
			return mapping.findForward("stuinfo_nckj");
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)){
			//西北二民院
			return mapping.findForward("stuinfo_xbemy");
		}
//		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJJDZYJSXY)){
//			浙江机电
//			return mapping.findForward("stuinfo_zjjjzyjsxy");
//		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
			//武汉理工大学
			if(userType!=null && userType.equalsIgnoreCase("xy")){
				return mapping.findForward("stuinfo_whlgdx_xy");
			}
			return mapping.findForward("stuinfo_whlgdx");
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDXHXXY)){
			//武汉理工大学华夏学院
			return mapping.findForward("stuinfo_whlgdxhxxy");
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJJJZYJSXY)){
			//浙江经济
			return mapping.findForward("stuinfo_zjjjzyjsxy");
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJGSZYJSXY)){
			//浙江工商职业技术学院
			XsxxZjgszyjsxyService service = new XsxxZjgszyjsxyService();
			List yxdmList = service.getDmList("zjyxdmb", new String[]{"yxdm","yxmc"});
			List xwdmList = service.getDmList("xwdmb", new String[]{"xwdm","xwmc"});
			List sydList = service.getDmList("syddmb", new String[]{"syddm","sydmc"});
			List wyyzList = service.getDmList("wyyzdmb", new String[]{"wyyzdm","wyyzmc"});
			List xlList = service.getDmList("xldmb", new String[]{"xldm","xlmc"});
			List zslbList = service.getDmList("zslbdmb", new String[]{"zslbdm","zslbmc"});
			List pyfsList = service.getDmList("pyfsdmb", new String[]{"pyfsdm","pyfsmc"});

			request.setAttribute("yxdmList", yxdmList);
			request.setAttribute("xwdmList", xwdmList);
			request.setAttribute("sydList", sydList);
			request.setAttribute("wyyzList", wyyzList);
			request.setAttribute("xlList", xlList);
			request.setAttribute("zslbList", zslbList);
			request.setAttribute("pyfsList", pyfsList);
			return mapping.findForward("stuinfo_zjgszyjsxy");
		}
		
		// ------------2010/5/13 edit by luojw -------------
		if (xxdm.equalsIgnoreCase(Globals.XXDM_NJJS)||xxdm.equalsIgnoreCase(Globals.XXDM_GUIZHDX)) {
			// 地址信息是否采用标准码
			XsxxglService xsService = new XsxxglService();
			boolean dzxxqdmFlag = "yes".equalsIgnoreCase(xsService.getXsxxCs()
					.get("dzxxqdm")) ? true : false;
			// 南京技师,贵州大学
			if (dzxxqdmFlag) {
				StuInfoDAO stuDao = new StuInfoDAO();
				// 户口
				request.setAttribute("hkshiList", stuDao.getShiList("").get(
						"shiList"));
				request.setAttribute("hkxianList", stuDao.getShiList("").get(
						"xianList"));
			}

			XsxxZjgszyjsxyService service = new XsxxZjgszyjsxyService();
			List xsccList = service.getDmList("dtjs_xsccb", new String[] {
					"xsccdm", "xsccmc" });
			List hkxzList = service.getDmList("xsxx_hkxzb", new String[] {
					"dm", "mc" });
			List rxqwhcdList = service.getDmList("xsxx_rxqwhcdb", new String[] {
					"dm", "mc" });

			request.setAttribute("xsccList", xsccList);
			request.setAttribute("hkxzList", hkxzList);
			request.setAttribute("rxqwhcdList", rxqwhcdList);
		}
		// -------------------end---------------------
		
		if(Globals.XXDM_ZGDZDX.equalsIgnoreCase(xxdm)){//中国地质大学
			request.setAttribute("xsLbList", dao.getStuType("lb"));
			request.setAttribute("xsLxList", dao.getStuType("lx"));
		}
		if(Globals.XXDM_LSSFXY.equalsIgnoreCase(xxdm)){//乐山师范学院
			request.setAttribute("ssList", stuInfoDao.getSsList());			
		}
		
		if(Globals.XXDM_SHCBYSGDZKXX.equalsIgnoreCase(xxdm)){// 上海印刷增加家庭困难类型列表
			request.setAttribute("knlxList", stuInfoDao.getKnlxList());
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_SCJDZYJSXY)){//四川机电职业技术学院
			request.setAttribute("path", "stu_info_query.do?method=stuInfo");
			FormModleCommon.commonRequestSet(request);
			return mapping.findForward("stuinfo_scjdzyjsxy");
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_HZSFXY)){//湖州师范
			request.setAttribute("path", "stu_info_query.do?method=stuInfo");
			FormModleCommon.commonRequestSet(request);
			return mapping.findForward("stuinfo_hzsfxy");
		}
		
		request.setAttribute("path", "stu_info_query.do?method=stuInfo");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("stuinfo");  
	}

	/**
	 * 学生信息保存
	 */
	public ActionForward stuInfoSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		
		CommanForm studetail = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		XsxxZgkdService xsxxZgkdService = new XsxxZgkdService();
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		Encrypt ept = new Encrypt();
		//初始化学生密码
		String mm = ept.encrypt("888888");
		DAO dao = DAO.getInstance();
		StuInfoDAO stuDao = new StuInfoDAO();	
		StudentInfoCsmzService csmzService = new StudentInfoCsmzService();
		HashMap<String,String> map = new HashMap<String,String>();
		boolean flag = false;
		String doType = request.getParameter("oper");
		String userName = session.getAttribute("userName").toString();
		String writeAble = CheckPower.checkUsrPower(userName, "stu_info_query.do") ? "yes" : "no";
		String xxdm = StandardOperation.getXxdm();
		String[] columns = null;
		String[] jtxxCol = null;
		String[] jtxxValue = null;

		String xh = DealString.toGBK(studetail.getXh());
		String xm = DealString.toGBK(studetail.getXm());
		String xb = DealString.toGBK(studetail.getXb());
		String nj = DealString.toGBK(studetail.getNj());
		String xz = DealString.toGBK(studetail.getXz());
		String xy = DealString.toGBK(studetail.getXy());
		String zymc = DealString.toGBK(studetail.getZymc());
		String bjmc = DealString.toGBK(studetail.getBjmc());
		String bjdm = DealString.toGBK(studetail.getBjdm());
		String zydm = DealString.toGBK(studetail.getZydm());
		String xydm = DealString.toGBK(studetail.getXydm());

		String xmpy = DealString.toGBK(studetail.getXmpy());
		String cym = DealString.toGBK(studetail.getCym());
		String xszp = DealString.toGBK(studetail.getXszp());
		String csrq = DealString.toGBK(studetail.getCsrq());
		String sfzh = DealString.toGBK(studetail.getSfzh());
		String jg = DealString.toGBK(studetail.getJg());
		String mz = DealString.toGBK(studetail.getMz());
		String zzmm = DealString.toGBK(studetail.getZzmm());
		String syd = DealString.toGBK(studetail.getSyd());
		String xx = DealString.toGBK(studetail.getXx());
		String sg = DealString.toGBK(studetail.getSg());
		String tz = DealString.toGBK(studetail.getTz());
		String tc = DealString.toGBK(studetail.getTc());

		String lxdh = DealString.toGBK(studetail.getLxdh());
		String dzyx = DealString.toGBK(studetail.getDzyx());
		String sjhm = DealString.toGBK(studetail.getSjhm());

		String kslb = DealString.toGBK(studetail.getKslb());
		String rxfs = DealString.toGBK(studetail.getRxfs());
		String pyfs = DealString.toGBK(studetail.getPyfs());
		String pycc = DealString.toGBK(studetail.getPycc());
		String xjztm = DealString.toGBK(studetail.getXjzt());
		String bz = DealString.toGBK(studetail.getBz());
		String byxx = studetail.getByxx();

		String jkzk = DealString.toGBK(studetail.getJkzk());
		String jtdz = DealString.toGBK(studetail.getJtdz());
		String jtdh = DealString.toGBK(studetail.getJtdh());
		String jtyb = DealString.toGBK(studetail.getJtyb());
		String whcd = DealString.toGBK(studetail.getWhcd());
		String jrgqtsj = DealString.toGBK(studetail.getJrgqtsj());
		String jrgcdsj = DealString.toGBK(studetail.getJrgcdsj());
		String jlcfjl = DealString.toGBK(studetail.getJlcfjl());
		String ah = DealString.toGBK(studetail.getAh());
		String jtjjqk = DealString.toGBK(studetail.getJtjjqk());
		String shgxxm1 = DealString.toGBK(studetail.getShgxxm1());
		String shgxgx1 = DealString.toGBK(studetail.getShgxgx1());
		String shgxgzdw1 = DealString.toGBK(studetail.getShgxgzdw1());
		String shgxzw1 = DealString.toGBK(studetail.getShgxzw1());
		String shgxdwdh1 = DealString.toGBK(studetail.getShgxdwdh1());
		String shgxsjhm1 = DealString.toGBK(studetail.getShgxsjhm1());
		String shgxxm2 = DealString.toGBK(studetail.getShgxxm2());
		String shgxgx2 = DealString.toGBK(studetail.getShgxgx2());
		String shgxgzdw2 = DealString.toGBK(studetail.getShgxgzdw2());
		String shgxzw2 = DealString.toGBK(studetail.getShgxzw2());
		String shgxdwdh2 = DealString.toGBK(studetail.getShgxdwdh2());
		String shgxsjhm2 = DealString.toGBK(studetail.getShgxsjhm2());
		String jtqkjj = DealString.toGBK(studetail.getJtqkjj());
		String sfdk = DealString.toGBK(studetail.getSfdk());

		String ssbh = DealString.toGBK(studetail.getSsbh());
		String ssdh = DealString.toGBK(studetail.getSsdh());
		String qsdh = DealString.toGBK(studetail.getQsdh());
		String zsrq = DealString.toGBK(studetail.getZsrq());
		String zsjzrq = DealString.toGBK(studetail.getZsjzrq());
		String ssbz = DealString.toGBK(studetail.getSsbz());
		String ssch = DealString.toGBK(studetail.getSsch());
		String rxqdw= DealString.toGBK(studetail.getRxqdw());
		// 广东女子职业
		String rxrq = DealString.toGBK(studetail.getRxrq());
		String fdyxm = DealString.toGBK(studetail.getFdyxm());
		String gkcj = studetail.getGkcj();

		// 云南艺术
		String qqhm = studetail.getQqhm();
		String zw = DealString.toGBK(studetail.getZw());
		String xwzsxxdz = DealString.toGBK(studetail.getXwzsxxdz());

		// 北京联合
		String sfzfx = DealString.toGBK(studetail.getSfzfx());
		String zjdm = studetail.getZjdm();
		String kh = DealString.toGBK(studetail.getKh());
		String xxfx = DealString.toGBK(studetail.getXxfx());
		String hkszd = DealString.toGBK(studetail.getHkszd());

		//中州大学
		String sfzx = DealString.toGBK(studetail.getSfzx());
		String sfyby = DealString.toGBK(studetail.getSfyby());

		//西北二民院
		String ksh = studetail.getKsh();
		String zyfx = DealString.toGBK(studetail.getZyfx());
		String pyfx = DealString.toGBK(studetail.getPyfx());
		String xxszd = DealString.toGBK(studetail.getXxszd());
		String dqszj = DealString.toGBK(studetail.getDqszj());
		String zylb = DealString.toGBK(studetail.getZylb());
		String fxzy = DealString.toGBK(studetail.getFxzy());
		String fxzyfx = DealString.toGBK(studetail.getFxzyfx());
		String bxxs = DealString.toGBK(studetail.getBxxs());
		String bxlx = DealString.toGBK(studetail.getBxlx());
		String xxxs = DealString.toGBK(studetail.getXxxs());
		String zsjj = DealString.toGBK(studetail.getZsjj());
		String csd = DealString.toGBK(studetail.getCsd());
		String byny = DealString.toGBK(studetail.getByny());
		String bjyjl = DealString.toGBK(studetail.getBjyjl());
		String zsbh = DealString.toGBK(studetail.getZsbh());
		String zsxlh = DealString.toGBK(studetail.getZsxlh());
		String xzxm = DealString.toGBK(studetail.getXzxm());
		String xw = DealString.toGBK(studetail.getXw());
		String xwzsbh = DealString.toGBK(studetail.getXwzsbh());
		String xwzsxlh = DealString.toGBK(studetail.getXwzsxlh());
		String shbj = DealString.toGBK(studetail.getShbj());
		String dybj = DealString.toGBK(studetail.getDybj());
		String thbs = DealString.toGBK(studetail.getThbs());
		//武汉理工
		String zslb = DealString.toGBK(studetail.getZslb());
		String gj = DealString.toGBK(studetail.getGj());
		String sfjh = DealString.toGBK(studetail.getSfjh());
		String ccqj = DealString.toGBK(studetail.getCcqj());
		//长沙民政
		String byzffztdm = studetail.getByzffztdm();

		//湖南工业大学
		String dasfyl = DealString.toGBK(studetail.getDasfyl());
		String daylyy = DealString.toGBK(studetail.getDaylyy());

		//浙江工商职业技术学院
		String yxdm = studetail.getYxdm();
		String xwdm = studetail.getXw();
		String sfzz = DealString.toGBK(studetail.getSfzz());
		String sfsf = DealString.toGBK(studetail.getSfsf());
		String sfdl = DealString.toGBK(studetail.getSfdl());
		String dxhwp = DealString.toGBK(studetail.getDxhwp());
		String bysj = studetail.getBysj();
		String zxwyyzdm = studetail.getZxwyyzdm();
		String wydj = DealString.toGBK(studetail.getWydj());
		String jsjdj = DealString.toGBK(studetail.getJsjdj());
		String yzbm = DealString.toGBK(studetail.getYzbm());
		String lxdz = DealString.toGBK(studetail.getLxdz());
		String shzw = DealString.toGBK(studetail.getShzw());
		String jypx = DealString.toGBK(studetail.getJypx());
		String xmsj = DealString.toGBK(studetail.getXmsj());
		String zgzs = DealString.toGBK(studetail.getZgzs());
		String jljn = DealString.toGBK(studetail.getJljn());
		String sybz1 = DealString.toGBK(studetail.getSybz1());
		String sybz2 = DealString.toGBK(studetail.getSybz2());
		String sybz3 = DealString.toGBK(studetail.getSybz3());
		String xldm = studetail.getXldm();
		//浙江经济职业技术学院
		String zkzh = studetail.getZkzh();//准考证号
		String grjl = DealString.toGBK(studetail.getGrjl());//个人简历
		String sfcj = DealString.toGBK(studetail.getSfcj());
		//西昌学院
		String yhkh = DealString.toGBK(studetail.getYhkh());//银行卡号
		String ykth = DealString.toGBK(studetail.getYkth());//一卡通号
        //中国地质大学
		String xslb = DealString.toGBK(studetail.getXslb());//学生类别
		String xslx = DealString.toGBK(studetail.getXslx());//学生类型
		String sfbys = DealString.toGBK(studetail.getSfbys());//是否毕业生
		String yhdm = studetail.getYhdm();
		
		// 南京技师
		String hkshen = studetail.getHkshen();
		String hkshi = studetail.getHkshi();
		String hkxian = studetail.getHkxian();
		String zcsxhm = studetail.getZcsxhm();
		String rxqwhcd = studetail.getRxqwhcd();
		String hkxz = studetail.getHkxz();
		
		// 浙江建设职业技术学院
		String xzcm= DealString.toGBK(studetail.getXzcm());//鞋子尺码
		String xsxw= DealString.toGBK(studetail.getXsxw());//学生胸围
		String sfhq = studetail.getSfhq();//该字段存储浙江建设的“是否进修生”
		
		//浙江科技
		String byzh = DealString.toGBK(studetail.getByzh());//鞋子尺码
		
		//北京市工贸技师学院
		String sfzblx =DealString.toGBK(studetail.getSfzblx());//是否征兵离校
		
		studetail.setSfbys(sfbys);
		studetail.setDasfyl(dasfyl);
		studetail.setDaylyy(daylyy);
		studetail.setKh(kh);
		studetail.setFdyxm(fdyxm);
		studetail.setXx(xx);
		studetail.setWhcd(whcd);
		studetail.setJkzk(jkzk);
		studetail.setJtdz(jtdz);
		studetail.setByxx(byxx);
		studetail.setJlcfjl(jlcfjl);
		studetail.setKslb(kslb);
		studetail.setRxfs(rxfs);
		studetail.setPyfs(pyfs);
		studetail.setPycc(pycc);
		studetail.setXszp(xszp);
		studetail.setSsbh(ssbh);
		studetail.setSsdh(ssdh);
		studetail.setZsrq(zsrq);
		studetail.setZsjzrq(zsjzrq);
		studetail.setSsbz(ssbz);
		studetail.setSsch(ssch);
		studetail.setXh(xh);
		studetail.setXy(xy);
		studetail.setZymc(zymc);
		studetail.setBjmc(bjmc);
		studetail.setBjdm(bjdm);
		studetail.setZydm(zydm);
		studetail.setXydm(xydm);
		studetail.setBz(bz);
		studetail.setXm(xm);
		studetail.setXmpy(xmpy);
		studetail.setNj(nj);
		studetail.setSyd(syd);
		studetail.setCsrq(csrq);
		studetail.setSfzh(sfzh);
		studetail.setXb(xb);
		studetail.setMz(mz);
		studetail.setZzmm(zzmm);
		studetail.setLxdh(lxdh);
		studetail.setDzyx(dzyx);
		studetail.setCym(cym);
		studetail.setSg(sg);
		studetail.setTz(tz);
		studetail.setTc(tc);
		studetail.setRxqdw(rxqdw);
		

		String[] values1 = null;
		String sql = "";
		xy = dao.getOneRs("select xymc from view_njxyzybj where xydm=?", new String[] { xydm }, "xymc");
		zymc = dao.getOneRs("select zymc from view_njxyzybj where zydm=?", new String[] { zydm }, "zymc");
		bjmc = dao.getOneRs("select bjmc from view_njxyzybj where bjdm=?", new String[] { bjdm }, "bjmc");

		boolean dzxxqdmFlag = "yes".equalsIgnoreCase(service.getXsxxCs().get("dzxxqdm")) ? true : false;
		
		// 是否在学生信息中维护家庭信息
		String edition = Base.getInitProperties().get("edition");
		
		if("new".equalsIgnoreCase(edition)){
			String lxdh1 = studetail.getLxdh1();
			String jtszd = studetail.getJtszd();
			String jjzk = studetail.getJjzk();
			String jtcy1_xm = studetail.getJtcy1_xm();
			String jtcy2_xm = studetail.getJtcy2_xm();
			String jtcy3_xm = studetail.getJtcy3_xm();
			String jtcy1_gx = studetail.getJtcy1_gx();
			String jtcy2_gx = studetail.getJtcy2_gx();
			String jtcy3_gx = studetail.getJtcy3_gx();
			String jtcy1_nl = studetail.getJtcy1_nl();
			String jtcy2_nl = studetail.getJtcy2_nl();
			String jtcy3_nl = studetail.getJtcy3_nl();
			String jtcy1_sfzh = studetail.getJtcy1_sfzh();
			String jtcy2_sfzh = studetail.getJtcy2_sfzh();
			String jtcy3_sfzh = studetail.getJtcy3_sfzh();
			String jtcy1_mz = studetail.getJtcy1_mz();
			String jtcy2_mz = studetail.getJtcy2_mz();
			String jtcy3_mz = studetail.getJtcy3_mz();
			String jtcy1_zzmm = studetail.getJtcy1_zzmm();
			String jtcy2_zzmm = studetail.getJtcy2_zzmm();
			String jtcy3_zzmm = studetail.getJtcy3_zzmm();
			String jtcy1_zy = studetail.getJtcy1_zy();
			String jtcy2_zy = studetail.getJtcy2_zy();
			String jtcy3_zy = studetail.getJtcy3_zy();
			String jtcy1_zw = studetail.getJtcy1_zw();
			String jtcy2_zw = studetail.getJtcy2_zw();
			String jtcy3_zw = studetail.getJtcy3_zw();
			String jtcy1_lxdh1 = studetail.getJtcy1_lxdh1();
			String jtcy2_lxdh1 = studetail.getJtcy2_lxdh1();
			String jtcy3_lxdh1 = studetail.getJtcy3_lxdh1();
			String jtcy1_lxdh2 = studetail.getJtcy1_lxdh2();
			String jtcy2_lxdh2 = studetail.getJtcy2_lxdh2();
			String jtcy3_lxdh2 = studetail.getJtcy3_lxdh2();
			String jtcy1_gzdz = studetail.getJtcy1_gzdz();
			String jtcy2_gzdz = studetail.getJtcy2_gzdz();
			String jtcy3_gzdz = studetail.getJtcy3_gzdz();
		
			jtxxCol = new String[]{"xh", "lxdh1", "yb", "jtszd", "jjzk", "jtcy1_xm", "jtcy2_xm", "jtcy3_xm",
					"jtcy1_gx", "jtcy2_gx", "jtcy3_gx", "jtcy1_nl", "jtcy2_nl", "jtcy3_nl", "jtcy1_sfzh", "jtcy2_sfzh",
					"jtcy3_sfzh", "jtcy1_mz", "jtcy2_mz", "jtcy3_mz", "jtcy1_zzmm", "jtcy2_zzmm", "jtcy3_zzmm", "jtcy1_zy",
					"jtcy2_zy", "jtcy3_zy", "jtcy1_zw", "jtcy2_zw", "jtcy3_zw", "jtcy1_lxdh1", "jtcy2_lxdh1", "jtcy3_lxdh1",
					"jtcy1_lxdh2", "jtcy2_lxdh2", "jtcy3_lxdh2", "jtcy1_gzdz", "jtcy2_gzdz", "jtcy3_gzdz"};
			
			jtxxValue = new String[]{xh, lxdh1, jtyb, jtszd, jjzk, jtcy1_xm, jtcy2_xm, jtcy3_xm,
					jtcy1_gx, jtcy2_gx, jtcy3_gx, jtcy1_nl, jtcy2_nl, jtcy3_nl, jtcy1_sfzh, jtcy2_sfzh,
					jtcy3_sfzh, jtcy1_mz, jtcy2_mz, jtcy3_mz, jtcy1_zzmm, jtcy2_zzmm, jtcy3_zzmm, jtcy1_zy,
					jtcy2_zy, jtcy3_zy, jtcy1_zw, jtcy2_zw, jtcy3_zw, jtcy1_lxdh1, jtcy2_lxdh1, jtcy3_lxdh1,
					jtcy1_lxdh2, jtcy2_lxdh2, jtcy3_lxdh2, jtcy1_gzdz, jtcy2_gzdz, jtcy3_gzdz};
		}
		
		//保存学生身体信息
		String[]stxxCol=null;
		String[]stxxValue=null;
		if("new".equalsIgnoreCase(edition)
				&& Globals.XXDM_ZJJSZYJSXY.equalsIgnoreCase(xxdm)){//浙江建设职业学院
			stxxCol = new String[]{"xh","xzcm","xsxw"};
			stxxValue = new String[]{xh,xzcm,xsxw};
		}
		
		if (xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)) {
			// 东北林业大学
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "xm", "nj", "csrq", "sfzh", "xb", "mz",
					"zzmm", "tc", "xszp", "jtdz", "jtdh", "jtyb", "jrgqtsj",
					"jrgcdsj", "sjhm", "dzyx", "ah", "jtjjqk", "shgxxm1",
					"shgxgx1", "shgxgzdw1", "shgxzw1", "shgxdwdh1",
					"shgxsjhm1", "shgxxm2", "shgxgx2", "shgxgzdw2", "shgxzw2",
					"shgxdwdh2", "shgxsjhm2", "jtqkjj", "jlcfjl", "bz", "sfdk",
					"syd", "jg", "xjztm", "lxdh","byny","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, xm,
					nj, csrq, sfzh, xb, mz, zzmm, tc, xszp, jtdz, jtdh, jtyb,
					jrgqtsj, jrgcdsj, sjhm, dzyx, ah, jtjjqk, shgxxm1, shgxgx1,
					shgxgzdw1, shgxzw1, shgxdwdh1, shgxsjhm1, shgxxm2, shgxgx2,
					shgxgzdw2, shgxzw2, shgxdwdh2, shgxsjhm2, jtqkjj, jlcfjl,
					bz, sfdk, syd, jg, xjztm, lxdh,byny,sfbys };
		}else if (xxdm.equalsIgnoreCase(Globals.XXDM_GDNZZYJSXY)) {
			// 广东女子职业
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "rxrq", "fdyxm", "gkcj", "jtdz",
					"jtjjqk", "jkzk" ,"byny", "sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, rxrq, fdyxm, gkcj, jtdz, jtjjqk, jkzk ,byny, sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
			// 西昌学院
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "jtdz", "byny", "sfyby", "kh", "ykth",
					"yhkh", "sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, jtdz,byny, sfyby, kh, ykth, yhkh, sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)) {
			// 云南艺术
			if(dzxxqdmFlag){
				jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
				syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
				hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
			}
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xz", "sjhm", "qqhm", "zw", "xxfx", "rxrq", "byny" ,
					"xwzsxxdz" ,"sfdk", "ssbh","qsdh","ssch","rzrq","zsjzrq","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg,
					xz, sjhm, qqhm, zw, xxfx, rxrq, byny,xwzsxxdz,sfdk,ssbh,qsdh,
					ssch,zsrq,zsjzrq,sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_GDBYXY)) {
			// 白云学院
			//String hkszd = DealString.toGBK(studetail.getHkszd());
			hkxz = DealString.toGBK(studetail.getHkxz());
			String zyjb = DealString.toGBK(studetail.getZyjb());

			studetail.setHkxz(hkxz);
			studetail.setZyjb(zyjb);
			studetail.setHkszd(hkszd);

			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "whcd", "hkszd", "hkxz", "zyjb",
					"kh", "rxrq", "byny", "sfbys"};
			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, whcd, hkszd, hkxz, zyjb, kh, rxrq, byny,sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_NCDXKJXY)) {
			// 南昌大学科技学院
			String jtdzs = DealString.toGBK(studetail.getJtdzs());
			String jtdzx = DealString.toGBK(studetail.getJtdzx());
			String ssyq = DealString.toGBK(studetail.getSsyq());
			String ssld = DealString.toGBK(studetail.getSsld());

			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "jtdzs", "jtdzx", "ssld", "ssyq",
					"xx", "byny" ,"sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, jtdzs, jtdzx, ssld, ssyq, xx ,byny, sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_JGSDX)) {
			// 井冈山大学
			String sfzsb = DealString.toGBK(studetail.getSfzsb());
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "sfzsb" ,"byny", "sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, sfzsb ,byny, sfbys};
		} else if (xxdm.equalsIgnoreCase(Globals.XXDM_BJLHDX)) {
			// 北京联合
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "sfzfx", "zjdm", "kh" ,"hkszd", "byny","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, sfzfx, zjdm, kh ,hkszd, byny, sfbys};
		}else if(xxdm.equalsIgnoreCase(Globals.XXDM_AHJZGYXY)){
			//安徽建筑工业学院
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "kh" ,"byny", "sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, byny,sfbys};
		}else if(xxdm.equalsIgnoreCase(Globals.XXDM_ZZDX)){
			//中州大学 
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm", "sfzx", "byny", "sfbys" };

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm, sfzx, byny, sfbys};
		}
//		else if(xxdm.equalsIgnoreCase(Globals.XXDM_XBMZDX)){
//			// 西北民族大学
//			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
//				if(dzxxqdmFlag){
//					jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
//					syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
//					hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
//				}
//			}
//			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
//					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
//					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
//					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
//					"xszp", "xz", "sjhm", "sfzx", "byny", "sfbys" };
//
//			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
//					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
//					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
//					xz, sjhm, sfzx, byny, sfbys};
//			
//		}
		else if(xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)){
			//西北二民院
			columns = new String[]{"xh","xm","xb","nj","dqszj","xy","xydm","zymc",
					"zydm","bjmc","bjdm","xmpy","bz","syd","csrq","sfzh","mz","zzmm",
					"cym","kslb","pyfs","pycc","xjztm","xz","ksh","xxszd","zyfx",
					"pyfx","zylb", "fxzy","fxzyfx","bxxs","bxlx","xxxs","zsjj",
					"rxrq","rxfs","jg","csd","byny","bjyjl","zsbh","zsxlh","xzxm","xw",
					"xwzsbh","xwzsxlh","shbj","dybj","thbs","dzyx","lxdh","sjhm","sfbys"};
			values1 = new String[]{xh,xm,xb,nj,dqszj,xy,xydm,zymc,
					zydm,bjmc,bjdm,xmpy,bz,syd,csrq,sfzh,mz,zzmm,
					cym,kslb,pyfs,pycc,xjztm,xz,ksh,xxszd,zyfx,
					pyfx,zylb,fxzy,fxzyfx,bxxs,bxlx,xxxs,zsjj,
					rxrq,rxfs,jg,csd,byny,bjyjl,zsbh,zsxlh,xzxm,xw,
					xwzsbh,xwzsxlh,shbj,dybj,thbs,dzyx,lxdh,sjhm,sfbys};
		}else if (xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
			//武汉理工大学
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "xm","nj", "sfzh", "xb", "mz", "zzmm",
					"lxdh", "dzyx", "sg","tz", "tc",  "xjztm", "jg",
					"xz", "sjhm", "zslb", "sfjh", "gj", "ccqj", "byny", "sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm,
					xm,  nj,  sfzh, xb, mz, zzmm, lxdh, dzyx,
					sg, tz, tc, xjztm, jg, xz, sjhm, zslb, sfjh, gj, ccqj, byny, sfbys};

		}else if(xxdm.equalsIgnoreCase(Globals.XXDM_CSMZZYJSXY)){
			//长沙民政 
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh" ,"byzffztdm", "byny","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, byzffztdm, byny, sfbys};
		}else if(xxdm.equalsIgnoreCase(Globals.XXDM_ZJJJZYJSXY)){
			//浙江经济职业技术学院
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","grjl",
					"jlcfjl","zkzh","sfcj", "byny","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,grjl,jlcfjl,zkzh,sfcj, byny,sfbys};
		}else if(Globals.XXDM_LSSFXY.equalsIgnoreCase(xxdm)) {
			//	乐山师范学院
			rxqdw = studetail.getRxqxxshen()+"/"+studetail.getRxqxxshi()+"/"+studetail.getRxqxxxian()+"/"+DealString.toGBK(studetail.getRxqbyxx());
			jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
			syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
			jtdz         = studetail.getJtdzshen()+"/"+studetail.getJtdzshi()+"/"+studetail.getJtdzxian()+"/"+DealString.toGBK(studetail.getMph());
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm","jtdz","jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby","sfzx","byny","rxqdw","sfbys"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh,dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm,jtdz,jg,xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,rxqdw,sfbys};			
						
			request.setAttribute("ssList", stuDao.getSsList());	
			request.setAttribute("jgshiList", stuDao.getShiList(studetail.getJgshen()).get("shiList"));
			request.setAttribute("jgxianList",  stuDao.getShiList(studetail.getJgshen()).get("xianList"));
			request.setAttribute("syshiList", stuDao.getShiList(studetail.getSyshen()).get("shiList"));
			request.setAttribute("syxianList",  stuDao.getShiList(studetail.getSyshen()).get("xianList"));
			request.setAttribute("rxqxxshiList", stuDao.getShiList(studetail.getRxqxxshen()).get("shiList"));
			request.setAttribute("rxqxxxianList",  stuDao.getShiList(studetail.getRxqxxshen()).get("xianList"));
			request.setAttribute("jtdzshiList", stuDao.getShiList(studetail.getJtdzshen()).get("shiList"));
			request.setAttribute("jtdzxianList",  stuDao.getShiList(studetail.getJtdzshen()).get("xianList"));
			
		}
//		else if(Globals.XXDM_NJJS.equalsIgnoreCase(xxdm)) {
//			//南京技师
//			//------------2010/5/13 edit by luojw ----------------------
//			
//			if (dzxxqdmFlag) {
//				jg = studetail.getJgshen() + "/" + studetail.getJgshi() + "/"
//						+ studetail.getJgxian();
//				syd = studetail.getSyshen() + "/" + studetail.getSyshi() + "/"
//						+ studetail.getSyxian();
//			}
//			// 南京技师
//			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
//					"rxqdw", "zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd",
//					"csrq", "sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym",
//					"sg", "tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm",
//					"jg", "xszp", "xz", "sjhm", "kh", "dasfyl", "daylyy",
//					"yxdm", "xw", "sfzz", "sfsf", "sfdl", "dxhwp", "rxrq",
//					"bysj", "zsbh", "zxwyyzdm", "wydj", "jsjdj", "qqhm",
//					"lxdz", "yzbm", "shzw", "jypx", "xmsj", "zgzs", "jljn",
//					"sybz1", "sybz2", "sybz3", "xldm", "zslb", "sfyby", "sfzx",
//					"byny", "xslb", "xslx", "sfbys", "hkxz", "hkshen", "hkshi",
//					"hkxian", "zcsxhm", "rxqwhcd", "yhdm", "yhkh" };
//
//			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, rxqdw, zydm,
//					xydm, bz, xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm,
//					lxdh, dzyx, cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm,
//					jg, xszp, xz, sjhm, kh, dasfyl, daylyy, yxdm, xwdm, sfzz,
//					sfsf, sfdl, dxhwp, rxrq, bysj, zsbh, zxwyyzdm, wydj, jsjdj,
//					qqhm, lxdz, yzbm, shzw, jypx, xmsj, zgzs, jljn, sybz1,
//					sybz2, sybz3, xldm, zslb, sfyby, sfzx, byny, xslb, xslx,
//					sfbys, hkxz, hkshen, hkshi, hkxian, zcsxhm, rxqwhcd, yhdm,
//					yhkh };
//			// ---------------end---------------------
//		}
		else if(Globals.XXDM_GUIZHDX.equalsIgnoreCase(xxdm)){
			if(dzxxqdmFlag){
				jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
				syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
			}
			// 贵州大学
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh", "hkshen", "hkshi", "hkxian"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh, hkshen, hkshi, hkxian};
		}else if(Globals.XXDM_ZJKJXY.equalsIgnoreCase(xxdm)){
			if(dzxxqdmFlag){
				jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
				syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
				hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
			}
			// 其他学校
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh","hkszd","dah","ylbxh","ksh","rxqdw","rxqdwyb",
					"rxqdwdz","gzbx","ssbh","qsdh","sfgat","sfssmz","rxqwhcd",
					"zcsxhm","hkxz","sfzc","sfzd","byzh","xwzsbh"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh,hkszd,studetail.getDah(),
					studetail.getYlbxh(),ksh,studetail.getRxqdw(),studetail.getRxqdwyb(),
					studetail.getRxqdwdz(),studetail.getGzbx(),studetail.getSsbh(),
					studetail.getQsdh(),studetail.getSfgat(),studetail.getSfssmz(),
					rxqwhcd,zcsxhm,hkxz,studetail.getSfzc(),studetail.getSfzd(),byzh,xwzsbh};
		}else if(Globals.XXDM_GDTYZYJSXY.equalsIgnoreCase(xxdm)){
			//广东体育职业技术学院
			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
				if(dzxxqdmFlag){
					jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
					syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
					hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
				}
			}
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh","hkszd","dah","ylbxh","ksh","rxqdw","rxqdwyb",
					"rxqdwdz","gzbx","ssbh","qsdh","sfgat","sfssmz","rxqwhcd",
					"zcsxhm","hkxz","sfzc","sfzd","xjh","jrzzmmrq","sfhq","csd",
					"csds","csdshi","csdxian"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh,hkszd,studetail.getDah(),
					studetail.getYlbxh(),ksh,studetail.getRxqdw(),studetail.getRxqdwyb(),
					studetail.getRxqdwdz(),studetail.getGzbx(),studetail.getSsbh(),
					studetail.getQsdh(),studetail.getSfgat(),studetail.getSfssmz(),
					rxqwhcd,zcsxhm,hkxz,studetail.getSfzc(),studetail.getSfzd(),
					studetail.getXjh(),studetail.getJrzzmmrq(),studetail.getSfhq(),studetail.getCsd(),
					studetail.getCsds(),studetail.getCsdshi(),studetail.getCsdxian()};
			request.setAttribute("csdshiList", stuDao.getShiList(studetail.getCsds()).get("shiList"));
			request.setAttribute("csdxianList",  stuDao.getShiList(studetail.getCsdshi()).get("xianList"));
		}else if(Globals.XXDM_BJSGMJSXYFWFY.equalsIgnoreCase(Base.xxdm)){
			//北京市工贸技师学院服务分院
			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
				if(dzxxqdmFlag){
					jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
					syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
					hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
				}
			}
			
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh","hkszd","dah","ylbxh","ksh","rxqdw","rxqdwyb",
					"rxqdwdz","gzbx","ssbh","qsdh","sfgat","sfssmz","rxqwhcd",
					"zcsxhm","hkxz","sfzc","sfzd","jkzk","sfhq","ssch"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh,hkszd,studetail.getDah(),
					studetail.getYlbxh(),ksh,studetail.getRxqdw(),studetail.getRxqdwyb(),
					studetail.getRxqdwdz(),studetail.getGzbx(),studetail.getSsbh(),
					studetail.getQsdh(),studetail.getSfgat(),studetail.getSfssmz(),
					rxqwhcd,zcsxhm,hkxz,studetail.getSfzc(),studetail.getSfzd(),studetail.getJkzk(),sfhq,sfzblx};
		}else if(Globals.XXDM_HZSFXY.equalsIgnoreCase(Base.xxdm)){
			//湖州师范
			String zd1=DealString.toGBK(studetail.getZd1());//学籍预警
			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
				if(dzxxqdmFlag){
					jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
					syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
					hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
				}
			}
			
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh","hkszd","dah","ylbxh","ksh","rxqdw","rxqdwyb",
					"rxqdwdz","gzbx","ssbh","qsdh","sfgat","sfssmz","rxqwhcd",
					"zcsxhm","hkxz","sfzc","sfzd","jkzk","sfhq","zd1"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh,hkszd,studetail.getDah(),
					studetail.getYlbxh(),ksh,studetail.getRxqdw(),studetail.getRxqdwyb(),
					studetail.getRxqdwdz(),studetail.getGzbx(),studetail.getSsbh(),
					studetail.getQsdh(),studetail.getSfgat(),studetail.getSfssmz(),
					rxqwhcd,zcsxhm,hkxz,studetail.getSfzc(),studetail.getSfzd(),studetail.getJkzk(),sfhq,zd1};
		}else{
			if(Base.getXsxxwh().equalsIgnoreCase("bkwh")){
				if(dzxxqdmFlag){
					jg           = studetail.getJgshen()+"/"+studetail.getJgshi()+"/"+studetail.getJgxian();
					syd          = studetail.getSyshen()+"/"+studetail.getSyshi()+"/"+studetail.getSyxian();
					hkszd        = studetail.getHkshen()+"/"+studetail.getHkshi()+"/"+studetail.getHkxian();
				}
			}
			// 其他学校
			columns = new String[] { "xh", "xy", "zymc", "bjmc", "bjdm",
					"zydm", "xydm", "bz", "xm", "xmpy", "nj", "syd", "csrq",
					"sfzh", "xb", "mz", "zzmm", "lxdh", "dzyx", "cym", "sg",
					"tz", "tc", "kslb", "rxfs", "pyfs", "pycc", "xjztm", "jg",
					"xszp", "xz", "sjhm","kh","dasfyl","daylyy","yxdm","xw",
					"sfzz","sfsf","sfdl","dxhwp","rxrq","bysj","zsbh","zxwyyzdm",
					"wydj","jsjdj","qqhm","lxdz","yzbm","shzw","jypx","xmsj",
					"zgzs","jljn","sybz1","sybz2","sybz3","xldm","zslb","sfyby",
					"sfzx","byny","ccqj","jlcfjl","grjl","zkzh","sfcj","sfbys",
					"yhdm","yhkh","hkszd","dah","ylbxh","ksh","rxqdw","rxqdwyb",
					"rxqdwdz","gzbx","ssbh","qsdh","sfgat","sfssmz","rxqwhcd",
					"zcsxhm","hkxz","sfzc","sfzd","jkzk","sfhq"};

			values1 = new String[] { xh, xy, zymc, bjmc, bjdm, zydm, xydm, bz,
					xm, xmpy, nj, syd, csrq, sfzh, xb, mz, zzmm, lxdh, dzyx,
					cym, sg, tz, tc, kslb, rxfs, pyfs, pycc, xjztm, jg, xszp,
					xz, sjhm , kh, dasfyl, daylyy,yxdm,xwdm,sfzz,sfsf,sfdl,dxhwp,
					rxrq,bysj,zsbh,zxwyyzdm,wydj,jsjdj,qqhm,lxdz,yzbm,shzw,jypx,
					xmsj,zgzs,jljn,sybz1,sybz2,sybz3,xldm,zslb,sfyby,sfzx,byny,ccqj,
					jlcfjl,grjl,zkzh,sfcj,sfbys,yhdm,yhkh,hkszd,studetail.getDah(),
					studetail.getYlbxh(),ksh,studetail.getRxqdw(),studetail.getRxqdwyb(),
					studetail.getRxqdwdz(),studetail.getGzbx(),studetail.getSsbh(),
					studetail.getQsdh(),studetail.getSfgat(),studetail.getSfssmz(),
					rxqwhcd,zcsxhm,hkxz,studetail.getSfzc(),studetail.getSfzd(),studetail.getJkzk(),sfhq};
		}
		// 保存学生基本信息
		List<HashMap<String, String>> oneStu = dao.getList("select xh from xsxxb where xh=?", new String[] { xh }, new String[] { "xh" });
		if (oneStu != null && oneStu.size() > 0) {
			// xsxxb中已经存在该学生			
			User user = getUser(request);
			flag = StandardOperation.update("xsxxb", columns, values1, "xh", xh, user);
			
			// 修改家庭信息
			if(flag && "new".equalsIgnoreCase(edition)){
				List<HashMap<String, String>> jtxxList = dao.getList("select xh from xsfzxxb where xh=?", new String[] { xh }, new String[] { "xh" });
				
				if(jtxxList != null && jtxxList.size()>0){
					StandardOperation.update("xsfzxxb", jtxxCol, jtxxValue, "xh", xh, user);
				}else {
					StandardOperation.insert("xsfzxxb", jtxxCol, jtxxValue, request);
				}
				
				//保存学生身体信息
				if(Globals.XXDM_ZJJSZYJSXY.equalsIgnoreCase(xxdm)){
					StandardOperation.delete("XG_XSXX_XSSTXXB", "xh", xh, request);
					StandardOperation.insert("XG_XSXX_XSSTXXB", stxxCol, stxxValue, request);
				}
			}
			if (flag) {
				//保存联系方式
				flag = StandardOperation.update("xsfzxxb", new String[] { "sjhm", "email", "lxdh2" }, new String[] { sjhm, dzyx, lxdh }, "xh", xh, user);
			}
			if (xxdm.equalsIgnoreCase(Globals.XXDM_GDNZZYJSXY) || xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
				// 广东女子
				// 西昌学院
				int size = Integer.parseInt(dao.getOneRs( "select count(*) num from xsfzxxb where xh=?", new String[] { xh }, "num"));
				if (size > 0) {
					if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
						StandardOperation.update("xsfzxxb", new String[] { "jtszd" }, new String[] { jtdz }, "xh", xh, request);
					} else {
						StandardOperation.update("xsfzxxb", new String[] {"jtszd", "jjzk" }, new String[] { jtdz, jtjjqk }, "xh", xh, request);
					}
				} else {
					if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
						StandardOperation.insert("xsfzxxb", new String[] { "xh", "jtszd" }, new String[] { xh, jtdz }, request);
					} else {
						StandardOperation.insert("xsfzxxb", new String[] { "xh", "jtszd", "jjzk" }, new String[] { xh, jtdz, jtjjqk }, request);
					}
				}
			}
			if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){//天津交通职业学院
				//保存学习简历
				flag = xsxxZgkdService.saveXsxxjlxx(xh, request);
			}
			if(Globals.XXDM_BJQNZZXY.equalsIgnoreCase(Base.xxdm)){
				//北京青年政治
				HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
				service.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
				service.saveXsshgx(xh,valueMap);//保存学生社会关系信息
			}
		} else {
			// 信息插入学生信息表
			flag = StandardOperation.insert("xsxxb", columns, values1, request);
			
			// =============================== 新版本插入家庭信息 ==================================== //
			if(flag && "new".equalsIgnoreCase(edition)){
				StandardOperation.insert("xsfzxxb", jtxxCol, jtxxValue, request);
				
				//保存学生身体信息
				if(Globals.XXDM_ZJJSZYJSXY.equalsIgnoreCase(xxdm)){
					StandardOperation.insert("XG_XSXX_XSSTXXB", stxxCol, stxxValue, request);
				}
			}
			
			//增加照片
			if(flag && Base.getXsxxwh().equalsIgnoreCase("kwh")){
				FormFile file = studetail.getUploadFile();
				if(file!=null && file.getFileSize()>0){
					if(file.getFileSize()>=100*1024){
						request.setAttribute("errMsg", "文件过大(大于100K)");
						return mapping.findForward("success");
					}
					if (file == null) {
						return mapping.findForward("false");
					}
					InputStream in = file.getInputStream();
					PicDAO picDAO = new PicDAO();
					picDAO.savePic(in, xh,"stu");
					in.close();
				}
			}
			
			// =============================== END ================================================= //
			
			if (flag) {
				// 插入住宿信息
				if (flag) {
					if (xxdm.equalsIgnoreCase(Globals.XXDM_GDNZZYJSXY)
							|| xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
						int size = Integer.parseInt(dao.getOneRs(
								"select count(*) num from xsfzxxb where xh=?",
								new String[] { xh }, "num"));
						if (size > 0) {
							
							if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
								//西昌学院
								flag = StandardOperation.update("xsfzxxb",
										new String[] { "jtszd" },
										new String[] { jtdz }, "xh", xh,
										request);
							} else {
								flag = StandardOperation.update("xsfzxxb",
										new String[] { "jtszd", "jjzk" },
										new String[] { jtdz, jtjjqk }, "xh",
										xh, request);
							}
						} else {
							if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
								// 西昌学院
								flag = StandardOperation.insert("xsfzxxb",
										new String[] { "xh", "jtszd" },
										new String[] { xh, jtdz }, request);
							} else {
								flag = StandardOperation.insert("xsfzxxb",
										new String[] { "xh", "jtszd", "jjzk" },
										new String[] { xh, jtdz, jtjjqk }, request);
							}
						}
					}
					if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){//天津交通职业学院
						//保存学习简历
						flag = xsxxZgkdService.saveXsxxjlxx(xh, request);
					}
					if(Globals.XXDM_BJQNZZXY.equalsIgnoreCase(Base.xxdm)){
						//北京青年政治
						HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
						if(flag){
							service.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
							service.saveXsshgx(xh,valueMap);//保存学生社会关系信息
						}
					}
				}
			}
			if (flag) {
				// 初始化密码
				int num = Integer.parseInt(dao.getOneRs(
						"select count(*) num from view_xsjbxx where xh=?",
						new String[] { xh }, "num"));
				if (num <= 0) {
					num = Integer.parseInt(dao.getOneRs(
							"select count(*) num from xsmmb where xh=?",
							new String[] { xh }, "num"));
					if (num <= 0) {
						sql = "insert into xsmmb (xh,mm) values(?,?)";
						flag = dao.runUpdate(sql, new String[] { xh, mm });
					}
				}
			}			
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)){
			String count = dao.getOneRs("select count(*) count from xsfzxxb where xh=?", new String[]{xh}, "count");
			count = count == null || "".equalsIgnoreCase(count) ? "0" : count;
			int num = Integer.parseInt(count);
			if(num>0){
				flag = StandardOperation.update("xsfzxxb", new String[]{"jtszd","lxdh1","yb","jjzk"}, new String[]{jtdz ,jtdh,jtyb,jtjjqk}, "xh", xh, request);
			}else{
				flag = StandardOperation.insert("xsfzxxb",
						new String[] { "xh", "jtszd","lxdh1","yb","jjzk" },
						new String[] { xh, jtdz ,jtdh,jtyb,jtjjqk}, request);
			}

		}
		
		//数据查询
		columns = dao.getColumnName("select a.xjlb xjzt,a.syd lydq,a.* from view_xsxxb a where 1=2");
		sql = "select a.xjlb xjzt,a.syd lydq,a.* from view_xsxxb a where xh=?";	

		for(int i=0; i<columns.length; i++){
			columns[i] = columns[i].toLowerCase();
		}
		map = dao.getMap(sql, new String[] { xh }, columns);
		
		// 如果是新版本就放入家庭信息
		if("new".equalsIgnoreCase(edition)){
			map.putAll(dao.getMapNotOut("select * from xsfzxxb a where a.xh=?", new String[]{xh}));
		}

		// 汉字转换成数字
		xb = map.get("xb");
		if (xb != null && !"".equalsIgnoreCase(xb)) {
			map.put("xb", "男".equalsIgnoreCase(xb) ? "1" : "2");
		}		
		if(Globals.XXDM_LSSFXY.equalsIgnoreCase(xxdm)){//乐山师范
			map.put("rxqxxshen", studetail.getRxqxxshen());
			map.put("rxqxxshi", studetail.getRxqxxshi());
			map.put("rxqxxxian", studetail.getRxqxxxian());
			map.put("rxqbyxx",DealString.toGBK(studetail.getRxqbyxx()));
			map.put("jgshen", studetail.getJgshen());
			map.put("jgshi", studetail.getJgshi());
			map.put("jgxian",studetail.getJgxian());
			map.put("syshen",studetail.getSyshen());
			map.put("syshi", studetail.getSyshi());
			map.put("syxian",studetail.getSyxian());
			map.put("jtdzshen", studetail.getJtdzshen());
			map.put("jtdzshi", studetail.getJtdzshi());
			map.put("jtdzxian", studetail.getJtdzxian());
			map.put("mph",DealString.toGBK(studetail.getMph()));
		}		
		if(dzxxqdmFlag){
			map.put("jgshen", studetail.getJgshen());
			map.put("jgshi", studetail.getJgshi());
			map.put("jgxian",studetail.getJgxian());
			map.put("syshen",studetail.getSyshen());
			map.put("syshi", studetail.getSyshi());
			map.put("syxian",studetail.getSyxian());
			map.put("hkshen",studetail.getHkshen());
			map.put("hkshi", studetail.getHkshi());
			map.put("hkxian",studetail.getHkxian());
			request.setAttribute("ssList", stuDao.getSsList());	
			request.setAttribute("shiList", stuDao.getShiList(studetail.getSyshen()).get("shiList"));
			request.setAttribute("xianList",  stuDao.getShiList(studetail.getSyshen()).get("xianList"));
			request.setAttribute("jgshiList", stuDao.getShiList(studetail.getJgshen()).get("shiList"));
			request.setAttribute("jgxianList",  stuDao.getShiList(studetail.getJgshen()).get("xianList"));
			request.setAttribute("hkshiList", stuDao.getShiList(studetail.getJgshen()).get("shiList"));
			request.setAttribute("hkxianList",  stuDao.getShiList(studetail.getJgshen()).get("xianList"));
		}
		xydm = (xydm == null ? "" : xydm);
		zydm = (zydm == null ? "" : zydm);
		nj = (nj == null ? "" : nj);
		String bjKey = xydm + "!!" + zydm + "!!" + nj;

		if(xxdm.equalsIgnoreCase(Globals.XXDM_CSMZZYJSXY)){//长沙民政
			request.setAttribute("byzffztList", csmzService.getByzffztList());
		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){
			map.putAll(service.getXsxxjlb(map.get("xh")));
		}
		request.setAttribute("rs", map);
		request.setAttribute("oper", doType);
		request.setAttribute("result", flag);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("zydm", zydm);
		request.setAttribute("xydm", xydm);
		request.setAttribute("bjdm", bjdm);
		request.setAttribute("jtgxList", service.getJtgxList());
		request.setAttribute("njList", Base.getNjList());// 发送年级列表
		request.setAttribute("xyList", Base.getXyList());// 发送学院列表
		request.setAttribute("zyList", Base.getZyMap().get(xydm));// 发送专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));// 发送班级列表
		request.setAttribute("mzList", dao.getMzList());
		request.setAttribute("zzmmList", dao.getZzmmList());
		request.setAttribute("yhList", service.getYhList());//银行信息列表
		request.setAttribute("pyccList", service.getList(GlobalsVariable.XTWH_PYCC_LIST));//培养层次
		request.setAttribute("kslbList", service.getList(GlobalsVariable.XTWH_KSLB_LIST));//考生类别
		request.setAttribute("rxfsList", service.getList(GlobalsVariable.XTWH_RXFS_LIST));//入学方式
		request.setAttribute("pyfsList", service.getList(GlobalsVariable.XTWH_PYFS_LIST));//培养方式
		if (xxdm.equalsIgnoreCase(Globals.XXDM_BJLHDX)) {
			// 北京联合
			sql = "select distinct zjdm,zjmc from zjxxb order by zjdm";
			List zjList = dao.getList(sql, new String[] {}, new String[] {
					"zjdm", "zjmc" });
			request.setAttribute("zjList", zjList);
		}
		
		if(Base.getXsxxwh().equalsIgnoreCase("kwh")){
			XsxxJbxxForm myForm=new XsxxJbxxForm();
			XsxxJbszForm model=new XsxxJbszForm();
			XsxxJbxxService jbxxService =new XsxxJbxxService();
			XsxxJbszService jbszService =new XsxxJbszService();
			XsxxYnysService ynysService = new XsxxYnysService();
			CommanForm dataSearchForm =new CommanForm();
			//显示区域
			request.setAttribute("xsqList",jbxxService.getXsqnrList(myForm));
			//字段位置
			request.setAttribute("zdwzList", jbxxService.getZdwzList(myForm));
			//启用字段
			request.setAttribute("qyzdList", jbxxService.getQyzdList(myForm));
			//显示区显示字段
			request.setAttribute("xsqzdList", jbszService.getXsqZdwzList(model));
			//加载下拉列表
			jbxxService.setXlkList(myForm, request);
			
			jbxxService.checkZdSize(request,model);
			request.setAttribute("ssList", ynysService.getSsList());
	        request.setAttribute("shiList", ynysService.getShiList(dataSearchForm.getJgshen()).get("shiList"));
			request.setAttribute("xianList",  ynysService.getShiList(dataSearchForm.getJgshen()).get("xianList"));
			FormModleCommon.setNjXyZyBjListForFdyBzr(request);
			return mapping.findForward("xsxxwh");
		}
		
		return transferPage(request, mapping);
	}

	/**
	 * 删除学生信息
	 */
	public ActionForward stuInfoDelete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		CommanForm com = (CommanForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);

		boolean flag = false;
		String userSpecType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
//		String xxdm = StandardOperation.getXxdm();
		String xydm = com.getXydm();
		String zydm = com.getZydm();
		String bjdm = com.getBjdm();
		String nj = com.getNj();
		String writeAble = CheckPower.checkUsrPower(userName, "stu_info_query.do?method=stuInfo") ? "yes" : "no";
		String oper = "del";

		StuInfoDAO stuDao = new StuInfoDAO();

		String delPk = request.getParameter("delPk");
		String[] xh = delPk.split("!!");
		String tabOrView = stuDao.tabOrView("bks_xsjbxx");

		if(tabOrView != null && "table".equalsIgnoreCase(tabOrView)){
			for (int i = 0; i < xh.length; i++) {
				flag = StandardOperation.delete("xsxxb", "xh", xh[i], request);
				flag = StandardOperation.delete("xsfzxxb", "xh", xh[i], request);
				//删除学生学习经历记录
				flag = StandardOperation.delete("xsxxjlb", "xh", xh[i], request);
				//删除学生社会关系记录
				flag = StandardOperation.delete("xsxx_xsshgxb", "xh", xh[i], request);
				if (flag) {
					flag = StandardOperation.delete("xszsxxb", "xh", xh[i], request);				

					//不连接教务数据时应该将xsxxb中和bks_xsjbxx中的数据都删除。
					//连接教务数据时只有教务删除了某个学生学工才可以删除
					flag = StandardOperation.delete("bks_xsjbxx", "xh", xh[i], request);				
				}
				com.setXh("");
			}
		}else{
			request.setAttribute("mes", "基础数据取自外部接口数据,在本系统中无法删除!");
		}		

		xydm = (xydm == null ? "" : xydm);
		zydm = (zydm == null ? "" : zydm);
		bjdm = (bjdm == null ? "" : bjdm);
		nj = (nj == null ? "" : nj);
		String bjKey = xydm + "!!" + zydm + "!!" + nj;

		request.setAttribute("xydm", xydm);
		request.setAttribute("zydm", zydm);
		request.setAttribute("bjdm", bjdm);
		request.setAttribute("njList", Base.getNjList());// 发送年级列表
		request.setAttribute("xyList", Base.getXyList());// 发送学院列表
		request.setAttribute("zyList", Base.getZyMap().get(xydm));// 发送专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));// 发送班级列表
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("userSpecType", userSpecType);
		request.setAttribute("result", flag);
		request.setAttribute("oper", oper);
		request.setAttribute("xjztList", stuDao.getXjztList());
		return new ActionForward("/stu_info_query.do?method=stuInfo&go=go",false);
	}

	/**
	 * 学生或学院修改学生信息
	 */
	public ActionForward modiStuInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		long star = System.currentTimeMillis(); 		
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		HashMap<String, String> map = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		StuInfoDAO stuDao = new StuInfoDAO();
		XsxxglService service = new XsxxglService();
		XsxxZgkdService xsxxZgkdService = new XsxxZgkdService();
		String userName = session.getAttribute("userName").toString();// 用户名
		String userType = session.getAttribute("userType").toString();// 用户类型检测学院用户
		String userOnLine = session.getAttribute("userOnLine").toString();
		String xxdm = StandardOperation.getXxdm();
		String act = request.getParameter("act");
		String dyym = "stu_info_add.do?method=modiStuInfo";
		String writeAble = CheckPower.checkUsrPageAccessPower(userOnLine, userName, dyym) ? "yes" : "no";
		String sql = "";
		boolean dzxxqdmFlag = "yes".equalsIgnoreCase(service.getXsxxCs().get("dzxxqdm")) ? true : false;
		if(!"stu".equalsIgnoreCase(userType)){
			request.setAttribute("message", "本页面只有学生用户可以访问");
			return new ActionForward("/prompt.do",false);
		}
		if ("stu".equalsIgnoreCase(userType) || "xy".equalsIgnoreCase(userType)) {
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGKYDX)){//中国矿业大学
				return new ActionForward("/xsxx_zgkd.do?method=stuModiInfo",false);
			}
			if(xxdm.equalsIgnoreCase(Globals.XXDM_ZGDZDX)){//中国地质大学
				return new ActionForward("/xsxxZgdzdx.do?method=stuModiInfo",false);
			}
			request.setAttribute("xjztList", stuDao.getXjztList());
			if(xxdm.equalsIgnoreCase(Globals.XXDM_HBSFXY) && "stu".equalsIgnoreCase(userType) && (act == null || "".equalsIgnoreCase(act))){//湖北师范学院				
				String type = request.getParameter("type");
				if(type == null || "".equalsIgnoreCase(type)){
					String content = stuDao.getStuInfoPub();
					if(content != null && !"".equalsIgnoreCase(content)){
						request.setAttribute("content", content);
						return mapping.findForward("xgtk");
					}					
				}
			}
			
			// 学生跟学院用户
			if ("xy".equalsIgnoreCase(userType)) {
				userName = request.getParameter("xh");
			}

			// 浙江理工. 中北大学限时修改
			String issz = dao.getOneRs("select issz from xsxxxgsjb", new String[] {}, "issz");
			if ("yes".equalsIgnoreCase(issz)) {
				if (!service.isXsxxxgsj()) {//不在学生可修改信息的时间范围内
					request.setAttribute("sqsjFlag", "1");
				}
			}
			//判断是否是根据老师分配字段的字段权限修改
			String fpzdFlag = service.getXsxxCs().get("havexsqx");
			//新版本
			if("new".endsWith(Base.getEdition())){
				// ===========2011.6.23 edit by luojw======================
				// ===========ps:大师最高指示======================
				// fpzdFlag = "yes";
			}
			
			if("yes".equalsIgnoreCase(fpzdFlag)){
				return new ActionForward("/xsxxgl.do?method=stuModiInfo");
			}
			// 不限时
			if (request.getAttribute("sqsjFlag") == null) {
				String[] outValue = new String[] {};
				sql = "select * from xsfzxxb where 1=2";
				String[] outString = { "xh", "lxdh1", "lxdh2", "sjhm", "email",
						"jtszd", "hkszd", "jkzk", "yb", "brtxdz", "jtcy1_xm",
						"jtcy1_gx", "jtcy1_zy", "jtcy1_zw", "jtcy1_gzdz",
						"jtcy1_lxdh1", "jtcy1_lxdh2", "jtcy1_sfzh", "jtcy1_nl",
						"jtcy1_mz", "jtcy1_zzmm","jtcy1_yzbm", "JTCY2_LXDH1", "JTCY2_LXDH2",
						"JTCY2_XM", "JTCY2_GX", "JTCY2_MZ", "JTCY2_ZY",
						"JTCY2_GZDZ", "JTCY2_ZW", "JTCY2_sfzh", "jtcy2_nl",
						"jtcy2_zzmm","jtcy2_yzbm", "JTCY3_XM", "JTCY3_GX", "JTCY3_ZY",
						"JTCY3_GZDZ", "JTCY3_ZW", "JTCY3_LXDH1", "JTCY3_LXDH2",
						"jtcy3_sfzh", "jtcy3_nl", "jtcy3_mz", "jtcy3_zzmm","jtcy3_yzbm","jtzsr",
						"jtcy1_lxr", "jtcy2_lxr", "jtcy3_lxr","jtcy4_xm","jtcy4_gx",
						"jtcy4_nl","jtcy4_sfzh","jtcy4_mz","jtcy4_zzmm","jtcy4_zy","jtcy4_zw",
						"jtcy4_lxdh1","jtcy4_lxdh2","jtcy4_gzdz","jtcy4_yzbm",
						"jtcy5_xm","jtcy5_gx","jtcy5_nl","jtcy5_sfzh","jtcy5_mz","jtcy5_zzmm",
						"jtcy5_zy","jtcy5_zw","jtcy5_lxdh1","jtcy5_lxdh2",
						"jtcy5_gzdz","jtcy5_yzbm","zyshgxxx1","zyshgxxx2","zyshgxxx3","jjzk",
						"jtcy1_zjxy","jtcy2_zjxy","jtcy3_zjxy"};
				// 信息保存
				if (act != null && act.equalsIgnoreCase("save")) {
					long saveT = System.currentTimeMillis(); 
					System.out.println("运行到保存："+ (System.currentTimeMillis()-star));				
					
					boolean flag = false;
					String[] inputValue = { "lxdh1", "lxdh2", "sjhm", "email",
							"jtszd", "hkszd", "jkzk", "yb", "brtxdz",
							"jtcy1_xm", "jtcy1_gx", "jtcy1_zy", "jtcy1_zw",
							"jtcy1_gzdz", "jtcy1_lxdh1", "jtcy1_lxdh2",
							"jtcy1_sfzh", "jtcy1_nl", "jtcy1_mz", "jtcy1_zzmm",
							"jtcy1_yzbm","JTCY2_LXDH1", "JTCY2_LXDH2", "JTCY2_XM",
							"JTCY2_GX", "JTCY2_MZ", "JTCY2_ZY", "JTCY2_GZDZ",
							"JTCY2_ZW", "JTCY2_sfzh", "jtcy2_nl", "jtcy2_zzmm",
							"jtcy2_yzbm","JTCY3_XM", "JTCY3_GX", "JTCY3_ZY", "JTCY3_GZDZ",
							"JTCY3_ZW", "JTCY3_LXDH1", "JTCY3_LXDH2","jtcy3_yzbm",
							"jtcy3_sfzh", "jtcy3_nl", "jtcy3_mz", "jtcy3_zzmm" ,"jtzsr",
							"jtcy1_lxr", "jtcy2_lxr", "jtcy3_lxr","jtcy4_xm","jtcy4_gx",
							"jtcy4_nl","jtcy4_sfzh","jtcy4_mz","jtcy4_zzmm","jtcy4_zy",
							"jtcy4_zw","jtcy4_lxdh1","jtcy4_lxdh2","jtcy4_gzdz","jtcy4_yzbm",
							"jtcy5_xm","jtcy5_gx","jtcy5_nl","jtcy5_sfzh","jtcy5_mz","jtcy5_zzmm",
							"jtcy5_zy","jtcy5_zw","jtcy5_lxdh1","jtcy5_lxdh2",
							"jtcy5_gzdz","jtcy5_yzbm","zyshgxxx1","zyshgxxx2","zyshgxxx3","jjzk",
							"jtcy1_zjxy","jtcy2_zjxy","jtcy3_zjxy"};
					String[] out = new String[inputValue.length];
					// 修改家庭信息
					for (int j = 0; j < inputValue.length; j++) {
						out[j] = request.getParameter(inputValue[j] .toLowerCase());
						out[j] = out[j] == null ? " " : DealString .toGBK(out[j]);
					}
					String sCount = dao.getOneRs( "select count(*) num from xsfzxxb where xh=?", new String[] { userName }, "num");
					if (Integer.parseInt(sCount) < 1) {
						if(!xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
							//武汉理工大学学生不修改家庭信息
							flag = StandardOperation.insert("xsfzxxb",new String[] { "xh" },new String[] { userName }, request);
						}
					}
					if(!xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
						flag = StandardOperation.update("xsfzxxb", inputValue, out,"xh", userName, request);
					}

					// 修改学生基本信息
					String sjhm = DealString .toGBK(request.getParameter("sjhm"));
					String jtdz = DealString.toGBK(request.getParameter("jtszd"));
					String dzyx = DealString.toGBK(request.getParameter("email"));
					String lxdh = DealString.toGBK(request.getParameter("lxdh1"));
					String xwzsxxdz = DealString.toGBK(request.getParameter("xwzsxxdz"));
					String jgshen = request.getParameter("jgs");
					String jgshi = request.getParameter("jgshi");
					String jgxian = request.getParameter("jgx");
					String jgv = DealString.toGBK(request.getParameter("jg"));
					String sfdk = DealString.toGBK(request.getParameter("sfdk"));
					String dasfyl = DealString.toGBK(request.getParameter("dasfyl"));
					String daylyy = DealString.toGBK(request.getParameter("daylyy"));
					
					if(xxdm.equalsIgnoreCase(Globals.XXDM_LSSFXY)){
						lxdh = DealString.toGBK(request.getParameter("lxdh"));
					}

					int num = Integer.parseInt(dao.getOneRs( "select count(*) num from xsxxb where xh=?", new String[] { userName }, "num"));
					if (num < 1) {	
						if(xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
							//武汉理工大学
							StandardOperation.update( "xsxxb",  
									"insert into xsxxb(xh,xm,xb,xydm,xy,zydm,zymc,bjdm,bjmc,xz,nj,zslb,kh)" +
									"(select xh,xm,xb,xydm,xymc,zydm,zymc,bjdm,bjmc,xz,nj,zslb,kh from view_xsxxb where xh='" + 
									userName + "')", request);
						}else{
							StandardOperation.update( "xsxxb", "insert into xsxxb(xh,xm,xb,xydm,xy,zydm,zymc,bjdm,bjmc,xz,nj)" +
									"(select xh,xm,xb,xydm,xymc,zydm,zymc,bjdm,bjmc,xz,nj from view_xsjbxx where xh='" + 
									userName + "')", request);
						}
					}
					if (xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)) {
						// 东北林业
						lxdh = DealString.toGBK(request.getParameter("lxdh"));
						jtdz = DealString.toGBK(request.getParameter("jtdz"));
						String[] input = { "csrq", "sfzh", "zzmm", "mz", "jg",
								"syd", "ah", "tc", "jrgcdsj", "jrgqtsj","lxdh",
								"sjhm","dzyx","sfdk", "jtyb", "jtdz", "jtjjqk", "shgxxm1",
								"shgxgx1", "shgxgzdw1", "shgxzw1", "shgxdwdh1",
								"shgxsjhm1", "shgxxm2", "shgxgx2", "shgxgzdw2",
								"shgxzw2", "shgxdwdh2", "shgxsjhm2" };
						String[] inputV = { "csrq", "sfzh", "zzmm", "mz", "jg",
								"syd", "ah", "tc", "jrgcdsj", "jrgqtsj","lxdh1",
								"sjhm","email","sfdk", "jtyb", "jtdz", "jtjjqk", "shgxxm1",
								"shgxgx1", "shgxgzdw1", "shgxzw1", "shgxdwdh1",
								"shgxsjhm1", "shgxxm2", "shgxgx2", "shgxgzdw2",
								"shgxzw2", "shgxdwdh2", "shgxsjhm2" };
						String[] output = new String[input.length];
						for (int j = 0; j < inputV.length; j++) {
							output[j] = request.getParameter(inputV[j] .toLowerCase());
							output[j] = output[j] == null ? " " : DealString .toGBK(output[j]);
						}
						flag = StandardOperation.update("xsxxb", input, output, "xh", userName, request);
						StandardOperation.update("xsfzxxb", new String[] { "jtszd" }, new String[] { jtdz }, "xh", userName, request);
					}else if(xxdm.equalsIgnoreCase(Globals.XXDM_AHJZGYXY)){
						//安徽建筑工业学院
						String sfzh = request.getParameter("sfzh");
						String xjzt = DealString.toGBK(request.getParameter("xjzt"));
						String zzmm = request.getParameter("zzmm");
						String mz = request.getParameter("mz");
						String csrq = request.getParameter("csrq");
						String jg = DealString.toGBK(request.getParameter("jg"));
						String syd = DealString.toGBK(request.getParameter("syd"));
						String kh = DealString.toGBK(request.getParameter("kh"));
						flag = StandardOperation.update("xsxxb", new String[]{"sfzh", "xjztm", "zzmm", "mz", "csrq", "jg", "syd","kh"},
								new String[]{sfzh,xjzt,zzmm,mz,csrq,jg,syd,kh}, "xh", userName, request);
					}else if(xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
						//武汉理工大学
						String qqhm = request.getParameter("qqhm");
						lxdh = request.getParameter("lxdh");
						sjhm = request.getParameter("sjhm");
						dzyx = request.getParameter("dzyx");						
						flag = StandardOperation.update("xsxxb", new String[]{"dzyx","lxdh","sjhm","qqhm"},new String[]{dzyx,lxdh,sjhm,qqhm},"xh", userName, request);
					}else if(xxdm.equalsIgnoreCase(Globals.XXDM_HNGYDX) && userType != null && "xy".equalsIgnoreCase(userType)){
						//湖南工业大学学院用户修改学生信息
						flag = StandardOperation.update("xsxxb", new String[] {"jtdz", "dzyx", "lxdh", "sjhm", "xwzsxxdz", "jgs", "jgshi", "jgx", "jg","sfdk","dasfyl","daylyy" }, 
								new String[] {jtdz, dzyx, lxdh, sjhm, xwzsxxdz,jgshen,jgshi,jgxian,jgv,sfdk,dasfyl,daylyy}, "xh", userName, request);
					}else if(xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)){
						//云南艺术学院
						String[] column = {"xmpy","cym","csrq","sfzh","sg","tz","tc","pycc","zzmm","mz","jg","syd","zw","xxfx",
								"rxrq","qqhm","xz","xwzsxxdz","sfdk","jtdz","dzyx","lxdh","sjhm","ssbh","ssch","zsjzrq","byny","rzrq"};
						String[] value = new String[column.length];
						for(int i=0; i<column.length-1; i++){
							if("jg".equalsIgnoreCase(column[i])){
								value[i] = request.getParameter("jgs")+"/"+request.getParameter("jgshi")+"/"+request.getParameter("jgx");
							}else if ("syd".equalsIgnoreCase(column[i])){
								value[i] = request.getParameter("syds")+"/"+request.getParameter("sydshi")+"/"+request.getParameter("sydx");
							}else{
								value[i] = DealString.toGBK(request.getParameter(column[i]));
							}
						}
						value[column.length-1] = DealString.toGBK(request.getParameter("zsrq"));
						flag = StandardOperation.update("xsxxb", column, value, "xh", userName, request);
					}else if(xxdm.equalsIgnoreCase(Globals.XXDM_SHGC)){
						//上海工程
						String sfzh = DealString.toGBK(request.getParameter("sfzh"));
						String mz = DealString.toGBK(request.getParameter("mz"));
						flag = StandardOperation.update("xsxxb", new String[] {"jtdz", "dzyx", "lxdh", "sjhm", "xwzsxxdz", "jgs", "jgshi", "jgx", "sfzh", "mz" }, new String[] {jtdz, dzyx, lxdh, sjhm, xwzsxxdz,jgshen,jgshi,jgxian,sfzh,mz}, "xh", userName, request);
					} else if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
						// 西昌学院
						String kh = DealString.toGBK(request.getParameter("kh"));
						String yhkh = DealString.toGBK(request.getParameter("yhkh"));
						String ykth = DealString.toGBK(request.getParameter("ykth"));
						flag = StandardOperation.update("xsxxb", new String[] {
								"jtdz", "dzyx", "lxdh", "sjhm", "xwzsxxdz",
								"jgs", "jgshi", "jgx", "sfdk", "kh", "yhkh",
						"ykth" }, new String[] { jtdz, dzyx, lxdh,
								sjhm, xwzsxxdz, jgshen, jgshi, jgxian, sfdk,
								kh, yhkh, ykth }, "xh", userName, request);
					}
//					else if(Globals.XXDM_ZJJDZYJSXY.equalsIgnoreCase(xxdm)){
//						//浙江机电职业技术学院
//						String bz    = DealString.toGBK(request.getParameter("bz"));
//						String csrq  = request.getParameter("csrq");
//						String zzmm  = request.getParameter("zzmm");
//						String jtdh  = DealString.toGBK(request.getParameter("jtdh"));
//						String xx    = DealString.toGBK(request.getParameter("xx"));
//						String jkzk  = DealString.toGBK(request.getParameter("jkzk"));
//						String qqhm  = DealString.toGBK(request.getParameter("qqhm"));
//						String zw    = DealString.toGBK(request.getParameter("zw"));
//						String jtjjqk = DealString.toGBK(request.getParameter("jtjjqk"));
//						flag = StandardOperation.update("xsxxb", new String[] {"jtjjqk","zw","qqhm","jkzk","xx","bz","csrq","zzmm","jtdh","jtdz", "dzyx", "lxdh", "sjhm", "xwzsxxdz", "jgs", "jgshi", "jgx","sfdk" }, 
//								new String[] {jtjjqk,zw,qqhm,jkzk,xx,bz,csrq,zzmm,jtdh,jtdz, dzyx, lxdh, sjhm, xwzsxxdz,jgshen,jgshi,jgxian,sfdk}, "xh", userName, request);						
//					}
					else{
						//其它
						String qqhm = DealString.toGBK(request.getParameter("qqhm")) ;
						String dah = DealString.toGBK(request.getParameter("dah")) ;
						String ylbxh = DealString.toGBK(request.getParameter("ylbxh")) ;
						flag = StandardOperation.update("xsxxb", 
								            new String[] {"jtdz", "dzyx", "lxdh", "sjhm", "xwzsxxdz", "jgs", "jgshi", "jgx","sfdk","qqhm", "dah", "ylbxh"}, 
								            new String[] {jtdz, dzyx, lxdh, sjhm, xwzsxxdz,jgshen,jgshi,jgxian,sfdk,qqhm,dah,ylbxh}, "xh", userName, request);
					}		
					if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){//天津交通职业学院
						flag = xsxxZgkdService.saveXsxxjlxx(userName, request);
					}
					request.setAttribute("result", flag);
					System.out.println("保存时间："+(System.currentTimeMillis()-saveT));
				}// end save

				// 宿舍信息
				String ssbh = "";
				sql = "select ssbh from xszsxxb where xh=?";
				outValue = dao.getOneRs(sql, new String[] { userName },
						new String[] { "ssbh" });
				map.put("ssbh", ssbh = outValue == null ? "" : outValue[0]);

				@SuppressWarnings("unused")
				String qsdh = "";
				sql = "select qsdh from ssxxb where ssbh=?";
				outValue = dao.getOneRs(sql, new String[] { ssbh }, new String[] { "qsdh" });
				map.put("ssbh", qsdh = outValue == null ? "" : outValue[0]);

				/** 信息查询 */
				// 学生家庭信息
				sql = "select * from xsfzxxb where xh=?";
				outValue = dao.getOneRs(sql, new String[] { userName },
						outString);
				outValue = outValue == null ? new String[outString.length] : outValue;
				for (int i = 0; i < outValue.length; i++) {
					map.put(outString[i].toLowerCase(), outValue[i]);
				}// end 学生家庭信息

				sql = "select * from view_xsxxb a where xh=?";
				outString = dao.getColumnName("select * from view_xsxxb a where xh='"+userName+"'");				
				if (xxdm.equalsIgnoreCase(Globals.XXDM_DBLYDX)) {
					// 东北林业
					sql = "select xh, xm,zymc,xymc,nj,bjmc,xb,lxdh,sjhm,lxdzxx email,csrq,sfzh,zzmm,mz,jg,syd,ah,tc,jrgcdsj,jrgqtsj,sfdk,jtyb,jtdz,jtjjqk,shgxxm1,shgxgx1,shgxgzdw1,shgxzw1,shgxdwdh1,shgxsjhm1,shgxxm2,shgxgx2,shgxgzdw2,shgxzw2,shgxdwdh2,shgxsjhm2,ssbh,qsdh from view_xsxxb where xh=?";
					outString = new String[] {"xh", "xm", "zymc", "xymc", "nj",
							"bjmc", "xb", "lxdh", "sjhm", "email", "csrq",
							"sfzh", "zzmm", "mz", "jg", "syd", "ah", "tc",
							"jrgcdsj", "jrgqtsj", "sfdk", "jtyb", "jtdz",
							"jtjjqk", "shgxxm1", "shgxgx1", "shgxgzdw1",
							"shgxzw1", "shgxdwdh1", "shgxsjhm1", "shgxxm2",
							"shgxgx2", "shgxgzdw2", "shgxzw2", "shgxdwdh2",
							"shgxsjhm2", "ssbh", "qsdh" };
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_AHJZGYXY)){
					//安徽建筑工业学院
					sql = "select a.xm,a.zymc,a.xymc,a.bjmc,a.nj,a.xb,a.lxdh,a.sjhm,a.lxdzxx email,a.csrq,a.sfzh,a.xjlb xjzt,a.mz,a.zzmm,a.jg,a.syd,kh from view_xsxxb a where xh=?";
					outString = new String[]{"xm", "zymc", "xymc", "nj", "bjmc", "xb", "lxdh", "sjhm", "email", "csrq", "sfzh", "xjzt", "mz", "zzmm", "jg", "syd", "kh"};
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_WHLGDX)){
					//武汉理工大学
					sql = "select lxdh,sjhm,qqhm,dzyx from view_xsxxb where xh=?";
					outString = new String[]{"lxdh","sjhm","qqhm","dzyx"};
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)){
					//云南艺术学院
					sql = "select * from view_xsxxb where xh=?";
					outString = new String[]{"xh","xm","xymc","zymc","bjmc","xb","nj","mz","zzmm","xmpy","cym","csrq",
							"sfzh","sg","tz","tc","pycc","jg","jgs","jgshi","jgx","syd","zw","xxfx","rxrq","byny","qqhm","xz",
							"lxdh","sjhm","sfdk","dzyx","xwzsxxdz","ssbh","ssch","zsrq","zsjzrq"};
				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_XCXY)) {
					// 西昌学院
					sql = "select * from view_xsxxb where xh=?";
					outString = new String[] { "xh", "xm", "xymc", "zymc",
							"bjmc", "xb", "nj", "mz", "zzmm", "xmpy", "cym",
							"csrq", "sfzh", "sg", "tz", "tc", "pycc", "jgs",
							"jgshi", "jgx", "syd", "zw", "xxfx", "rxrq",
							"byny", "qqhm", "xz", "lxdh", "sjhm", "sfdk",
							"dzyx", "xwzsxxdz", "ssbh", "ssch", "zsrq",
							"zsjzrq", "kh", "yhkh", "ykth" };
				}
				outValue = dao.getOneRs(sql, new String[] { userName }, outString);
				outValue = outValue == null ? new String[outString.length] : outValue;
				for (int i = 0; i < outValue.length; i++) {
					map.put(outString[i].toLowerCase(), outValue[i]);
				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_TJJTZYJSXY)){//天津交通职业学院
					map.putAll(service.getXsxxjlb(map.get("xh")));
				}
				if(dzxxqdmFlag){//地址信息取标准码
					String syd = map.get("syd");				
					if(!Base.isNull(syd)){
						String[] arrDq = syd.split("/");
						map.put("syshen", (arrDq.length>=1)?arrDq[0]:"");
						map.put("syds", (arrDq.length>=1)?arrDq[0]:"");
						map.put("syshi", (arrDq.length>=2)?arrDq[1]:"");
						map.put("sydshi", (arrDq.length>=2)?arrDq[1]:"");
						map.put("syxian", (arrDq.length>=3)?arrDq[2]:"");	
						map.put("sydx", (arrDq.length>=3)?arrDq[2]:"");
					}								
					if(StringUtils.isNotNull(map.get("jg"))){
						String[] arrDq = map.get("jg").split("/");
						map.put("jgshen", (arrDq.length>=1)?arrDq[0]:"");
						map.put("jgs", (arrDq.length>=1)?arrDq[0]:"");
						map.put("jgshi", (arrDq.length>=2)?arrDq[1]:"");
						map.put("jgxian", (arrDq.length>=3)?arrDq[2]:"");
						map.put("jgx", (arrDq.length>=3)?arrDq[2]:"");
					}
					if(StringUtils.isNotNull(map.get("hkszd"))){
						String[] arrDq = map.get("hkszd").split("/");
						map.put("hkshen", (arrDq.length>=1)?arrDq[0]:"");
						map.put("hkshi", (arrDq.length>=2)?arrDq[1]:"");
						map.put("hkxian", (arrDq.length>=3)?arrDq[2]:"");
					}
				}
				request.setAttribute("shiList", stuDao.getShiList("").get("shiList"));
				request.setAttribute("xianList", stuDao.getShiList("").get("xianList"));
				request.setAttribute("xxdm", xxdm);
				request.setAttribute("rs1", map);
				request.setAttribute("rs", map);
				request.setAttribute("writeAble", writeAble);
				request.setAttribute("userSpecType", userType);
				request.setAttribute("mzList", dao.getMzList());
				request.setAttribute("zzmmList", dao.getZzmmList());
				request.setAttribute("ssList", stuDao.getSsList());
				request.setAttribute("xjztList", stuDao.getXjztList());		
				request.setAttribute("yhList", service.getYhList());//银行
				if (xxdm.equalsIgnoreCase(Globals.XXDM_ZBDX)) {
					// 中北大学
					return mapping.findForward("zbdx_xsxx_modi");
				}
				if(xxdm.equals(Globals.XXDM_WHLGDX)){
					//武汉理工大学
					return mapping.findForward("xsxx_whlg_modi");
				}
//				if(xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)){
//					//云南艺术学院
//					return mapping.findForward("xsxx_ynys_modi");
//				}
				if(xxdm.equalsIgnoreCase(Globals.XXDM_LSSFXY)){
					//乐山师范学院
					return mapping.findForward("xsxx_lssfxy_modi");
				}
				return mapping.findForward("modistuinfo");
			}
		}// end if(不限时)
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("mzList", dao.getMzList());
		request.setAttribute("zzmmList", dao.getZzmmList());
		request.setAttribute("xjztList", stuDao.getXjztList());
		if (xxdm.equalsIgnoreCase(Globals.XXDM_ZBDX)) {
			// 中北大学
			return mapping.findForward("zbdx_xsxx_modi");
		}
		if(xxdm.equals(Globals.XXDM_WHLGDX)){
			//武汉理工大学
			return mapping.findForward("xsxx_whlg_modi");
		}
//		if(xxdm.equalsIgnoreCase(Globals.XXDM_YNYS)){
//			//云南艺术学院
//			return mapping.findForward("xsxx_ynys_modi");
//		}
		if(xxdm.equalsIgnoreCase(Globals.XXDM_LSSFXY)){
			//乐山师范学院
			return mapping.findForward("xsxx_lssfxy_modi");
		}	
		//判断是否是根据老师分配字段的字段权限修改
		if("yes".equalsIgnoreCase(service.getXsxxCs().get("havexsqx"))){
			return new ActionForward("/xsxxgl.do?method=stuModiInfo");
		}
		System.out.println("总运行时间："+(System.currentTimeMillis()-star));
		return mapping.findForward("modistuinfo");
	}

	// //////////////////////中州大学分班编学号/////////////////////////////
	/**
	 * 分班编学号规则设置
	 */
	public ActionForward arrangeInitializtion(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();

		String userDep = session.getAttribute("userDep").toString();
		String userSpceType = dao.getUserType(userDep);
		String writeAble = Base.getWriteAble(request);

		List rs = new ArrayList();
		String sql = "";
		String tableName = "xsjbxxlsb";
		String[] cols_en = null;
		String[] cols_cn = null;
		List njList = null;
		List xyList = null;
		List zyList = null;

		String xymc = DealString.toGBK(stuForm.getXymc());
		String nj = stuForm.getNj();
		String zymc = DealString.toGBK(stuForm.getZymc());
		String xh = stuForm.getXh();
		String xm = DealString.toGBK(stuForm.getXm());

		if ("xy".equalsIgnoreCase(userSpceType)) {
			xymc = dao.getOneRs("select xymc from view_njxyzybj where xydm=?",
					new String[] { userDep }, "xymc");
			stuForm.setXymc(xymc);
		}

		stuForm.setXm(xm);
		stuForm.setXymc(xymc);
		stuForm.setZymc(zymc);

		StringBuffer querry = new StringBuffer(" where 1=1 ");// sql条件
		querry.append(xymc == null || "".equalsIgnoreCase(xymc) ? ""
				: " and xy='" + xymc + "' ");
		querry.append(nj == null || "".equalsIgnoreCase(nj) ? ""
				: " and dqszj='" + nj + "' ");
		querry.append(zymc == null || "".equalsIgnoreCase(zymc) ? ""
				: " and zymc='" + zymc + "' ");

		if (xh == null || "".equalsIgnoreCase(xh)) {
			querry.append("");
		} else {
			querry.append(" and xh like '%");
			querry.append(xh);
			querry.append("%'");
		}
		if (xm == null || "".equalsIgnoreCase(xm)) {
			querry.append("");
		} else {
			querry.append(" and xm like '%");
			querry.append(xm);
			querry.append("%'");
		}

		String go = request.getParameter("go");
		if ("go".equalsIgnoreCase(go)) {
			cols_en = new String[] { "xh", "xm", "xb", "xz", "xy", "zymc",
					"cc", "mz", "csrq" };
			cols_cn = dao.getColumnNameCN(cols_en, tableName);

			StringBuffer tempSb = new StringBuffer("");
			tempSb.append("select * from (select ");
			tempSb.append("rownum r,a.* from ");
			tempSb.append(tableName);
			tempSb.append(" a");
			tempSb.append(querry);
			tempSb.append(" ) where r<=");
			tempSb.append((stuForm.getPages().getStart() + stuForm.getPages()
					.getPageSize()));
			tempSb.append(" and r>");
			tempSb.append(stuForm.getPages().getStart());

			sql = tempSb.toString();
			rs = dao.rsToVator(sql, new String[] {}, cols_en);
			if (rs != null) {
				int rsNum = rs.size();
				request.setAttribute("rsNum", rsNum);
			}
			List topTr = dao.arrayToList(cols_en, cols_cn);
			request.setAttribute("topTr", topTr);
			request.setAttribute("rs", rs);
		}

		if (userSpceType.equalsIgnoreCase("xy")
				&& (xymc == null || xymc.equalsIgnoreCase(""))) {
			xymc = dao.getOneRs("select xymc from view_njxyzybj where xydm=?",
					new String[] { userDep }, "xymc");
			stuForm.setXymc(xymc);
		}
		// TODO 分页
		String tmpsql = "select count(1) count from " + tableName + " a"
		+ querry;
		stuForm.getPages().setMaxRecord(
				Integer.parseInt(dao.getOneRs(tmpsql, new String[] {}, "count")));

		njList = dao.getList("select distinct dqszj nj from xsjbxxlsb",
				new String[] {}, new String[] { "nj" });
		zyList = dao.getList("select distinct zymc from xsjbxxlsb",
				new String[] {}, new String[] { "zymc" });
		xyList = dao.getList("select distinct xy xymc from xsjbxxlsb",
				new String[] {}, new String[] { "xymc" });

		request.setAttribute("njList", njList);// 发送年级列表
		// request.setAttribute("xnList", Base.getXnndList());// 发送学年列表
		// request.setAttribute("xqList", Base.getXqList());// 发送学期列表
		request.setAttribute("xyList", xyList);// 发送学院列表
		request.setAttribute("zyList", zyList);// 发送专业列表
		// request.setAttribute("bjList",
		// (Base.getBjMap()).get(xydm+"!!"+zydm+"!!"+nj));// 发送班级列表
		request.setAttribute("userSpceType", userSpceType);
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("success");
	}

	/**
	 * 专业班级设置
	 */
	public ActionForward classConf(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
//		String writeAble = Base.getWriteAble(request);
		DAO dao = DAO.getInstance();

		String sql = "";
		boolean flag = false;
		List rs = new ArrayList();
		String[] cols_en = null;
		String[] cols_cn = null;

		String doType = request.getParameter("doType");
		String bjrs = stuForm.getBjrs();
		bjrs = bjrs == null || bjrs .equalsIgnoreCase("") ? "0" : bjrs;

		StringBuffer temSql = new StringBuffer();
		temSql.append("select a.* from(");
		temSql.append("select a.zymc,a.xqmc,(select distinct b.zydm from bks_zydm b where b.zymc=a.zymc) zydm,a.bjmc,a.xymc,a.cc,a.xz,a.rs,(case round(a.rs/");
		temSql.append(bjrs.equalsIgnoreCase("0") ? "30" : bjrs);
		temSql.append(") when 0 then 1 else round(a.rs/");
		temSql.append(bjrs.equalsIgnoreCase("0") ? "30" : bjrs);
		temSql.append(") end ) bs ");
		temSql.append("from(");
		temSql.append("select distinct zymc ,xy xymc,zymc bjmc,cc,xz,xqmc,count(*) rs from xsjbxxlsb group by zymc,xy,cc,xz,xqmc");
		temSql.append(") a ");
		temSql.append(") a");

		if ("save".equalsIgnoreCase(doType)) {
			sql = "delete from fbcssdb";
			flag = dao.runUpdate(sql, new String[] {});
			int num = 0;
			num = Integer.parseInt(dao.getOneRs("select count(*)count from (" + temSql.toString() + ") where zydm is null", new String[]{}, "count"));
			if(num>0){
				request.setAttribute("errMsg", "有部分专业不存在！");
				return new ActionForward("/errMsg.do", false);
			}
			if (flag) {
				// 将学生基本信息临时表中的信息按专业名称分组插入fbcssdb(分班初始设定表)中
				sql = "insert into fbcssdb(zydm,zymc,rs,bjgs,xlccmc,dygbjmc,xz,xymc,xqmc)(select zydm,zymc,rs,bs,cc,bjmc,xz,xymc,xqmc from ("
					+ temSql.toString() + "))";
				flag = dao.runUpdate(sql, new String[] {});
				request.setAttribute("result", flag);
			}
		}
		if ("del".equalsIgnoreCase(doType)) {
			// 删除表fbcssdb信息
			String pkValue = request.getParameter("pkValue");
			String[] pkV = pkValue.split("!!SplitOneSplit!!");
			for (int i = 0; i < pkV.length; i++) {
				sql = "delete from fbcssdb where zydm= '" + pkV[i] + "'";
				flag = dao.runUpdate(sql, new String[] {});
			}
			request.setAttribute("result", flag);
		}
		// 查询出fbcssdb(分班初始设定表)中的记录显示在页面
		//int num = dao.getOneRsint("select count(*) num from fbcssdb");
		if (bjrs != "0") {
			//查询页面的初始查询
			cols_en = new String[] { "zydm", "zymc", "rs", "bs", "cc", "bjmc",
					"xz", "xymc" };
			cols_cn = new String[] { "专业代码", "专业名称", "人数", "班数", "层次", "班级名称",
					"学制", Base.YXPZXY_KEY+"名称" };
			sql = "select * from (" + temSql.toString() + ")";
		} else {
			cols_en = new String[] { "zydm", "zymc", "rs", "bjgs", "xlccmc",
					"dygbjmc", "xz", "xymc" };
			cols_cn = dao.getColumnNameCN(cols_en, "fbcssdb");
			sql = "select * from fbcssdb";
			rs = dao.rsToVator(sql, new String[]{}, cols_en);
			//没有初始设定过就取临时表中的数据
			if(rs==null || rs.size()<1){
				cols_en = new String[] { "zydm", "zymc", "rs", "bs", "cc", "bjmc",
						"xz", "xymc" };
				cols_cn = new String[] { "专业代码", "专业名称", "人数", "班数", "层次", "班级名称",
						"学制", Base.YXPZXY_KEY+"名称" };
				sql = "select * from (" + temSql.toString() + ")";
			}
		}
		rs = dao.rsToVator(sql, new String[] {}, cols_en);
		List topTr = dao.arrayToList(cols_en, cols_cn);

		request.setAttribute("topTr", topTr);
		request.setAttribute("rs", rs);
		request.setAttribute("rsNum", rs.size());
		request.setAttribute("writeAble", "yes");// writeAble);
		return mapping.findForward("classconf");
	}

	/**
	 * 班级代码规则设置页面初始化
	 */
	public ActionForward classCode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		String sql = "";
		List bjdmzcxList = new ArrayList();
		DAO dao = DAO.getInstance();

		// 设置规则组成项
		sql = "select distinct zcxdm,zcxmc from bjdmzcxb";
		bjdmzcxList = dao.getList(sql, new String[] {}, new String[] { "zcxdm",
		"zcxmc" });

		request.setAttribute("zcxList", bjdmzcxList);
		request.setAttribute("zcxNum", bjdmzcxList.size());
		return mapping.findForward("classcode");
	}

	/**
	 * 保存班级代码规则
	 */
	public ActionForward saveClassCodeRule(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		boolean flag = false;
		int num = Integer.parseInt(request.getParameter("num"));
		sql = "delete from bjdmgzsz";
		flag = dao.runUpdate(sql, new String[] {});
		if (flag) {
			for (int i = 0; i < num; i++) {
				String zdmc = request.getParameter("zdmc" + i);
				if (!"".equalsIgnoreCase(zdmc)) {
					String zdsjcd = request.getParameter("zdsjcd" + i);
					String qsw = request.getParameter("qsw" + i);
					String ws = request.getParameter("ws" + i);
					String sfbl = DealString.toGBK(request.getParameter("sfbl"
							+ i));
					String scxhsx = request.getParameter("scxhsx" + i);
					String zdzwmc = dao.getOneRs(
							"select zcxmc from bjdmzcxb where zcxdm=?",
							new String[] { zdmc }, "zcxmc");

					sql = "insert into bjdmgzsz(zdmc,zdzwmc,zdsjcd,qsw,ws,scxhsx,sfbl) values(?,?,?,?,?,?,?)";
					flag = dao.runUpdate(sql, new String[] { zdmc, zdzwmc,
							zdsjcd, qsw, ws, scxhsx, sfbl });
				}
			}
		}

		request.setAttribute("result", flag);
		request.setAttribute("zcxList", new ArrayList());
		request.setAttribute("zcxNum", "");
		return mapping.findForward("classcode");
	}

	/**
	 * 班级简称规则设置页面初始化
	 */
	public ActionForward classSimpleName(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		String sql = "";
		List bjjczcxList = new ArrayList();
		DAO dao = DAO.getInstance();

		// 设置规则组成项
		sql = "select distinct zcxdm,zcxmc from bjjczcxb";
		bjjczcxList = dao.getList(sql, new String[] {}, new String[] { "zcxdm",
		"zcxmc" });

		request.setAttribute("zcxList", bjjczcxList);
		request.setAttribute("zcxNum", bjjczcxList.size());
		return mapping.findForward("classsimplename");

	}

	/**
	 * 班级简称规则保存
	 */
	public ActionForward saveClassSimpleNameRule(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		boolean flag = false;
		int num = Integer.parseInt(request.getParameter("num"));
		sql = "delete from bjjcgzszb";
		flag = dao.runUpdate(sql, new String[] {});
		if (flag) {
			for (int i = 0; i < num; i++) {
				String zdmc = request.getParameter("zdmc" + i);
				if (!"".equalsIgnoreCase(zdmc)) {
					String qsw = request.getParameter("qsw" + i);
					String ws = request.getParameter("ws" + i);
					String sfqb = DealString.toGBK(request.getParameter("sfqb"
							+ i));
					String xh = request.getParameter("xh" + i);
					String cl = DealString
					.toGBK(request.getParameter("cl" + i));
					String zdzwmc = dao.getOneRs(
							"select zcxmc from bjjczcxb where zcxdm=?",
							new String[] { zdmc }, "zcxmc");

					sql = "insert into bjjcgzszb(zdmc,zdzwmc,qsw,ws,xh,sfqb,cl) values(?,?,?,?,?,?,?)";
					flag = dao.runUpdate(sql, new String[] { zdmc, zdzwmc, qsw,
							ws, xh, sfqb, cl });
				}
			}
		}

		request.setAttribute("result", flag);
		return classSimpleName(mapping, form, request, response);
	}

	/**
	 * 更新班级简称
	 */
	public ActionForward modifyClassSimpleName(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		String str_sql = "";
		boolean flag = false;
		int num = Integer.parseInt(request.getParameter("num"));
		for (int i = 0; i < num; i++) {
			String zdmc = request.getParameter("zdmc" + i);
			if (!"".equalsIgnoreCase(zdmc) && !"cl".equalsIgnoreCase(zdmc)) {
				String sfqb = DealString
				.toGBK(request.getParameter("sfqb" + i));
				if ("是".equalsIgnoreCase(sfqb)) {
					str_sql += (str_sql == null || str_sql.equalsIgnoreCase("")) ? zdmc
							: "||" + zdmc;
				} else {
					String qsw = request.getParameter("qsw" + i);
					String ws = request.getParameter("ws" + i);
					str_sql += (str_sql == null || str_sql.equalsIgnoreCase("")) ? "substr("
							+ zdmc + "," + qsw + "," + ws + ")"
							: "||substr(" + zdmc + "," + qsw + "," + ws + ")";
				}
			}
			if ("cl".equalsIgnoreCase(zdmc)) {
				String cl = DealString.toGBK(request.getParameter("cl" + i));
				str_sql += (str_sql == null || str_sql.equalsIgnoreCase("")) ? "'"
						+ cl + "'"
						: "||" + "'" + cl + "'";
			}
		}
		sql = "update bks_bjdm a set a.bjjc =(select " + str_sql
		+ " from zydmb b where a.zydm=b.zydm) where bjjc is null";
		flag = dao.runUpdate(sql, new String[] {});
		request.setAttribute("result", flag);
		return classSimpleName(mapping, form, request, response);
	}

	/**
	 * 班级名称规则设置页面初始化
	 */
	public ActionForward className(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		String sql = "";
		List bjmczcxList = new ArrayList();
		DAO dao = DAO.getInstance();

		// 设置规则组成项
		sql = "select distinct zcxdm,zcxmc from bjmczcxb";
		bjmczcxList = dao.getList(sql, new String[] {}, new String[] { "zcxdm", "zcxmc" });

		request.setAttribute("zcxList", bjmczcxList);
		request.setAttribute("zcxNum", bjmczcxList.size());
		return mapping.findForward("classname");

	}

	/**
	 * 班级名称规则设置保存
	 */
	public ActionForward saveClassNameRule(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		boolean flag = false;
		int num = Integer.parseInt(request.getParameter("num"));
		sql = "delete from bjmcgzszb";
		flag = dao.runUpdate(sql, new String[] {});
		if (flag) {
			for (int i = 0; i < num; i++) {
				String zdmc = request.getParameter("zdmc" + i);
				if (!"".equalsIgnoreCase(zdmc)) {
					String qsw = request.getParameter("qsw" + i);
					String ws = request.getParameter("ws" + i);
					String sfqb = DealString.toGBK(request.getParameter("sfqb"
							+ i));
					String xh = request.getParameter("xh" + i);
					String cl = DealString
					.toGBK(request.getParameter("cl" + i));
					String zdzwmc = dao.getOneRs(
							"select zcxmc from bjjczcxb where zcxdm=?",
							new String[] { zdmc }, "zcxmc");

					sql = "insert into bjmcgzszb(zdmc,zdzwmc,qsw,ws,xh,sfqb,cl) values(?,?,?,?,?,?,?)";
					flag = dao.runUpdate(sql, new String[] { zdmc, zdzwmc, qsw,
							ws, xh, sfqb, cl });
				}
			}
		}

		request.setAttribute("result", flag);
		return className(mapping, form, request, response);
	}

	/**
	 * 学号规则设置页面初始化
	 */
	public ActionForward leaningCode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		List xhzcxList = new ArrayList();
		StudentInfoForm stuInfo = (StudentInfoForm) form;
		// 设置规则组成项
		sql = "select distinct zcxdm,zcxmc from xhzcxb";
		xhzcxList = dao.getList(sql, new String[] {}, new String[] { "zcxdm",
		"zcxmc" });

		request.setAttribute("fbzdz", stuInfo.getFbzd());
		request.setAttribute("zcxList", xhzcxList);
		request.setAttribute("zcxNum", xhzcxList.size());
		return mapping.findForward("learningcode");
	}

	/**
	 * 学号规则保存
	 */
	public ActionForward saveLearningCodeRule(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
//		StudentInfoForm stuInfo = (StudentInfoForm) form;
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		boolean flag = false;
		int num = Integer.parseInt(request.getParameter("num"));

		sql = "delete from xhgzsz";
		flag = dao.runUpdate(sql, new String[] {});
		if (flag) {
			for (int i = 0; i < num; i++) {
				String zdmc = request.getParameter("zdmc" + i);
				if (!"".equalsIgnoreCase(zdmc)) {
					String zdsjcd = request.getParameter("zdsjcd" + i);
					String qsw = request.getParameter("qsw" + i);
					String ws = request.getParameter("ws" + i);
					String sfbl = DealString.toGBK(request.getParameter("sfbl"
							+ i));
					String scxhsx = request.getParameter("scxhsx" + i);
					String qsbh = DealString.toGBK(request.getParameter("qsbh"
							+ i));
					String zdzwmc = dao.getOneRs(
							"select zcxmc from xhzcxb where zcxdm=?",
							new String[] { zdmc }, "zcxmc");

					sql = "insert into xhgzsz(zdmc,zdzwmc,qsw,ws,scxhsx,sfbl,qsbh,zdsjcd) values(?,?,?,?,?,?,?,?)";
					flag = dao.runUpdate(sql, new String[] { zdmc, zdzwmc, qsw,
							ws, scxhsx, sfbl, qsbh, zdsjcd });
				}
			}
		}

		request.setAttribute("result", flag);
		return leaningCode(mapping, form, request, response);
	}

	/**
	 * 学号排序规则设置页面初始化
	 */
	public ActionForward leaningCodeOrder(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String sql = "";
		List xhzcxList = new ArrayList();

		// 设置规则组成项
		sql = "select distinct zcxdm,zcxmc from xhscpxszzcxb";
		xhzcxList = dao.getList(sql, new String[] {}, new String[] { "zcxdm",
		"zcxmc" });

		request.setAttribute("zcxList", xhzcxList);
		request.setAttribute("zcxNum", xhzcxList.size());
		return mapping.findForward("learningcodeorder");
	}

	/**
	 * 学号生成顺序保存
	 */
	public ActionForward saveLearningCodeOrderRule(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DAO dao = DAO.getInstance();
		String sql = "";
		boolean flag = false;
		int num = 10;
		sql = "delete from xhscpxsz";
		flag = dao.runUpdate(sql, new String[] {});
		if (flag) {
			for (int i = 0; i < num; i++) {
				String zdmc = request.getParameter("zdmc" + i);
				if (!"".equalsIgnoreCase(zdmc) && zdmc != null) {
					String px = request.getParameter("px" + i);
					if (px == null || px.equalsIgnoreCase("")) {
						px = "desc";
					}
					String xh = String.valueOf(i);

					sql = "insert into xhscpxsz(zdmc,pxsx,xh) values(?,?,?)";
					flag = dao.runUpdate(sql, new String[] { zdmc, px, xh });
				}
			}
		}

		request.setAttribute("result", flag);
		return leaningCodeOrder(mapping, form, request, response);
	}

	/**
	 * 初始分班・编学号页
	 */
	public ActionForward arrangeClass(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		DAO dao = DAO.getInstance();
		StudentInfoForm stuForm = (StudentInfoForm) form;
		// 学院列表
		List xyList = null;
		// 专业列表
		List zyList = null;
		// 年级列表
		List njList = null;

		HttpSession session = request.getSession();
		List rs = new ArrayList();
		String sql = "";
		String tableName = "xsjbxxlsb";
		String[] cols_en = null;
		String[] cols_cn = null;
		String xymc = DealString.toGBK(stuForm.getXymc());
		String zymc = DealString.toGBK(stuForm.getZymc());
		String nj = DealString.toGBK(stuForm.getNj());
		String xh = stuForm.getXh();
		String xm = DealString.toGBK(stuForm.getXm());

		String userDep = session.getAttribute("userDep").toString();
		String userSpceType = dao.getUserType(userDep);
		String writeAble = Base.getWriteAble(request);

		if ("xy".equalsIgnoreCase(userSpceType)) {
			xymc = dao.getOneRs("select xymc from view_njxyzybj where xydm=?",
					new String[] { userDep }, "xymc");
			stuForm.setXymc(xymc);
		}
		stuForm.setXm(xm);
		stuForm.setXymc(xymc);
		stuForm.setZymc(zymc);

		StringBuffer querry = new StringBuffer(" where 1=1 ");// sql条件
		querry.append(xymc == null || "".equalsIgnoreCase(xymc) ? ""
				: " and xy='" + xymc + "' ");
		querry.append(nj == null || "".equalsIgnoreCase(nj) ? ""
				: " and dqszj='" + nj + "' ");
		querry.append(zymc == null || "".equalsIgnoreCase(zymc) ? ""
				: " and zymc='" + zymc + "' ");
		if (xh == null || "".equalsIgnoreCase(xh)) {
			querry.append("");
		} else {
			querry.append(" and xh like '%");
			querry.append(xh);
			querry.append("%'");
		}
		if (xm == null || "".equalsIgnoreCase(xm)) {
			querry.append("");
		} else {
			querry.append(" and xm like '%");
			querry.append(xm);
			querry.append("%'");
		}

		String go = request.getParameter("go");
		if ("go".equalsIgnoreCase(go)) {
			cols_en = new String[] { "xh", "xm", "xb", "xz", "xy", "zymc",
					"xzb", "cc", "mz", "csrq" };
			cols_cn = dao.getColumnNameCN(cols_en, tableName);

			StringBuffer tempSb = new StringBuffer("");
			tempSb.append("select * from (select ");
			tempSb.append("rownum r,a.* from ");
			tempSb.append(tableName);
			tempSb.append(" a");
			tempSb.append(querry);
			tempSb.append(" ) where r<=");
			tempSb.append((stuForm.getPages().getStart() + stuForm.getPages()
					.getPageSize()));
			tempSb.append(" and r>");
			tempSb.append(stuForm.getPages().getStart());

			sql = tempSb.toString();
			rs = dao.rsToVator(sql, new String[] {}, cols_en);
			if (rs != null) {
				int rsNum = rs.size();
				request.setAttribute("rsNum", rsNum);
			}
			List topTr = dao.arrayToList(cols_en, cols_cn);
			request.setAttribute("topTr", topTr);
			request.setAttribute("rs", rs);
		}

		if (userSpceType.equalsIgnoreCase("xy")
				&& (xymc == null || xymc.equalsIgnoreCase(""))) {
			xymc = dao.getOneRs("select xymc from view_njxyzybj where xydm=?",
					new String[] { userDep }, "xymc");
			stuForm.setXymc(xymc);
		}
		// TODO 分页
		String tmpsql = "select count(1) count from " + tableName + " a"
		+ querry;
		stuForm.getPages().setMaxRecord(
				Integer
				.parseInt(dao
						.getOneRs(tmpsql, new String[] {}, "count")));
		xyList = dao.getList("select distinct xy xymc from xsjbxxlsb",
				new String[] {}, new String[] { "xymc" });
		zyList = dao.getList("select distinct zymc from xsjbxxlsb",
				new String[] {}, new String[] { "zymc" });
		njList = dao.getList("select distinct dqszj nj from xsjbxxlsb",
				new String[] {}, new String[] { "nj" });

		request.setAttribute("njList", njList);
		request.setAttribute("xyList", xyList);
		request.setAttribute("zyList", zyList);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("userSpceType", userSpceType);
		return mapping.findForward("arrangeclass");
	}

	/**
	 * 生成班级信息
	 */
	@SuppressWarnings("unchecked")
	public ActionForward createClassInfo(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		String writeAble = Base.getWriteAble(request);
		DAO dao = DAO.getInstance();
		DistributeClassService service = new DistributeClassService();
		List topTr = null;
		boolean flag = false;
		String nj = stuForm.getNj();
		String xymc = DealString.toGBK(stuForm.getXymc());
		String zymc = DealString.toGBK(stuForm.getZymc());

		String sql = "";
		String bmdm = "";

		// 获取专业代码集合
		StringBuffer sb = new StringBuffer();
		sb.append("where 1=1");
		sb.append(nj == null || nj.equalsIgnoreCase("") ? "" : " and b.dqszj='"
			+ nj + "'");
		sb.append(xymc == null || xymc.equalsIgnoreCase("") ? ""
				: " and b.xy='" + xymc + "'");
		sb.append(zymc == null || zymc.equalsIgnoreCase("") ? ""
				: " and b.zymc='" + zymc + "'");
		// 将班级人数保存到bks_bjdm

		String[] zydmList = dao .getArray(
				"select distinct zydm from bks_zydm a where exists(select 1 from xsjbxxlsb b "
				+ sb.toString() + " and a.zymc=b.zymc)",
				new String[] {}, "zydm");
		// 生成班级信息
		int num = 1;
		for (int i = 0; i < zydmList.length; i++) {// 每个专业
			sql = "select distinct  zymc,xy xymc,dqszj from xsjbxxlsb a where exists(select zymc from bks_zydm b where zydm=? and a.zymc=b.zymc)";
			HashMap<String, String> xyzyMap = dao.getMap(sql,
					new String[] { zydmList[i] }, new String[] { "zymc", "xymc", "dqszj" });
			bmdm = dao.getOneRs("select xydm from view_njxyzybj where xymc=?",
					new String[] { xyzyMap.get("xymc") }, "xydm");
			// 当前年级本专业已经有的班级信息删除重新分配
			StandardOperation.delete("bks_bjdm", "nj||zydm", xyzyMap.get("dqszj") + zydmList[i], request);
			int bjgs = 0;// 班级个数
			sql = "select bjgs from fbcssdb where zydm=?";
			String bjzgs = dao.getOneRs(sql, new String[] { zydmList[i] }, "bjgs");
			bjgs = Integer.parseInt(bjzgs==null || "".equalsIgnoreCase(bjzgs) ? "0" : bjzgs);

			if(bjgs<1){
				request.setAttribute("errMsg", "请先设置班级个数！");
				return new ActionForward("/errMsg.do", false);
			}
			// 当前年级本专业有多少个班就生成多少个班
			for (int j = 0; j < bjgs; j++) {
				String bdm = "";
				String bmc = "";
				// 获取代码规则
				sql = "select * from bjdmgzsz order by scxhsx";
				List rs = dao.getList(sql, new String[] {}, new String[] {
						"zdmc", "zdzwmc", "zdsjcd", "qsw", "ws", "scxhsx",
				"sfbl" });
				// 获取名称规则
				sql = "select * from bjmcgzszb order by xh";
				List rsMc = dao.getList(sql, new String[] {}, new String[] {
						"zdmc", "zdzwmc", "sfqb", "qsw", "ws", "xh", "cl" });
				// 生成班级代码
				for (int k = 0; k < rs.size(); k++) {
					HashMap<String, String> map = (HashMap<String, String>) rs.get(k);
					map.put("qsw", map.get("qsw")==null || map.get("qsw").equalsIgnoreCase("") ? "0" : map.get("qsw"));
					//字段所属表
					String tableName = dao.getOneRs(
							"select zcxssb from bjdmzcxb where zcxdm=?",
							new String[] { map.get("zdmc") }, "zcxssb");
					if (tableName.equalsIgnoreCase("fbcssdb")) {						
						sql = "select substr(" + map.get("zdmc") + ","
						+ map.get("qsw") + "," + map.get("ws")
						+ ") str from " + tableName + " where zydm='"
						+ zydmList[i] + "'";
					} else if (tableName.equalsIgnoreCase("xsjbxxlsb")) {
						zymc = dao.getOneRs("select distinct zymc from bks_zydm where zydm=?", new String[]{zydmList[i]}, "zymc");
						if (map.get("zdmc").equalsIgnoreCase("nj"))
							map.put("zdmc", "dqszj");
						sql = "select substr(" + map.get("zdmc") + ","
						+ map.get("qsw") + "," + map.get("ws")
						+ ") str from " + tableName + " where zymc='"
						+ zymc + "'";
					} else if (tableName.equalsIgnoreCase("dual")){
						int length = Integer.parseInt(map.get("ws"));
						if(length>String.valueOf(num).length()){
							sql = "select lpad("+ (num) +"," + length + ",'0')str from dual"; 
						}else{
							sql = "select " + (num) + " str from dual";							
						}
						num +=1;
					}else{
						sql = "select substr(" + map.get("zdmc") + ","
						+ map.get("qsw") + "," + map.get("ws")
						+ ") str from " + tableName;
					}
					bdm += dao.getOneRs(sql, new String[] {}, "str");
				}
				bdm = bdm + (j + 1);// 最后生成的班级代码
				// 生成班级名称
				for (int m = 0; m < rsMc.size(); m++) {
					HashMap<String, String> map = (HashMap<String, String>) rsMc.get(m);
					//字段所属表
					String tableName = dao.getOneRs( "select zcxssb from bjmczcxb where zcxdm=?",
							new String[] { map.get("zdmc") }, "zcxssb");
					//字段名称
					String zdmc = map.get("zdmc");					
					if (zdmc.equalsIgnoreCase("zymc") || zdmc.equalsIgnoreCase("zyjc")) {
						//专业名称 专业简称
						if (map.get("sfqb").equalsIgnoreCase("是")) {
							sql = "select " + map.get("zdmc") + " str from "
							+ tableName + " where zydm='" + zydmList[i]
							                                         + "'";
						} else
							sql = "select substr(" + map.get("zdmc") + ","
							+ map.get("qsw") + "," + map.get("ws")
							+ ") str from " + tableName
							+ " where zydm='" + zydmList[i] + "'";
					} else if (zdmc.equalsIgnoreCase("nj")) {
						//年级
						map.put("zdmc", "dqszj");
						if (map.get("sfqb").equalsIgnoreCase("是")) {
							sql = "select " + map.get("zdmc") + " str from "
							+ tableName + " where zydm='" + zydmList[i]
							                                         + "'";
						} else
							sql = "select substr(" + map.get("zdmc") + ","
							+ map.get("qsw") + "," + map.get("ws")
							+ ") str from " + tableName
							+ " where zydm='" + zydmList[i] + "'";
					} else if (zdmc.equalsIgnoreCase("bjdm")) {
						//班级代码
						if (map.get("sfqb").equalsIgnoreCase("是")) {
							sql = "select '" + bdm + "' str from dual";
						} else
							sql = "select substr('" + bdm + "',"
							+ map.get("qsw") + "," + map.get("ws")
							+ ") str from dual";
					} else if (zdmc.equalsIgnoreCase("cl")) {
						//常量
						sql = "select '" + map.get("cl") + "' str from dual";
					}
					bmc += dao.getOneRs(sql, new String[] {}, "str")==null ? "" : dao.getOneRs(sql, new String[] {}, "str");
				}
				bmc = bmc + (j + 1);// 最后生成的班级名称
				// 获取组成人数

				String[] inputValue = new String[] { bdm, zydmList[i], bmdm, bmc, xyzyMap.get("dqszj") };
				//将生成的班级信息插入到班级代码表中				
				boolean result = StandardOperation.insert("bks_bjdm", new String[] { "bjdm", "zydm", "bmdm", "bjmc", "nj" }, inputValue, request);
				if(result==false){
					//StandardOperation.update("xsjbxxlsb", "update xsjbxxlsb a set xzb = '' where exists(select 1 from bks_bjdm b where a.xzb=b.bjmc and b.nj='"+xyzyMap.get("dqszj").trim() +"')", request);
					// 当前年级本专业已经有的班级信息删除重新分配
					//StandardOperation.delete("bks_bjdm", "nj", xyzyMap.get("dqszj").trim(), request);
					request.setAttribute("message", "按您设置的条件生成的班级代码存在重复，请重新设置条件后再分班。");
					request.setAttribute("url", "arrangeClass.do?method=arrangeClass");
					return new ActionForward("/logicError.jsp",false);
				}
				//将生成的班级信息插入到临时表中
				//StandardOperation.insert("bjdmlsb", new String[] { "bjdm", "zydm", "bmdm", "bjmc", "nj" }, inputValue, request);
			}
		}
		// 学生信息临时表中插入班级名称
		for (int i = 0; i < zydmList.length; i++) {
			sql = "select distinct  zymc,xy xymc,dqszj from xsjbxxlsb a where exists(select 1 from bks_bjdm b where a.zymc=(select distinct zymc from bks_zydm where zydm=(select distinct zydm from bks_bjdm where zydm=?)))";
			HashMap<String, String> xyzyMap = dao.getMap(sql,
					new String[] { zydmList[i] }, new String[] { "zymc",
					"xymc", "dqszj" });
			List zkzhList = dao.getList(
					"select zkzh from xsjbxxlsb where zkzh is not null and zymc=? order by rxzf",
					new String[] { xyzyMap.get("zymc") },
					new String[] { "zkzh" });
			List bjmcList = dao.getList(
					"select bjdm,bjmc from bks_bjdm where nj=? and zydm=?",
					new String[] { xyzyMap.get("dqszj"), zydmList[i] },
					new String[] { "bjdm", "bjmc" });
			int size = bjmcList.size();
			int cs = 0;
			for (int q = 0; q < zkzhList.size(); q++) {
				sql = "select bjdm ,bjmc from bks_bjdm where nj=? and zymc=?";
				if (cs >= size){
					cs = 0;
				}
				HashMap<String, String> bjmcMap = (HashMap<String, String>) bjmcList.get(cs);
				HashMap<String, String> zkzhMap = (HashMap<String, String>) zkzhList.get(q);
				sql = "update xsjbxxlsb set xzb='" + bjmcMap.get("bjmc")
				+ "' where zkzh='" + zkzhMap.get("zkzh") + "'";
				flag = dao.runUpdate(sql, new String[] {});
				cs++;
				// 写日志
				// dao.writeLog(sql, null, null, "修改:", request);
			}
		}

		// 查询班级信息
		StringBuffer temStr = new StringBuffer();
		temStr.append("select a.* from bks_bjdm a where exists(select 1 from (");
		temStr.append("select distinct zydm,nj from view_njxyzybj a where exists(select 1 from xsjbxxlsb b ");
		temStr.append(sb);
		temStr.append(" and a.zymc=b.zymc and a.nj=b.dqszj)) b where a.zydm=b.zydm and a.nj=b.nj)");
		sql = temStr.toString();

		String[] outputValue = { "bjdm", "bjmc", "zydm", "bmdm", "nj" };
		String[] colunmCN = dao.getColumnNameCN(outputValue, "bks_bjdm");
		List list = dao.rsToVator(sql, new String[] {}, outputValue);
		topTr = dao.arrayToList(outputValue, colunmCN);

		//向Base中增加班级信息				
		service.addBjInfoToBase();

		request.setAttribute("result", flag);
		request.setAttribute("rsNum", list.size());
		request.setAttribute("topTr", topTr);
		request.setAttribute("rs", list);
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("createclassinfo");
	}

	/**
	 * 编学号
	 */
	@SuppressWarnings("unchecked")
	public ActionForward createLearningCode(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		String writeAble = Base.getWriteAble(request);
		DAO dao = DAO.getInstance();
		String nj = stuForm.getNj();
		String xymc = DealString.toGBK(stuForm.getXymc());
		String zymc = DealString.toGBK(stuForm.getZymc());		

		String sql = "";
		boolean flag = false;
		String userDep = session.getAttribute("userDep").toString();
		String userSpceType = dao.getUserType(userDep);

		// 获取查询条件
		StringBuffer sb = new StringBuffer();
		sb.append("where 1=1");
		sb.append(nj == null || nj.equalsIgnoreCase("") ? "" : " and b.dqszj='" + nj + "'");
		sb.append(xymc == null || xymc.equalsIgnoreCase("") ? "" : " and b.xy='" + xymc + "'");
		sb.append(zymc == null || zymc.equalsIgnoreCase("") ? "" : " and b.zymc='" + zymc + "'");

		sql = "select count(*) sum from xsjbxxlsb where xzb is not null";
		if (Integer.parseInt(dao.getOneRs(sql, new String[] {}, "sum")) < 1) {
			request.setAttribute("errMsg", "班级信息为空，请先分班再编学号！");
			return new ActionForward("/errMsg.do", false);
		}
		// 将学号清空
		sql = "update xsjbxxlsb b set xh='' " + sb.toString();
		dao.runUpdate(sql, new String[] {});
		dao.writeLog(sql, new String[] { "" }, null, "修改", request);
		int max_count = 0;
		// 是否有班级代码
		// sql = "select count(*) num from xhgzsz where zdmc='bjdm'";
		// int num = Integer.parseInt(dao.getOneRs(sql,new String[]{},"num"));
		// if(num>0){
		// TODO 按班级代码分
		// 人数最多班级的人数
		int bhlsh = 0; // 编号流水号
		int fixedLen = 0;// 固定长度
		String bhws = "";// 编号位数

		bhws = dao.getOneRs("select qsbh from xhgzsz where zdmc='bh'",
				new String[] {}, "qsbh");
		bhws = bhws == null || bhws.equalsIgnoreCase("") ? "0" : bhws;
		sql = "select count(*) maxnum from  xsjbxxlsb";
		max_count = Integer.parseInt(dao.getOneRs(sql, new String[] {}, "maxnum"));// 总人数
		fixedLen = Integer.toString(max_count).length();// 2
		if (Integer.parseInt(bhws) > 0) {
			max_count = Integer.parseInt(dao.getOneRs(
					"select sum(ws) sumws from xhgzsz where zdmc<>'bh'",
					new String[] {}, "sumws"))
					+ (Integer.toString(max_count + Integer.parseInt(bhws)).length()) + fixedLen;
		} else {
			max_count = Integer.parseInt(dao.getOneRs(
					"select sum(ws) sumws from xhgzsz where zdmc<>'bh'",
					new String[] {}, "sumws"))
					+ fixedLen;
		}

		// 获取班级列表
		sql = "select distinct bjdm from bks_bjdm a where exists(select 1 from xsjbxxlsb b "
			+ sb.toString() + " and a.bjmc=b.xzb)";
		String[] bjList = dao.getArray(sql, new String[] {}, "bjdm");
		if(bjList==null || bjList.length<1){
			request.setAttribute("errMsg", "班级信息为空，请先分班再编学号！");
			return new ActionForward("/errMsg.do", false);
		}
		for (int i = 0; i < bjList.length; i++) {
			String xh = "";
			String lsh = "";
			String temStr = "";
			String bjmc = dao.getOneRs(
					"select bjmc from bks_bjdm where bjdm=?",
					new String[] { bjList[i] }, "bjmc");
			sql = "select * from xhgzsz where scxhsx is not null order by scxhsx";
			List xhgzList = dao.getList(sql, new String[] {}, new String[] {
					"zdmc", "zdzwmc", "zdsjcd", "qsw", "ws", "qsbh", "sfbl" });
			for (int j = 0; j < xhgzList.size(); j++) {
				HashMap<String, String> gzMap = (HashMap<String, String>) xhgzList.get(j);
				if (gzMap.get("zdmc").equalsIgnoreCase("bh")) {
					// 编号
					if (bhlsh == 0) {
						sql = "select qsbh str from xhgzsz where zdmc='bh'";
						bhlsh++;
						if (dao.getOneRs(sql, new String[] {}, "str") == null
								&& "".equalsIgnoreCase(dao.getOneRs(sql,
										new String[] {}, "str"))) {
							sql = "select " + (bhlsh) + " str from dual";
						}
					} else {
						sql = "select qsbh str from xhgzsz where zdmc='bh'";
						sql = "select "
							+ (bhlsh + Integer.parseInt(dao.getOneRs(sql,
									new String[] {}, "str")))
									+ " str from dual";
						bhlsh++;
					}
				} else if (gzMap.get("zdmc").equalsIgnoreCase("xlccdm")) {
					String xlccmc = dao.getOneRs(
							"select cc from xsjbxxlsb where xzb=?",
							new String[] { bjmc }, "cc");
					sql = "select substr(" + gzMap.get("zdmc") + ","
					+ gzMap.get("qsw") + "," + gzMap.get("ws")
					+ ") str" + " from xlccdmb where xlccmc='" + xlccmc
					+ "'";
				} else if (gzMap.get("zdmc").equalsIgnoreCase("xqdm")) {
					String xqmc = dao.getOneRs(
							"select distinct xqmc from xsjbxxlsb where xzb=?",
							new String[] { bjmc }, "xqmc");
					sql = "select substr(dm," + gzMap.get("qsw") + ","
					+ gzMap.get("ws") + ") str"
					+ " from dm_zju_xq where xqmc='" + xqmc + "'";
				} else {
					sql = "select substr(" + gzMap.get("zdmc") + ","
					+ gzMap.get("qsw") + "," + gzMap.get("ws")
					+ ") str " + "from bks_bjdm where bjdm='"
					+ bjList[i] + "'";
				}
				temStr = dao.getOneRs(sql, new String[] {}, "str");
				xh = xh + temStr.trim();
			}
			// 排序顺序
			sql = "select * from xhscpxsz where pxsx is not null order by xh";
			List sxList = dao.getList(sql, new String[] {}, new String[] {
					"zdmc", "xh", "pxsx" });
			String sxStr = "";
			for (int m = 0; m < sxList.size(); m++) {
				HashMap<String, String> xsMap = (HashMap<String, String>) sxList.get(m);
				if (m == sxList.size() - 1) {
					sxStr = sxStr + xsMap.get("zdmc") + " " + xsMap.get("pxsx");
				} else {
					sxStr = sxStr + xsMap.get("zdmc") + " " + xsMap.get("pxsx") + ",";
				}
			}
			// 无排序规则默认为1
			if (sxStr == null || sxStr.equalsIgnoreCase("")) {
				sxStr = "zkzh";
			}
			// 编学号
			List rsList = dao.getList(
					"select * from xsjbxxlsb where xzb=? order by " + sxStr,
					new String[] { bjmc }, new String[] { "zkzh" });
			// 学号不足位补零
			for (int m = 0; m < rsList.size(); m++) {
				// 求最大流水号
				lsh = "";
				sql = "select max(xh) xh from xsjbxxlsb";
				String maxxh = dao.getOneRs(sql, new String[] {}, "xh");
				if (maxxh == null || maxxh.equalsIgnoreCase("")) {
					// 起始
					sql = "select substr('000000000000',1,"
						+ (max_count - xh.length() - 1) + ") tem from dual";
					lsh = lsh + dao.getOneRs(sql, new String[] {}, "tem") + "1";
				} else {
					// 求流水号
					sql = "select max(substr(xh," + (xh.length() + 1) + ")) lsh from xsjbxxlsb";
					int strLen = (Integer.toString(Integer.parseInt(dao.getOneRs(sql, new String[] {}, "lsh")) + 1)).length();
					if (strLen < ((max_count - xh.length()))) {
						sql = "select substr('0000000000',1,"
							+ (max_count - xh.length() - strLen)
							+ ") lsh from dual";
						lsh = dao.getOneRs(sql, new String[] {}, "lsh")
						+ Integer.toString(Integer.parseInt(dao .getOneRs("select max(substr(xh," + (xh.length() + 1)
								+ ")) lsh from xsjbxxlsb", new String[] {}, "lsh")) + 1);
					} else {
						lsh = Integer.toString(Integer.parseInt(dao.getOneRs(sql, new String[] {}, "lsh")) + 1);
					}
				}
				HashMap<String, String> xsxxMap = (HashMap<String, String>) rsList .get(m);
				sql = "update xsjbxxlsb a set a.xh=? where zkzh=?";
				flag = dao.runUpdate(sql, new String[] { xh + lsh, xsxxMap.get("zkzh") });
			}
		}

		// }

		List xyList = dao.getList("select distinct xy xymc from xsjbxxlsb",
				new String[] {}, new String[] { "xymc" });
		List zyList = dao.getList("select distinct zymc from xsjbxxlsb",
				new String[] {}, new String[] { "zymc" });
		List njList = dao.getList("select distinct dqszj nj from xsjbxxlsb",
				new String[] {}, new String[] { "nj" });

		request.setAttribute("njList", njList);
		request.setAttribute("xyList", xyList);
		request.setAttribute("zyList", zyList);
		request.setAttribute("result", flag);
		request.setAttribute("userSpceType", userSpceType);
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("arrangeclass");
	}

	/**
	 * 清空表
	 */
	public ActionForward deleteData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		HttpSession session = request.getSession();
		DAO dao = DAO.getInstance();
		String writeAble = Base.getWriteAble(request);
		String userDep = session.getAttribute("userDep").toString();
		String userType = dao.getUserType(userDep);
		String xxdm = StandardOperation.getXxdm();
		String tableName = "xsjbxxlsb";

		boolean flag = false;
		flag = StandardOperation.delete("delete from " + tableName
				+ " where 1=1", tableName, request);

		List xyList = dao.getList("select distinct xy xymc from xsjbxxlsb",
				new String[] {}, new String[] { "xymc" });
		List zyList = dao.getList("select distinct zymc from xsjbxxlsb",
				new String[] {}, new String[] { "zymc" });
		List njList = dao.getList("select distinct dqszj nj from xsjbxxlsb",
				new String[] {}, new String[] { "nj" });

		request.setAttribute("njList", njList);
		request.setAttribute("xyList", xyList);
		request.setAttribute("zyList", zyList);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("xxdm", xxdm);
		request.setAttribute("userSpceType", userType);
		request.setAttribute("result", flag);

		return mapping.findForward("arrangeclass");
	}

	public ActionForward showPlugClassApply(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		// HttpSession session = request.getSession();
		DAO dao = DAO.getInstance();
		String writeAble = Base.getWriteAble(request);
		HashMap<String, String> rs = new HashMap<String, String>();
		String sql = "select * from xscbsqb where xm =?";
		rs = dao.getMap(sql, new String[] { "" }, new String[] { "xm", "xb",
				"csrq", "jtdh", "ydxx", "ydzy", "sxjl", "jnzs", "xdzy", "lxdh",
		"bz" });

		request.setAttribute("rs", rs);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("do", "no");
		return mapping.findForward("plugclass");
	}

	// ////////////////////////////end中州大学分班编学号/////////////////////////
	/***************************************************************************
	 * 上海工程退学申请报表打印
	 */
	public ActionForward printTxreporter(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		HashMap<String, String> rs = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		String sql = "";
		String xh = request.getParameter("xh");
		String sqrq = request.getParameter("sqrq");
		String sjhm = request.getParameter("sjhm");
		String qtdh = request.getParameter("qtdh");
		String sqly = DealString.toGBK(request.getParameter("sqly"));
		//String sqsj = request.getParameter("sqrq");
		//学生基本信息
		sql = "select xh, xm,xb,sfzh,xymc,zymc,bjmc from view_xsjbxx where xh=?";
		rs = dao.getMap(sql, new String[] { xh }, new String[] { "xh", "xm", "xb", "sfzh", "xymc", "zymc", "bjmc" });
		//申请信息
		rs.put("sqrq", sqrq);
		rs.put("sjhm", sjhm);
		rs.put("qtdh", qtdh);
		rs.put("sqly", sqly);

		//审核信息
		sql = "select jbbmyj xyyj,xxshyj xxyj from view_txsqxx where xh=? and sqrq=?";
		rs.putAll(dao.getMap(sql, new String[]{xh,sqrq}, new String[]{"xyyj","xxyj"}));

		request.setAttribute("rs", rs);
		return mapping.findForward("printtx");

	}

	/***************************************************************************
	 * 上海工程出国申请报表打印
	 */
	public ActionForward printChgreporter(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		HashMap<String, String> rs = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		String sql = "";
		String xh = request.getParameter("xh");
		String sqrq = request.getParameter("sqrq");
		String jtdz = DealString.toGBK(request.getParameter("jtdz"));
		String zzmm = request.getParameter("zzmm");
		String jjdbqk = DealString.toGBK(request.getParameter("jjdbqk"));
		String lxdh = DealString.toGBK(request.getParameter("lxdh"));
		String qhgj = DealString.toGBK(request.getParameter("qhgj"));
		String cgyy = DealString.toGBK(request.getParameter("cgyy"));

		//根据代码获取政治面貌名称
		String zzmmmc = dao.getOneRs(
				"select zzmmmc from zzmmdmb where zzmmdm=?",
				new String[] { zzmm }, "zzmmmc");
		//获取学生的基本信息
		sql = "select xh, xm,xb,xymc,zymc,bjmc from view_xsjbxx where xh=?";
		rs = dao.getMap(sql, new String[] { xh }, new String[] { "xh", "xm",
				"xb", "xymc", "zymc", "bjmc" });
		//获取申请信息
		rs.put("sqrq", sqrq);
		rs.put("jtdz", jtdz);
		rs.put("lxdh", lxdh);
		rs.put("jjdbqk", jjdbqk);
		rs.put("qhgj", qhgj);
		rs.put("cgyy", cgyy);
		rs.put("zzmm", zzmmmc);
		//获取审核信息 
		sql = "select xxyj,xyyj,xscyj from view_cgsqxx where xh=? and sqrq=?";
		rs.putAll(dao.getMap(sql, new String[]{xh,sqrq}, new String[]{"xxyj","xyyj","xscyj"}));

		request.setAttribute("rs", rs);
		return mapping.findForward("printchg");

	}

	/**
	 * 上海工程证明打印
	 */
	public ActionForward printZmreporter(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		HashMap<String, String> rs = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		String sql = "";
		String xh = request.getParameter("xh");
		String lxfs = request.getParameter("lxfs");
		String blfs = DealString.toGBK(request.getParameter("blfs"));
		String sqly = DealString.toGBK(request.getParameter("sqly"));

		sql = "select xh, xm,xb,xymc,zymc,bjmc from view_xsjbxx where xh=?";
		rs = dao.getMap(sql, new String[] { xh }, new String[] { "xh", "xm",
				"xb", "xymc", "zymc", "bjmc" });
		rs.put("lxfs", lxfs);
		rs.put("blfs", blfs);
		rs.put("sqly", sqly);

		request.setAttribute("rs", rs);
		return mapping.findForward("printzm");

	}

	/**
	 * 上海工程退学流程
	 */
	public ActionForward showTxsqlc(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {

		return mapping.findForward("showtxsqlc");

	}

	/**
	 * 上海工程出国流程
	 */
	public ActionForward showCgsqlc(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {

		return mapping.findForward("showcgsqlc");

	}

	/**
	 * 上海工程归档资料提交
	 */
	@SuppressWarnings("unchecked")
	public ActionForward datumCommit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		ArchiveService service = new ArchiveService(); 
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		StudentInfoForm com = (StudentInfoForm) form;
		DAO dao = DAO.getInstance();
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		boolean disabled = true;
		String userDep = session.getAttribute("userDep").toString();
		String userName = session.getAttribute("userName").toString();
		String userSpceType = session.getAttribute("userType").toString();
		String writeAble = Base.getWriteAble(request);
		String doType = request.getParameter("doType");
		String xxdm = StandardOperation.getXxdm();
		String go = request.getParameter("go");

		String[] colListCN = null;
		String tableName = "view_xsjbxx";
		String sql = "";
		String countSql = "";
		List rs = new ArrayList();
		String rsNum = "";

		String xh = com.getXh();
		String xm = DealString.toGBK(com.getXm());
		String nj = com.getNj();
		String xy = com.getXydm();
		String zy = com.getZydm();
		String bj = com.getBjdm();
		String dm = com.getDm();
		String sfqq = com.getSfqq();
		String gdzldm = com.getGdzldm();
		String gdzllbdm = com.getDm();
		

		if(userSpceType.equalsIgnoreCase("stu")){
			xh = userName;
			com.setXh(xh);
		}

		if ("xy".equalsIgnoreCase(userSpceType) && Base.isNull(xy)) {
			xy = userDep;
			com.setXydm(xy);
			disabled = false;
		}
		// 根据家庭成员信息查询学生信息
		StringBuffer querry = new StringBuffer(" where 1=1");
		querry.append(Base.isNull(xy) ? "" : " and xydm='" + xy + "' ");
		querry.append(Base.isNull(nj) ? "" : " and nj='" + nj + "' ");
		querry.append(Base.isNull(zy) ? "" : " and zydm='" + zy + "' ");
		querry.append(Base.isNull(bj) ? "" : " and bjdm='" + bj + "' ");
		querry.append(Base.isNull(xh) ? "" : " and xh like'%" + DealString.replaceImmitStr(xh) + "%' ");
		querry.append(Base.isNull(xm) ? "" : " and xm like'%" + DealString.replaceImmitStr(xm) + "%' ");
		if(session.getAttribute("fdyQx").equals(true)){//辅导员
			querry.append(" and exists(select 1 from view_fdybbj f where a.bjdm=f.bjdm and f.zgh='"+userName+"')");
		}//end辅导员

		String[] colList = { "xh", "xm", "xb", "xymc", "zymc", "bjmc" };
		colListCN = dao.getColumnNameCN(colList, tableName);
		List topTr = dao.arrayToList(colList, colListCN);

		if (doType != null && "save".equalsIgnoreCase(doType)) {//信息保存
			boolean flag = false;
			String pk = request.getParameter("operPk");
			
			flag = service.saveGdzltj(com, pk);
			if(flag && Globals.XXDM_XBEMY.equalsIgnoreCase(xxdm)){//西北二民院
				com.setDdqkdm(request.getParameter("ddqkdm"));
				flag = service.saveXszxda(com, pk);
			}//end西北二民院
			
			go = "go";
			writeAble = "yes";
			request.setAttribute("result", flag);
			
			String dacx = request.getParameter("mk");
			if (StringUtils.isNotNull(dacx)){
				return new ActionForward("/stu_archives_now.do?go=go");
			}
			
		}
		
		// 高级查询
		SearchService searchService = new SearchService();
		String searchTjByUser = searchService.getSearchTjByUser(request, "a", "xydm", "bjdm");

		String searchTj = SearchService.getSearchTj(com.getSearchModel());
		String[] inputV = SearchService.getTjInput(com.getSearchModel());
		querry.append(searchTj);
		querry.append(searchTjByUser);
		
		sql = "select * from (select rownum r, xh,xm,xb,xymc,zymc,bjmc from " + tableName +" a " + querry + ") where r>" + com.getPages().getStart()+ " and r<=" + (com.getPages().getStart()+com.getPages().getPageSize());
		
		if(Globals.XXDM_HBJJXY.equalsIgnoreCase(xxdm)){
			
			tableName="";
			tableName += " (select a.xh,xm,xb,xymc,zymc,bjmc,xydm,zydm,bjdm,nj, ";
			tableName +=" case when b.sftj is null then '未提交' else b.sftj end sftj, ";
			tableName +=" case when b.dazxqk is null then '未设置' else b.dazxqk end dazxqk, ";
			tableName +=" b.bz from view_xsjbxx a left join ( ";
			tableName += " select distinct xh,sftj, dazxqk, bz from gdzltjb ) b on a.xh=b.xh) ";
			
			
			sql="";
			sql += "select * from (select rownum r, xh,xm,xb,xymc,zymc,bjmc,sftj,dazxqk,bz from ";
			
			sql += tableName;
			
			sql +=" a " + querry + ") where r>" + com.getPages().getStart()+ " and r<=" + (com.getPages().getStart()+com.getPages().getPageSize());
			colList =new String[] { "xh", "xm", "xb", "xymc", "zymc", "bjmc","sftj","dazxqk" };
			colListCN =new String[] { "学号", "姓名", "性别", "学院", "专业", "班级","是否提交","档案在校情况" };
			topTr = dao.arrayToList(colList, colListCN);
		}
		
		countSql = "select count(*) num from " + tableName + " a " + querry;
		
		String countQuery = querry.toString();
		if(Globals.XXDM_SJXY.equalsIgnoreCase(xxdm)){//三江学院
			querry = new StringBuffer(" where 1=1 ");
			querry.append(Base.isNull(gdzldm) ? "" : " and not exists(select 1 from gdzltjb b where gdzldm='"+ gdzldm + "' and a.xh=b.xh and b.sftj='已经提交') ");
			querry.append(Base.isNull(gdzllbdm) ? "" : " and not exists(select 1 from gdzltjb b where exists(select 1 from stu_gdzlb c where b.gdzldm=c.gdzldm and c.zlblb='"+ gdzllbdm + "') and a.xh=b.xh and b.sftj='已经提交') ");
			if(!Base.isNull(sfqq)){//是否交齐
				if("bqq".equals(sfqq)){
					querry.append(" and b.xh not in(select xh from (select xh,count(xh) count from gdzltjb c where gdzldm in(select gdzldm from stu_gdzlb where zlblb='"+dm+"') " +
							"and xh in (select xh from " + tableName + " a " + countQuery + ") group by xh) a where count=(select count(*) from stu_gdzlb where zlblb='"+dm+"') and xh=b.xh)");
				}else{
					querry.append(" and exists(select 1 from (select count(xh)num,max(xh)xh from gdzltjb b where gdzldm in(select gdzldm from stu_gdzlb  where zlblb='"+dm+"') " +
							"and xh=b.xh group by xh) c where b.xh=c.xh and c.num=(select count(*) from stu_gdzlb where zlblb='"+dm+"'))");
				}
			}
			
			sql = "select * from (select a.*,rownum r from (select distinct a.* from (select xh,xm,xb,xymc,zymc,bjmc from " + tableName + " a " + countQuery + ") a left join gdzltjb b on a.xh=b.xh "+querry + ")a) where r>" + com.getPages().getStart()+ " and r<=" + (com.getPages().getStart()+com.getPages().getPageSize());;
			countSql = "select count(*) num from (select  distinct a.* from (select * from " + tableName+ " a " + countQuery+ ") a left join gdzltjb b on a.xh=b.xh "+ querry +" )a " ;
			
		}//end三江学院
		
		if ("go".equalsIgnoreCase(go)) {
			rs.addAll(dao.rsToVator(sql, inputV, colList));
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
			request.setAttribute("rs", rs);// 发送数据集
			request.setAttribute("rsNum", rsNum);// 发送记录数
			com.getPages().setMaxRecord(Integer.parseInt(dao.getOneRs(countSql, inputV, "num")));
			
			request.setAttribute("searchTj", com.getSearchModel());
		}else{
			com.getPages().setMaxPage(1);
			com.getPages().setMaxRecord(0);
		}
		
		List zlList = new ArrayList<HashMap<String,String>>();
		List zlblbList = new ArrayList<HashMap<String,String>>();
		if(Globals.XXDM_SJXY.equalsIgnoreCase(xxdm)){//三江学院
			String query1 = " where ";
			String query2 = " where ";
			if("true".equals(session.getAttribute("isFdy").toString())){
				query1 += " czr='辅导员' ";
				query2 += " zlblb in (select dm from gdzllbb where czr='辅导员') ";
				userSpceType = "fdy";
			}else if("xy".equals(userSpceType)){
				query1 += " czr='学院' ";
				query2 += " zlblb in (select dm from gdzllbb where czr='学院') ";
			}else if("xx".equals(userSpceType) || "admin".equals(userSpceType)){
				query1 += " czr='学校' ";
				query2 += " zlblb in (select dm from gdzllbb where czr='学校') ";
			}else {
				query1 +=  " 1=2 ";
				query2 +=  " 1=2 ";
			}
			sql = "select distinct gdzldm,zlbmc gdzlmc from stu_gdzlb"+query2;
			zlList = dao.getList(sql, new String[] {}, new String[] {
					"gdzldm", "gdzlmc" });
			
			sql = "select distinct dm,mc from gdzllbb"+query1;
			zlblbList = dao.getList(sql, new String[] {}, new String[] {
					"dm", "mc" });
		}else{
			sql = "select distinct gdzldm,zlbmc gdzlmc from stu_gdzlb";
			zlList = dao.getList(sql, new String[] {}, new String[] {
					"gdzldm", "gdzlmc" });
		}
		
		request.setAttribute("zlblbList", zlblbList);
		request.setAttribute("zlList", zlList);
		request.setAttribute("ddqkList", xbDao.getDDqkList());
		request.setAttribute("userSpecType", userSpceType);
		request.setAttribute("disabled", disabled);
		request.setAttribute("writeAble", writeAble);
		
		if (session.getAttribute("fdyQx").equals(true)) {
			// 辅导员登录
			request.setAttribute("bjList", Fdypd.getFdybjList(userName));// 发送班级列表
			request.setAttribute("zyList", Fdypd.getFdyZyList(userName));// 发送班级列表
		}
		
		appendProperties(request, xy, zy, nj);//加载学院专业班级年级列表
		request.setAttribute("userType", userSpceType);
		request.setAttribute("topTr", topTr);// 发送表头
//		request.setAttribute("superSearch", Base.getSuperSearch());
		return mapping.findForward("datumcommit");
	}

	/**
	 * 资料表提交
	 * */

	public ActionForward datumCommitSignle(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String doType = request.getParameter("doType");
		String xh = request.getParameter("xh");
		String xxdm = StandardOperation.getXxdm();
		HashMap<String, String> map = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType").toString();
		List gdzlList = new ArrayList();
		boolean flag = false;
		String sql = "";
		int rsNum = 0;

		String tableName = "gdzltjb";
		String pk = "xh||gdzldm";
		String tjbj = "已经提交";
		String[] input = { "xh", "gdzldm", "sftj" };
		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		
		if (xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)) {
			// 西北二民院
			tableName = "xbemy_dazlb";
			input = new String[] { "xh", "zldm", "zlzs" };
			pk = "xh||zldm";
		}

		if (doType != null && doType.equalsIgnoreCase("save")) {
			if (Globals.XXDM_SJXY.equalsIgnoreCase(xxdm)) {
				//三江学院
				String[] gdzldms = request.getParameterValues("gdzldm");
				String query2 = "";
				if("true".equals(session.getAttribute("isFdy").toString())){
					query2 += " and gdzldm in (select dm from gdzllbb where czr='辅导员') ";
				}else if("xy".equals(userType)){
					query2 += " and gdzldm in (select dm from gdzllbb where czr='学院') ";
				}else if("xx".equals(userType) || "admin".equals(userType)){
					query2 += " and gdzldm in (select dm from gdzllbb where czr='学校') ";
				}
				sql = "delete from gdzltjb where xh=?";
				sql += query2;
				flag = dao.runUpdate(sql, new String[]{xh});
				if(gdzldms != null ){
					if(flag){
						String[] sqls = new String[gdzldms.length];
						for(int i = 0; i < gdzldms.length; i++){
							sqls[i] = "insert into gdzltjb(gdzldm,xh,sftj) values('"+gdzldms[i]+"','"+xh+"','已经提交')";
						}
						int[] num = dao.runBatch(sqls);
						flag = dao.checkBatch(num);
					}
				}
			}else if (Globals.XXDM_HBJJXY.equalsIgnoreCase(xxdm)) {
				// -------------------2012.4.9 qlj-------------------------
				//湖北经济学院 
				
				String bz=request.getParameter("bz");//备注
				String sftj=request.getParameter("sftj");//是否提交
				String dazxqk=request.getParameter("dazxqk");//档案在校情况
				
				input =new String[] { "xh", "gdzldm", "sftj","dazxqk","bz" };
				
				int count = Integer.parseInt(request.getParameter("rsNum"));
				for (int i = 0; i < count; i++) {
					
					String zldm = request.getParameter("zldm" + i);
					
					if (zldm != null && !zldm.equalsIgnoreCase("")) {
						flag = StandardOperation.delete(tableName, pk, xh + zldm, request);
						if (flag) {
							flag = StandardOperation.insert(tableName, input, new String[] { xh, zldm, sftj,dazxqk,bz }, request);
						}
					}
				}
				
			}else{
				int count = Integer.parseInt(request.getParameter("rsNum"));
				for (int i = 0; i < count; i++) {
					String zldm = request.getParameter("zldm" + i);
					tjbj = xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY) ? request.getParameter("zlzs" + i) : tjbj;
					if (zldm != null && !zldm.equalsIgnoreCase("")) {
						flag = StandardOperation.delete(tableName, pk, xh + zldm, request);
						if (flag) {
							flag = StandardOperation.insert(tableName, input, new String[] { xh, zldm, tjbj }, request);
						}
					}
				}
				if (xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)) {
					// 西北二民院
					String ddqkdm = request.getParameter("ddqkdm");
					flag = StandardOperation.delete("xbemy_xszxdab", "xh", xh, request);
					if (flag) {
						flag = StandardOperation.insert("xbemy_xszxdab",
								new String[] { "xh", "ddqkdm" }, new String[] { xh, ddqkdm }, request);
					}
				}
			}	
			request.setAttribute("result", flag);
		}
		
		input = new String[] { "xh", "xm", "xb", "xymc", "zymc", "bjmc" };
		sql = "select xh,xm,xb,xymc,zymc,bjmc from view_xsjbxx where xh=?";
		
		if (Globals.XXDM_HBJJXY.equalsIgnoreCase(xxdm)) {
			sql ="";
			sql +=" select a.xh,xm,xb,xymc,zymc,bjmc,b.sftj,b.dazxqk, ";
			sql +=" b.bz from view_xsjbxx a left join ( ";
			sql +=" select distinct xh,sftj, dazxqk, bz from gdzltjb ) b on a.xh=b.xh  ";
			sql +=" where a.xh=? ";
			
			input = new String[] { "xh", "xm", "xb", "xymc", "zymc", "bjmc","sftj","dazxqk","bz" };
		}
		
		map = dao.getMap(sql, new String[] { xh }, input);	
		if (Globals.XXDM_SJXY.equalsIgnoreCase(xxdm)) {
			//三江学院
			String query2 = " where 1=1 ";
			if(!"view".equals(doType)){
				if("true".equals(session.getAttribute("isFdy").toString())){
					query2 += " and zlblb in (select dm from gdzllbb where czr='辅导员') ";
				}else if("xy".equals(userType)){
					query2 += " and zlblb in (select dm from gdzllbb where czr='学院') ";
				}else if("xx".equals(userType) || "admin".equals(userType)){
					query2 += " and zlblb in (select dm from gdzllbb where czr='学校') ";
				}
			}		
			sql = "select gdzldm,zlbmc gdzlmc,(select mc from gdzllbb where dm=a.zlblb)lbmc from stu_gdzlb a "+query2+" order by zlblb";
			List<HashMap<String,String>> list = dao.getList(sql, new String[] {}, new String[] {
					"gdzldm", "gdzlmc", "lbmc" });
			HashMap<String,String> tempMap = new HashMap<String,String>();
			HashMap<String,Object> zlbMap = new HashMap<String,Object>();
			List<HashMap<String,String>> zlblist = new ArrayList<HashMap<String,String>>();
			List<HashMap<String,Object>> allzlblist = new ArrayList<HashMap<String,Object>>();
			if(list != null && list.size()>0){
				String lbmc = list.get(0).get("lbmc");
				for(int i=0;i<list.size()+1;i++){
					if(i<list.size()){
						tempMap = list.get(i);
					}				
					if((tempMap.get("lbmc")!=null && !tempMap.get("lbmc").equals(lbmc))||
							i==list.size()){
						zlbMap.put("lbmc", lbmc);
						zlbMap.put("zlblist", zlblist);
						allzlblist.add(zlbMap);
						lbmc = tempMap.get("lbmc");	
						if(i<list.size()){
							zlbMap = new HashMap<String,Object>();
							zlblist = new ArrayList<HashMap<String,String>>();
							zlblist.add(tempMap);
						}
					}else{
						zlblist.add(tempMap);
					}
				}
			}
			ArrayList<String[]> zlbs = dao.rsToVator("select gdzldm from gdzltjb where xh=?", new String[]{xh},  new String[]{"gdzldm"});
			String str = "!@!";
			for(int i=0;i<zlbs.size();i++){
				str += zlbs.get(i)[0]+"!@!";
			}
			request.setAttribute("gdzlList", allzlblist);
			request.setAttribute("rs", map);
			request.setAttribute("zlbs", str);
			request.setAttribute("doType", doType);
			return mapping.findForward("datum_commit_sjxySingle");
		}else{
			sql = "select distinct gdzldm zldm,zlbmc zlmc,false sftj from stu_gdzlb";
			if(StringUtils.isNotNull(xh)){
				sql = "select distinct gdzldm zldm,zlbmc zlmc,'false' sftj from stu_gdzlb a where not exists(select 1 from gdzltjb b where a.gdzldm=b.gdzldm and b.xh='"+ DealString.replaceImmitStr(xh)+"') union all select distinct gdzldm,(select zlbmc from stu_gdzlb c where b.gdzldm=c.gdzldm) gdzlmc, 'true' sftj from gdzltjb b where b.xh='" + DealString.replaceImmitStr(xh) + "'";
			}
			System.out.println(sql);
			gdzlList = dao.getList(sql, new String[] {}, new String[] { "zldm", "zlmc","sftj" });
			rsNum = gdzlList.size();
		}
		
		request.setAttribute("message", "message");
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("rs", map);
		request.setAttribute("ddqkList", xbDao.getDDqkList());
		request.setAttribute("gdzlList", gdzlList);
		request.setAttribute("doType", doType);
		return mapping.findForward("datum_commit_single");
	}

	/**
	 * 归档资料查询
	 */
	@SuppressWarnings("unchecked")
	public ActionForward datumQuerry(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		StudentInfoForm com = (StudentInfoForm) form;
		String writeAble = Base.getWriteAble(request);
		request.setAttribute("writeAble", writeAble);
		HttpSession session = request.getSession();
		DAO dao = DAO.getInstance();
		Base.chkSessionTimeOut(session);
		boolean disabled = true;
		String userDep = session.getAttribute("userDep").toString();
		String userSpceType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
		String gdzldm = com.getGdzldm();
		String xxdm = StandardOperation.getXxdm();

		xbemyStudentInfoDAO xbDao = new xbemyStudentInfoDAO();
		String[] colListCN = null;
		String[] colList = null;
		String tableName = "view_xsjbxx";
		String sql = "";
		List rs = new ArrayList();
		String rsNum = "";

		String xh = com.getXh();
		String xm = DealString.toGBK(com.getXm());
		String nj = com.getNj();
		String xy = com.getXydm();
		String zy = com.getZydm();
		String bj = com.getBjdm();
		String ssda = com.getSsda();
		String ddqkdm = com.getDdqkdm();
		String sftj = DealString.toGBK(request.getParameter("sftj"));

		com.setXm(xm);	

		nj = (nj == null) ? "" : nj;
		xy = (xy == null) ? "" : xy;
		zy = (zy == null) ? "" : zy;
		bj = (bj == null) ? "" : bj;
		String bjKey = xy + "!!" + zy + "!!" + nj;

		if (userSpceType.equalsIgnoreCase("xy")
				&& (xy == null || xy.equalsIgnoreCase(""))) {
			xy = userDep;
			com.setXydm(xy);
			disabled = false;
		}

		if(userSpceType.equalsIgnoreCase("stu")){
			xh = userName;
			com.setXh(xh);
		}

		StringBuffer querry = new StringBuffer(" where 1=1");
		querry.append(xy == null || "".equalsIgnoreCase(xy) ? "" : " and xydm='" + xy + "' ");
		querry.append(nj == null || "".equalsIgnoreCase(nj) ? "" : " and nj='" + nj + "' ");
		querry.append(zy == null || "".equalsIgnoreCase(zy) ? "" : " and zydm='" + zy + "' ");
		querry.append(bj == null || "".equalsIgnoreCase(bj) ? "" : " and bjdm='" + bj + "' ");
		querry.append(sftj == null || "".equalsIgnoreCase(sftj) ? "" : " and sftj='" + sftj + "' ");
		querry.append(gdzldm == null || "".equalsIgnoreCase(gdzldm) ? "" : " and gdzldm='" + gdzldm + "' ");
		querry.append(xh == null || "".equalsIgnoreCase(xh) ? "" : " and xh ='" + xh + "' ");
		querry.append(xm == null || "".equalsIgnoreCase(xm) ? "" : " and xm like'%" + xm + "%' ");
		if(xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)){
			//西北二民院
			querry.append((ssda != null && !"".equalsIgnoreCase(ssda)) && (ddqkdm != null && !"".equalsIgnoreCase(ddqkdm)) ? " and " + ssda + "='" + ddqkdm + "'" : "");
			querry.append((ssda == null) || "".equalsIgnoreCase(ssda) && (ddqkdm != null && !"".equalsIgnoreCase(ddqkdm)) ? 
					" and rxddqkdm='" + ddqkdm + "' and zxddqkdm='" +  ddqkdm + "' and byddqkdm='" + ddqkdm + "'" : "");
		}

		// 高级查询
		SearchService searchService = new SearchService();
		String searchTjByUser = searchService.getSearchTjByUser(request, "a", "xydm", "bjdm");

		String searchTj = SearchService.getSearchTj(com.getSearchModel());
		String[] inputV = SearchService.getTjInput(com.getSearchModel());
		
		querry.append(searchTj);
		querry.append(searchTjByUser);
		
		int start = com.getPages().getStart();
		int step = com.getPages().getStart()+com.getPages().getPageSize();
		colList = new String[]{ "xh", "xm", "xb", "xymc", "zymc", "bjmc"};			
		sql = StringUtils.joinStr("select * from (select rownum r,xh,xm,xb,xymc,zymc,bjmc from ",
				                  tableName,
				                  querry.toString(),
				                  ") where r>",
				                  String.valueOf(start),
				                  " and r<=",
				                  String.valueOf(step));
		String countSql = StringUtils.joinStr("select count(*)num from ",
				                              tableName,
				                              " a ",
				                              querry.toString());
		if (xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)) {
			// 西北二民院
			tableName = "view_xbemy_xsdaxx";
			colList = new String[]{ "xh", "xm", "xb", "xymc", "zymc", "bjmc", "rxddqkmc", "zxddqkmc", "byddqkmc" };
			sql = StringUtils.joinStr("select * from (select rownum r, xh,xm,xb,xymc,zymc,bjmc,rxddqkmc,zxddqkmc,byddqkmc from ",
					                  tableName,
					                  querry.toString(),
					                  ") where r>",
					                  String.valueOf(start),
					                  " and r<=",
					                  String.valueOf(step));
			countSql = StringUtils.joinStr("select count(*)num from ",
                    tableName,
                    " a ",
                    querry.toString());
		}

		colListCN = dao.getColumnNameCN(colList, tableName);
		List topTr = dao.arrayToList(colList, colListCN);

		if ((request.getParameter("go") != null)
				&& request.getParameter("go").equalsIgnoreCase("go")) {
			rs.addAll(dao.rsToVator(sql, inputV, colList));
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
			com.getPages().setMaxRecord(Integer.parseInt(dao.getOneRs(countSql, inputV, "num")));
			
			request.setAttribute("searchTj", com.getSearchModel());
		}else {
			com.getPages().setMaxPage(1);
			com.getPages().setMaxRecord(0);
		}

		sql = "select distinct gdzldm,zlbmc gdzlmc from stu_gdzlb";
		List zlList = dao.getList(sql, new String[] {}, new String[] { "gdzldm", "gdzlmc" });

		request.setAttribute("ddqkList", xbDao.getDDqkList());
		request.setAttribute("zlList", zlList);
		request.setAttribute("userSpecType", userSpceType);
		request.setAttribute("disabled", disabled);
		request.setAttribute("njList", Base.getNjList());// 发送年级列表
		request.setAttribute("xyList", Base.getXyList());// 发送学院列表
		request.setAttribute("zyList", Base.getZyMap().get(xy));// 发送专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));// 发送专业列表
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		return mapping.findForward("datumquerry");
	}

	/**
	 * 查看资料详细信息
	 */
	public ActionForward showDetailsInfoOfDatum(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String xxdm = StandardOperation.getXxdm();
		DAO dao = DAO.getInstance();
		String sql = "";
		String ytjzlmc = "";
		String wtjzlmc = "";
		String tableName = "";
		String[] zl = null;

		String xh = request.getParameter("xh");

		HashMap<String, String> map = new HashMap<String, String>();
		String[] input = { "xh", "xm", "xb", "nj", "xz", "xymc", "zymc", "bjmc" };
		sql = "select xh,xm,xb,nj,xz,xymc,zymc,bjmc from view_xsjbxx where xh=?";
		map = dao.getMap(sql, new String[] { xh }, input);

		if (xxdm.equalsIgnoreCase(Globals.XXDM_XBEMY)) {
			// 西北二民院
			tableName = "view_xbemy_dazlb";

			// 入学档案
			sql = "select mzmc,syd, daqk,bz from view_xbemy_rxdab where xh=?";
			input = new String[] { "mzmc", "syd", "daqk", "bz" };
			String[] value = dao.getOneRs(sql, new String[] { xh }, input);
			if (value != null && value.length > 0) {
				for (int i = 0; i < value.length; i++) {
					map.put(input[i], value[i]);
				}
			}
			// 在校档案资料
			sql = "select distinct zlmc,zlzs from " + tableName + " where xh=?";
			List rs = dao.rsToVator(sql, new String[] { xh }, new String[] {"zlmc", "zlzs" });
			request.setAttribute("zlList", rs);

			// 毕业档案
			sql = "select pqdwmc,ffsj,pqzbh,qdrxm,bz from view_xbemy_bydab where xh=?";
			input = new String[] { "pqdwmc", "ffsj", "pqzbh", "qdrxm", "bz" };
			value = dao.getOneRs(sql, new String[] { xh }, input);
			if (value != null && value.length > 0) {
				for (int i = 0; i < value.length; i++) {
					map.put(input[i], value[i]);
				}
			}
		} else {
			sql = "select a.zlbmc zlbmc from stu_gdzlb a where exists(select b.gdzldm from gdzltjb b where a.gdzldm=b.gdzldm and b.sftj='已经提交' and b.xh=?)";
			zl = dao.getArray(sql, new String[] { xh }, "zlbmc");
			for (int i = 0; i < zl.length; i++) {
				ytjzlmc += (i == zl.length - 1) ? zl[i] : zl[i] + ",";
			}
			sql = "select a.zlbmc zlbmc from stu_gdzlb a where not exists(select b.gdzldm from gdzltjb b where a.gdzldm=b.gdzldm and b.sftj='已经提交' and b.xh=?)";
			zl = dao.getArray(sql, new String[] { xh }, "zlbmc");
			for (int i = 0; i < zl.length; i++) {
				wtjzlmc += (i == zl.length - 1) ? zl[i] : zl[i] + ",";
			}
			map.put("ytjzlmc", ytjzlmc);
			map.put("wtjzlmc", wtjzlmc);
		}
		request.setAttribute("rs", map);
		return mapping.findForward("details_info_datum");
	}

	/**
	 * 毕业生转档申请
	 */
	public ActionForward gradArchivesApply(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DAO dao = DAO.getInstance();
		StudentInfoForm arApply = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		boolean flag = false;
		HashMap<String, String> rs = new HashMap<String, String>();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName").toString();
		String writeAble = Base.getWriteAble(request);
		String xh = arApply.getXh();
		String xydm = request.getParameter("xydm");
		String zydm = request.getParameter("zydm");
		String bjdm = request.getParameter("bjdm");
		String nj = arApply.getNj();
		String hkssqx = DealString.toGBK(request.getParameter("hkssqx"));
		String hkssjd = DealString.toGBK(request.getParameter("hkssjd"));
		String hkxxdz = DealString.toGBK(request.getParameter("hkxxdz"));
		String rxsj = request.getParameter("rxsj");
		String bysj = request.getParameter("bysj");
		String sqly = DealString.toGBK(request.getParameter("sqly"));
		String lxfs = DealString.toGBK(request.getParameter("lxfs"));

		arApply.setXh(xh);
		arApply.setHkssqx(hkssqx);
		arApply.setHkssjd(hkssjd);
		arApply.setHkxxdz(hkxxdz);
		arApply.setRxsj(rxsj);
		arApply.setBysj(bysj);
		arApply.setSqly(sqly);

		String doType = request.getParameter("doType");
		writeAble = CheckPower.checkUsrPageAccessPower(userOnLine, userName,"stu_archives_apply.do") ? "yes" : "no";

		if (userOnLine.equalsIgnoreCase("student")) {
			xh = userName;
		}

		// 判断是否是毕业两年内的毕业生
		if (xh != null && !xh.equalsIgnoreCase("")) {
			StuInfoDAO stuDao = new StuInfoDAO();
			if (stuDao.getGraduateNum(xh) <= 0 || stuDao.getGraduateNum(xh) >= 2) {
				request.setAttribute("isBys", "no");
				return mapping.findForward("gradarchivesapply");
			}
		}
		if (doType != null && doType.equalsIgnoreCase("save")) {
			HashMap<String, String> map = new HashMap<String, String>();
			String sql = "select xymc,zymc,bjmc,xm,xb,nj,to_char(sysdate,'yyyy-mm-dd')sqrq from view_xsjbxx where xh=?";
			map = dao.getMap(sql, new String[]{xh}, new String[]{"xymc","zymc","bjmc","xm","xb","nj","sqrq"});
			String sqrq = map.get("sqrq");
			String xymc = map.get("xymc");
			String zymc = map.get("zymc");
			String bjmc = map.get("bjmc");
			String xm = map.get("xm");
//			String xb = map.get("xb");
			nj = map.get("nj");

			arApply.setBjmc(bjmc);
			arApply.setZymc(zymc);
			arApply.setXymc(xymc);
			arApply.setBjmc(bjmc);
			arApply.setNj(nj);
			arApply.setXm(xm);

			flag = StandardOperation.delete("bysdasqb", "xh", xh, request);
			if (flag) {
				flag = StandardOperation.insert("bysdasqb", new String[] {
						"xh", "xm", "xydm", "xymc", "zydm", "zymc", "bjdm",
						"bjmc", "nj", "sqrq", "rxsj", "bysj", "hkssqx",
						"hkssjd", "hkxxdz", "sqly", "lxfs" }, new String[] {
						xh, xm, xydm, xymc, zydm, zymc, bjdm, bjmc, nj, sqrq,
						rxsj, bysj, hkssqx, hkssjd, hkxxdz, sqly, lxfs },
						request);
			}
			request.setAttribute("result", flag);
			request.setAttribute("rs", new ShgcForm());
		}
		request.setAttribute("rs", arApply);
		if (doType != null && doType.equalsIgnoreCase("view")) {
			xh = (xh == null || xh.equalsIgnoreCase("")) ? "" : xh.trim();
			String sql = "select a.xh,a.rxsj,a.bysj,a.sqrq,a.lxfs,a.hkssqx,a.hkssjd,a.hkxxdz,a.sqly,a.xysh,a.xxsh,a.bz," + 
			"(select b.xm from view_xsjbxx b where a.xh=b.xh)xm,(select b.xb from view_xsjbxx b where a.xh=b.xh)xb," + 
			"(select b.nj from view_xsjbxx b where a.xh=b.xh)nj,(select b.xz from view_xsjbxx b where a.xh=b.xh)xz," + 
			"(select b.xydm from view_xsjbxx b where a.xh=b.xh)xydm,(select b.zydm from view_xsjbxx b where a.xh=b.xh)zydm," + 
			"(select b.bjdm from view_xsjbxx b where a.xh=b.xh)bjdm,(select b.xymc from view_xsjbxx b where a.xh=b.xh)xymc," + 
			"(select b.zymc from view_xsjbxx b where a.xh=b.xh)zymc,(select b.bjmc from view_xsjbxx b where a.xh=b.xh)bjmc " +  
			" from bysdasqb a where xh=?";
			rs = dao.getMap(sql, new String[] { xh }, new String[] { "xh",
					"xm", "rxsj", "bysj", "sqrq", "xymc", "zymc", "bjmc", "nj",
					"hkssqx", "hkssjd", "hkxxdz", "lxfs", "sqly" });
			request.setAttribute("rs", rs);
		}
		if (doType == null || doType.equalsIgnoreCase("")) {
			request.setAttribute("rs", arApply);
		}
		xydm = xydm == null ? "" : xydm;
		zydm = zydm == null ? "" : zydm;
		nj = nj == null ? "" : nj;
		String bjStr = xydm + "!!" + zydm + "!!" + nj;
		request.setAttribute("xh", xh);		
		request.setAttribute("njList", Base.getNjList());
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjStr));
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("gradarchivesapply");
	}

	/**
	 * 毕业生转档申请报表打印
	 */

	public ActionForward printBysArchivesApp(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DAO dao = DAO.getInstance();
		HashMap<String, String> map = new HashMap<String, String>();
		String sql = "select xymc,zymc,bjmc,xm,xb,nj,to_char(sysdate,'yyyy-mm-dd')sqrq from view_xsjbxx where xh=?";
		map = dao.getMap(sql, new String[]{request.getParameter("xh")}, new String[]{"xymc","zymc","bjmc","nj","xm","xb","sqrq"});

		String[] val = { "xh", "rxsj", "bysj", "hkssqx", "hkssjd", "hkxxdz", "lxfs", "sqly" };
		for (int i = 0; i < val.length; i++) {
			map.put(val[i], DealString.toGBK(request.getParameter(val[i])));
		}
		request.setAttribute("rs", map);
		return mapping.findForward("print_bys_report");
	}

	/**
	 * 毕业生转档申请结果查询
	 */
	@SuppressWarnings("unchecked")
	public ActionForward gradArchivesQuerry(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		DAO dao = DAO.getInstance();
		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();
		String userDep = session.getAttribute("userDep").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userType = dao.getUserType(userDep);
		String go = request.getParameter("go");
//		String writeAble = Base.getWriteAble(request);
		boolean flag = false;
		//String tableName = "bysdasqb";
		String doType = request.getParameter("doType");
		String sql = "";
		List rs = new ArrayList();
		String[] input = { "xh", "xm", "rxsj", "bysj", "sqrq", "xysh", "xxsh" };
		String[] colnumCN = dao.getColumnNameCN(input, "bysdasqb");
		String rsNum = "";
		List topTr = dao.arrayToList(input, colnumCN);

		String xh = stuForm.getXh();
		String xm = DealString.toGBK(stuForm.getXm());
		String xydm = stuForm.getXydm();
		String zydm = stuForm.getZydm();
		String bjdm = stuForm.getBjdm();
		String nj = stuForm.getNj();

		if ("student".equalsIgnoreCase(userOnLine)) {
			xh = userName;
			go = "go";
		}
		if (userType != null && userType.equalsIgnoreCase("xy")) {
			xydm = userDep;
			stuForm.setXydm(xydm);
		}

		xydm = xydm == null ? "" : xydm;
		zydm = zydm == null ? "" : zydm;
		nj = nj == null ? "" : nj;
		String bjStr = xydm + "!!" + zydm + "!!" + nj; 

		StringBuffer sb = new StringBuffer(" where 1=1 ");
		sb.append(xh == null || "".equalsIgnoreCase(xh) ? "" : " and a.xh='" + xh + "' ");
		sb.append(xm == null || "".equalsIgnoreCase(xm) ? "" : " and exists(select 1 from view_xsjbxx b where a.xh=b.xh and a.xm='" + xm + "')");
		sb.append(xydm == null || "".equalsIgnoreCase(xydm) ? "" : " and exists(select 1 from view_xsjbxx b where a.xh=b.xh and a.xydm='" + xydm + "') ");
		sb.append(zydm == null || "".equalsIgnoreCase(zydm) ? "" : " and exists(select 1 from view_xsjbxx b where a.xh=b.xh and a.zydm='" + zydm + "') ");
		sb.append(bjdm == null || "".equalsIgnoreCase(bjdm) ? "" : " and exists(select 1 from view_xsjbxx b where a.xh=b.xh and a.bjdm='" + bjdm + "') ");

//		sql = "select xh, xm, rxsj, bysj, sqrq, xysh,xxsh from " + tableName + sb;
		sql = "select * from (select a.xh,a.rxsj,a.bysj,a.sqrq,a.lxfs,a.hkssqx,a.hkssjd,a.hkxxdz,a.sqly,a.xysh,a.xxsh,a.bz," + 
		"(select b.xm from view_xsjbxx b where a.xh=b.xh)xm,(select b.xb from view_xsjbxx b where a.xh=b.xh)xb," + 
		"(select b.nj from view_xsjbxx b where a.xh=b.xh)nj,(select b.xz from view_xsjbxx b where a.xh=b.xh)xz," + 
		"(select b.xydm from view_xsjbxx b where a.xh=b.xh)xydm,(select b.zydm from view_xsjbxx b where a.xh=b.xh)zydm," + 
		"(select b.bjdm from view_xsjbxx b where a.xh=b.xh)bjdm,(select b.xymc from view_xsjbxx b where a.xh=b.xh)xymc," + 
		"(select b.zymc from view_xsjbxx b where a.xh=b.xh)zymc,(select b.bjmc from view_xsjbxx b where a.xh=b.xh)bjmc " +  
		" from bysdasqb a ) a" + sb.toString();

		if (go != null && go.equalsIgnoreCase("go")) {
			rs.addAll(dao.rsToVator(sql, new String[] {}, input));
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}
		if (doType != null && doType.equalsIgnoreCase("del")) {
			xh = (xh == null || xh.equalsIgnoreCase("")) ? "" : xh.trim();
			flag = StandardOperation.delete("bysdasqb", "xh", xh, request);
			request.setAttribute("result", flag);
		}
		request.setAttribute("writeAble", "yes");
		request.setAttribute("topTr", topTr);
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("rs", rs);
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjStr));
		return mapping.findForward("grad_apply_querry");
	}

	/**
	 * 毕业生转档申请审核
	 */
	@SuppressWarnings("unchecked")
	public ActionForward gradArchivesAuding(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		DAO dao = DAO.getInstance();
		String writeAble = "no";
		boolean flag = false;
		String doType = request.getParameter("doType");
		String sql = "";
		List rs = new ArrayList();
		HashMap<String, String> map = new HashMap<String, String>();
		String[] input = { "bgcolor", "xh", "xm", "rxsj", "bysj", "sqrq", "xxsh" };
		String[] colnumCN = dao.getColumnNameCN(input, "bysdasqb");
		String rsNum = "";
		List topTr = dao.arrayToList(input, colnumCN);

		String xh = stuForm.getXh();
		String xm = DealString.toGBK(stuForm.getXm());
		String xydm = stuForm.getXydm();
		String zydm = stuForm.getZydm();
		String bjdm = stuForm.getBjdm();
		String nj = stuForm.getNj();

		String userDep = session.getAttribute("userDep").toString();
		String userType = dao.getUserType(userDep);
		String userName = session.getAttribute("userName").toString();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String go = request.getParameter("go");

		if ("student".equalsIgnoreCase(userOnLine)) {
			xh = userName;
		}
		if (userType != null && userType.equalsIgnoreCase("xy")) {
			xydm = userDep;
			stuForm.setXydm(xydm);
		}

		StringBuffer sb = new StringBuffer(" where 1=1 ");
		sb.append(xh == null || "".equalsIgnoreCase(xh) ? "" : " and xh='" + xh + "' ");
		sb.append(xm == null || "".equalsIgnoreCase(xm) ? "" : " and xm='" + xm + "' ");
		sb.append(xydm == null || "".equalsIgnoreCase(xydm) ? "" : " and xydm='" + xydm + "' ");
		sb.append(zydm == null || "".equalsIgnoreCase(zydm) ? "" : " and zydm='" + zydm + "' ");
		sb.append(bjdm == null || "".equalsIgnoreCase(bjdm) ? "" : " and bjdm='" + bjdm + "' ");

		if (doType != null && doType.equalsIgnoreCase("view")) {
			xh = (xh == null || xh.equalsIgnoreCase("")) ? "" : xh.trim();
			sql = "select a.xh,a.rxsj,a.bysj,a.sqrq,a.lxfs,a.hkssqx,a.hkssjd,a.hkxxdz,a.sqly,a.xysh,a.xxsh yesNo,a.bz," + 
			"(select b.xm from view_xsjbxx b where a.xh=b.xh)xm,(select b.xb from view_xsjbxx b where a.xh=b.xh)xb," + 
			"(select b.nj from view_xsjbxx b where a.xh=b.xh)nj,(select b.xz from view_xsjbxx b where a.xh=b.xh)xz," + 
			"(select b.xydm from view_xsjbxx b where a.xh=b.xh)xydm,(select b.zydm from view_xsjbxx b where a.xh=b.xh)zydm," + 
			"(select b.bjdm from view_xsjbxx b where a.xh=b.xh)bjdm,(select b.xymc from view_xsjbxx b where a.xh=b.xh)xymc," + 
			"(select b.zymc from view_xsjbxx b where a.xh=b.xh)zymc,(select b.bjmc from view_xsjbxx b where a.xh=b.xh)bjmc " +  
			" from bysdasqb a where xh=?" ;

			map = dao.getMap(sql, new String[] { xh }, new String[] { "xh",
					"xm", "xymc", "zymc", "bjmc", "nj","hkssqx", "hkssjd", "hkxxdz",
					"rxsj", "bysj", "sqrq", "sqly", "lxfs", "bz", "yesNo" });
			request.setAttribute("rs", map);
			request.setAttribute("path", "stuArchives.do?method=distributeExaPage");
			FormModleCommon.commonRequestSet(request);
			return mapping.findForward("grad_auditing");
		}
		if (doType != null && doType.equalsIgnoreCase("auditing")) {
			xh = (xh == null || xh.equalsIgnoreCase("")) ? "" : xh.trim();
			String yesNo = DealString.toGBK(request.getParameter("yesNo"));
			String bz = DealString.toGBK(request.getParameter("bz"));

			flag = StandardOperation.update("bysdasqb", new String[] { "xxsh", "bz" }, new String[] { yesNo, bz }, "xh", xh, request);
			go = "go";
			request.setAttribute("result", flag);
			request.setAttribute("rs", new HashMap<String, String>());
			return mapping.findForward("grad_auditing");
		}

		sql = "select * from (select (case nvl(a.xxsh,'未审核') when '已通过' then '#99CCFF' when '未审核' then '#ffffff' else '#FF9999' end) bgcolor, a.xh,a.rxsj,a.bysj,a.sqrq,a.lxfs,a.hkssqx,a.hkssjd,a.hkxxdz,a.sqly,a.xysh,a.xxsh,a.bz," + 
		"(select b.xm from view_xsjbxx b where a.xh=b.xh)xm,(select b.xb from view_xsjbxx b where a.xh=b.xh)xb," + 
		"(select b.nj from view_xsjbxx b where a.xh=b.xh)nj,(select b.xz from view_xsjbxx b where a.xh=b.xh)xz," + 
		"(select b.xydm from view_xsjbxx b where a.xh=b.xh)xydm,(select b.zydm from view_xsjbxx b where a.xh=b.xh)zydm," + 
		"(select b.bjdm from view_xsjbxx b where a.xh=b.xh)bjdm,(select b.xymc from view_xsjbxx b where a.xh=b.xh)xymc," + 
		"(select b.zymc from view_xsjbxx b where a.xh=b.xh)zymc,(select b.bjmc from view_xsjbxx b where a.xh=b.xh)bjmc " +  
		" from bysdasqb a ) a" + sb.toString() ;

		if (go != null && go.equalsIgnoreCase("go")) {
			rs.addAll(dao.rsToVator(sql, new String[] {}, input));			
		}
		xydm = xydm == null ? "" : xydm;
		zydm = zydm == null ? "" : zydm;
		nj = nj == null ? "" : nj;
		String bjStr = xydm + "!!" + zydm + "!!" + nj;

		request.setAttribute("writeAble", writeAble);
		request.setAttribute("pageSize", stuForm.getPages().getPageSize());
		request.setAttribute("topTr", topTr);
		request.setAttribute("rsNum", rs == null ? 0 : rs.size());
		request.setAttribute("rs", rs);
		request.setAttribute("issh", "sh");
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjStr));
		return mapping.findForward("grad_apply_querry");
	}

	/**
	 * 文件发放管理
	 */
	public ActionForward fileRecode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		String writeAble = Base.getWriteAble(request);
		DAO dao = DAO.getInstance();
		List rs = new ArrayList();
		String[] outputValue = null;

		String sql = "";
		String tableName = "view_cgtxwjb";

		String userDep = session.getAttribute("userDep").toString();
		String userType = dao.getUserType(userDep);// 用户类型检测学院用户

		String xydm = stuForm.getXydm();
		String xh = stuForm.getXh();
		String xm = DealString.toGBK(stuForm.getXm());
		String wjh = DealString.toGBK(stuForm.getWjh());
		String lrrq = stuForm.getLrrq();
		String nd = stuForm.getNd();
		String wjlx = DealString.toGBK(stuForm.getWjlx());

		stuForm.setXm(xm);
		stuForm.setWjh(wjh);
		stuForm.setWjlx(wjlx);
		if (userType.equalsIgnoreCase("xy")) {
			xydm = userDep;
			stuForm.setXydm(xydm);
		}

		StringBuffer querry = new StringBuffer();
		querry.append(" where 1=1 ");
		querry.append(xydm == null || "".equalsIgnoreCase(xydm) ? "": " and xydm='" + xydm + "' ");
		querry.append(nd == null || "".equalsIgnoreCase(nd) ? "" : " and nd='" + nd + "' ");
		querry.append(wjh == null || "".equalsIgnoreCase(wjh) ? "" : " and wjh='" + wjh + "' ");
		querry.append(xh == null || "".equalsIgnoreCase(xh) ? "" : " and xh like '%" + xh + "%' ");
		querry.append(xm == null || "".equalsIgnoreCase(xm) ? "" : " and xm like '%" + xm + "%' ");
		querry.append(lrrq == null || "".equalsIgnoreCase(lrrq) ? "" : " and lrrq = '" + lrrq + "'");
		querry.append(wjlx == null || "".equalsIgnoreCase(wjlx) ? "" : " and wjlx = '" + wjlx + "'");

		outputValue = new String[] { "xm", "xymc", "wjh", "lrrq", "wjlx" };
		String[] clonumCN = dao.getColumnNameCN(outputValue, tableName);
		List topTr = dao.arrayToList(outputValue, clonumCN);
		sql = "select xm,xymc,wjh,lrrq,wjlx from " + tableName + querry.toString();

		if ("go".equalsIgnoreCase(request.getParameter("go"))) {
			rs = dao.rsToVator(sql, new String[] {}, outputValue);
		}

		request.setAttribute("writeAble", writeAble);
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("rs", rs);
		request.setAttribute("realTable", "cgtxwjb");
		request.setAttribute("tableName", tableName);
		request.setAttribute("pk", "wjh");
		request.setAttribute("rsNum", rs.size());
		request.setAttribute("topTr", topTr);
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("userType", userType);
		return mapping.findForward("filerecode");

	}

	public ActionForward showFileRecode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
//		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String writeAble = "yes"; // Base.getWriteAble(request);
		HashMap<String, String> rs = new HashMap<String, String>();
		String sql = "";
		String tableName = "view_cgtxwjb";
		String doType = request.getParameter("doType");
		doType = (doType == null || "".equalsIgnoreCase(doType)) ? "" : doType.trim();

		String wjh = request.getParameter("wjh");
		wjh = (wjh == null || wjh.equalsIgnoreCase("")) ? "" : wjh.trim();
		sql = "select wjh,xm,xh,xb,zymc,xymc,bjmc,lrrq,wjlx,nd from " + tableName + " where wjh=?";

		rs = dao.getMap(sql, new String[] { wjh }, new String[] { "wjh", "xm",
				"xh", "xb", "zymc", "xymc", "bjmc", "lrrq", "wjlx", "nd" });

		if (rs == null) {
			rs = new HashMap<String, String>();
		}

		request.setAttribute("rs", rs);
		request.setAttribute("doType", doType);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("ndList", Base.getXnndList());
		return mapping.findForward("showfilerecode");
	}

	public ActionForward saveFileRecode(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String writeAble = Base.getWriteAble(request);
		HashMap<String, String> rs = new HashMap<String, String>();
		String sql = "";
		boolean flag = false;
		String tableName = "cgtxwjb";

		String wjh = DealString.toGBK(stuForm.getWjh());
		String xh = stuForm.getXh();
		String lrrq = stuForm.getLrrq();
		String wjlx = DealString.toGBK(stuForm.getWjlx());
		String nd = stuForm.getNd();

		int num = Integer.parseInt(dao.getOneRs("select count(*) num from "
				+ tableName + " where wjh=?", new String[] { wjh }, "num"));
		if (num > 0) {
			flag = StandardOperation.update(tableName, new String[] { "xh",
					"lrrq", "wjlx", "nd" },
					new String[] { xh, lrrq, wjlx, nd }, "wjh", wjh, request);
		} else {
			flag = StandardOperation.insert(tableName, new String[] { "wjh",
					"xh", "lrrq", "wjlx", "nd" }, new String[] { wjh, xh, lrrq,
					wjlx, nd }, request);
		}

		sql = "select wjh,xm,xh,xb,zymc,xymc,bjmc,lrrq,wjlx from view_cgtxwjb where wjh=?";
		rs = dao.getMap(sql, new String[] { wjh }, new String[] { "wjh", "xm",
				"xh", "xb", "zymc", "xymc", "bjmc", "lrrq", "wjlx" });

		request.setAttribute("result", flag);
		request.setAttribute("rs", rs);
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("showfilerecode");
	}

	public ActionForward deleteFileRecode(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		StudentInfoForm stuForm = (StudentInfoForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);
		DAO dao = DAO.getInstance();
		String userType = dao.getUserType(session.getAttribute("userDep").toString());
		String writeAble = Base.getWriteAble(request);
		stuForm.setWjh("");
		List rs = new ArrayList();
		String tableName = "cgtxwjb";
		boolean flag = false;

		String wjh = request.getParameter("wjh");
		wjh = (wjh == null || wjh.equalsIgnoreCase("")) ? "" : wjh.trim();

		flag = StandardOperation.delete(tableName, "wjh", wjh, request);

		request.setAttribute("writeAble", writeAble);
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("rs", rs);
		request.setAttribute("realTable", "cgtxwjb");
		request.setAttribute("tableName", tableName);
		request.setAttribute("pk", "wjh");
		request.setAttribute("rsNum", rs.size());
		request.setAttribute("topTr", new String[] {});
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("userType", userType);
		request.setAttribute("result", flag);
		return mapping.findForward("filerecode");

	}

	/**
	 * 白云学院退学审批表打印
	 */
	public ActionForward printLeaveSchoolReportOfByxy(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HashMap<String, String> map = new HashMap<String, String>();
		DAO dao = DAO.getInstance();
		String xh = request.getParameter("xh");
		xh = (xh == null && xh.equalsIgnoreCase("")) ? "" : xh.trim();
		String sql = "";
		String nd = "";
		nd = Base.currNd;

		sql = "select xh,xm,xb,bjmc,jg,lxdh,ssbh,(" + nd + "-(substr(csrq,0,4))) nl from view_xsxxb where xh=?";
		map = dao.getMap(sql, new String[] { xh }, new String[] { "xm", "xb", "bjmc", "jg", "lxdh", "ssbh" });

		request.setAttribute("rs", map);
		return mapping.findForward("printbyxy");
	}

	/**
	 * 北京联合显示批量修改页面
	 */

	public ActionForward showBatchPageOfStuinfo(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String pk = request.getParameter("pk");

		request.setAttribute("pk", pk);
		return mapping.findForward("show_batch_pageofstuinfo");
	}

	/**
	 * 北京联合批量修改保存
	 */
	public ActionForward saveStuinfoBatch(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String pk = DealString.toGBK(request.getParameter("pk"));
		String sfzfx = DealString.toGBK(request.getParameter("sfzfx"));
		DAO dao = DAO.getInstance();
		boolean flag = false;
		String sql = "";
		String[] pkV = pk.split("!!");
		if (pkV.length > 0) {
			for (int i = 0; i < pkV.length; i++) {
				String xh = pkV[i];
				sql = "select count(*) num from xsxxb where xh=?";
				int num = Integer.parseInt(dao.getOneRs(sql,
						new String[] { xh }, "num"));
				if (num > 0) {
					// update
					flag = StandardOperation.update("xsxxb",
							new String[] { "sfzfx" }, new String[] { sfzfx },
							"xh", xh, request);
				} else {
					// insert
					if (xh != null && !xh.equalsIgnoreCase("")) {
						String[] columns = { "xh", "xm", "xb", "xydm", "xy",
								"zydm", "zymc", "bjdm", "bjmc", "nj", "xz" };
						String[] values = null;
						sql = "select xh,xm,xb,xydm,xymc,zydm,zymc,bjdm,bjmc,nj,xz from view_xsjbxx where xh=?";
						HashMap<String, String> map = dao.getMap(sql,
								new String[] { xh }, columns);
						columns = new String[] { "xh", "xm", "xb", "xydm",
								"xy", "zydm", "zymc", "bjdm", "bjmc", "nj",
								"xz", "sfzfx" };
						values = new String[] { map.get("xh"), map.get("xm"),
								map.get("xb"), map.get("xydm"),
								map.get("xymc"), map.get("zydm"),
								map.get("zymc"), map.get("bjdm"),
								map.get("bjmc"), map.get("nj"), map.get("xz"),
								sfzfx };
						flag = StandardOperation.insert("xsxxb", columns,
								values, request);
					}
				}
			}
		}
		request.setAttribute("result", flag);
		request.setAttribute("pk", pk);
		return mapping.findForward("show_batch_pageofstuinfo");
	}

	/**
	 * 杭职院将学生批量转换成毕业生
	 */
	public ActionForward SaveBatchOfGraduate(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String pk = DealString.toGBK(request.getParameter("delPk"));
		StudentInfoService service = new StudentInfoService();
		DAO dao = DAO.getInstance();
		boolean flag = false;
		String sql = "";
		String[] pkV = pk.split("!!");

		for (int i = 0; i < pkV.length; i++) {
			String xh = pkV[i];
			sql = "select count(*) num from xsxxb where xh=?";
			int num = Integer.parseInt(dao.getOneRs(sql, new String[] { xh }, "num"));
			if (num < 1) {
				sql = "insert into xsxxb(xh,xm,xb,xydm,xy,zydm,zymc,bjdm,bjmc,nj,xz)(select xh,xm,xb,xydm,xymc,zydm,zymc,bjdm,bjmc,nj,xz from view_xsjbxx where xh='" + xh + "')";
				flag = StandardOperation.update("xsxxb", sql, request);
			}
			flag = StandardOperation.update("xsxxb", new String[] { "sfyby", "sfzx" },
					new String[] { "是", "不在校" }, "xh", xh, request);
		}
		//将没有未毕业学生的班级删除，然后插入到毕业生班级中
		flag = service.checkGraduateToFinish(request);
		request.setAttribute("result", flag);
		return new ActionForward("/stu_info_query.do?method=stuInfo");
	}

//	/**
//	* 上海工程增加毕业年月初始化
//	*/
//	public ActionForward dataConf(ActionMapping mapping, ActionForm form,
//	HttpServletRequest request, HttpServletResponse response)
//	throws Exception {
//	String doType = request.getParameter("doType");
//	boolean flag = false;
//	String sql = "";
//	sql = "insert into xsxxb(xh,xm,xb,xz,nj,xy,xydm,zymc,zydm,bjmc,bjdm) (select a.xh,a.xm,a.xb,a.xz,a.nj,a.xymc,a.xydm,a.zymc,a.zydm,a.bjmc,a.bjdm from view_xsjbxx a where not exists(select b.xh from xsxxb b where a.xh=b.xh))";
//	flag = StandardOperation.update("xsxxb", sql, request);
//	if (doType != null && doType.equalsIgnoreCase("automatism")) {
//	// 自动计算
//	// sql = "drop table tmp_bynyxxb";
//	sql = "create table tmp_bynyxxb as select xh,rxrq,xz from view_xsxxb";
//	flag = StandardOperation.update("", sql, request);
//	sql = "update xsxxb set byny = (select to_number(substr(rxrq,0,4))+to_number(xz) from tmp_bynyxxb group by xh,rxrq,xz)";
//	flag = StandardOperation.update("xsxxb", sql, request);
//	sql = "drop table tmp_bynyxxb";
//	flag = StandardOperation.update("", sql, request);
//	request.setAttribute("result", flag);
//	}
//	if (doType != null && doType.equalsIgnoreCase("manual")) {
//	// 手动计算
//	String byny = DealString.toGBK(request.getParameter("byny"));
//	sql = "update xsxxb set byny='" + byny + "'";
//	flag = StandardOperation.update("xsxxb", sql, request);
//	request.setAttribute("result", flag);
//	}
//	return mapping.findForward("dataconf");
//	}

//	public ActionForward printLjsApp(ActionMapping mapping, ActionForm form,
//			HttpServletRequest request, HttpServletResponse response)
//	throws Exception {
//		CommanForm commanForm=(CommanForm)form;
//		HashMap<String, String> map = new HashMap<String, String>();
//		DAO dao = DAO.getInstance();
//		String sql = "";
//		String[] param = { "xh", "hkssqx", "hkssjd", "hkxxdz", "lxfs", "zddwmc", "zddwdz", "zddwyb", "sqly" };
//		sql = "select bjmc,zymc,xymc,xm,xb,nj,to_char(sysdate,'yyyy-mm-dd') sqrq from view_xsjbxx where xh=?";
//		map = dao.getMap(sql, new String[]{commanForm.getXh()}, new String[]{"bjmc","zymc","xymc","xm","xb","nj","sqrq"});
//		for (int i = 0; i < param.length; i++) {
//			map.put(param[i], DealString.toGBK(request.getParameter(param[i])));
//		}
//		request.setAttribute("rs", map);
//		return mapping.findForward("print_ljsdasq");
//	}

	/**
	 * 插班申请
	 */
	// public ActionForward savePlugClassApply(ActionMapping mapping, ActionForm
	// form,
	// HttpServletRequest request, HttpServletResponse response)throws Exception
	// {
	// StudentInfoForm stuForm =(StudentInfoForm) form;
	// boolean flag = false;
	// String tableName = "xscbsqb";
	// String writeAble = Base.getWriteAble(request);
	// // HttpSession session = request.getSession();
	// HashMap<String, String> rs = new HashMap<String, String>();
	//			
	// String xm = DealString.toGBK(stuForm.getXm());
	// String xb = DealString.toGBK(stuForm.getXb());
	// String csrq = stuForm.getCsrq();
	// String jtdz = DealString.toGBK(stuForm.getJtdz());
	// String ydxx = DealString.toGBK(stuForm.getYdxx());
	// String ydzy = DealString.toGBK(stuForm.getYdzy());
	// String sxjl = DealString.toGBK(stuForm.getSxjl());
	// String jnzs = DealString.toGBK(stuForm.getJnzs());
	// String xdzy = DealString.toGBK(stuForm.getXdzy());
	// String lxdh = stuForm.getLxdh();
	// String bz = DealString.toGBK(stuForm.getBz());
	// String id =dao.getOneRs("select STU_PLUGCLASS_ID.nextval id from dual ",
	// new String[]{}, "id");
	//			
	// String[] columns =
	// {"id","xm","xb","csrq","jtdz","ydxx","ydzy","sxjl","jnzs","xdzy","lxdh","bz"};
	// String[] values = {id,xm,xb,csrq,jtdz,ydxx,ydzy,sxjl,jnzs,xdzy,lxdh,bz};
	//			
	// flag = StandardOperation.insert(tableName, columns, values, request);
	// rs = dao.getMap("select * from " + tableName + " where id=?", new
	// String[]{id}, columns);
	//			
	// colList = new String[] { "r","行号", "xh", "xm", "xb", "nj",
	// "xz","bjmc","ssbh" };
	// StringBuffer temSql = new StringBuffer();
	// temSql.append("select * from (select * from (select distinct rownum 行号,
	// a.xh, rownum r, a.xm,a.xb,a.nj,a.xz,a.bjmc ,a.ssbh from "+tableName+" a
	// ");
	// temSql.append(querry);
	// temSql.append(") where r<=");
	// temSql.append(dataSearchForm.getPages().getStart()+dataSearchForm.getPages().getPageSize());
	// temSql.append(") where r>");
	// temSql.append(dataSearchForm.getPages().getStart());
	// sql = temSql.toString();
	//			
	// request.setAttribute("do", "no");
	// request.setAttribute("rs", rs);
	// request.setAttribute("writeAble", writeAble);
	// request.setAttribute("result", flag);
	// return mapping.findForward("plugclass");
	// }

	// ////////////////////////////////////////////////////////////////////////////
	// /////////////////////////////////dwr使用的方法////////////////////////////////
	/**
	 * 获取班级代码初始设定规则
	 */
	public List getClassRule() {
		DAO dao = DAO.getInstance();
		String sql = "select * from bjdmgzsz order by scxhsx";
		List ruleList = dao.getList(sql, new String[] {}, new String[] {
				"zdmc", "zdsjcd", "qsw", "ws", "sfbl" });
		return ruleList;
	}

	/**
	 * 获取字段长度
	 */
	public String getLength(String strname) {
		DAO dao = DAO.getInstance();
		String len = "";
		String tabName = "";
		if (strname.equalsIgnoreCase("xydm")) {
			tabName = "xydmb";
		} else if (strname.equalsIgnoreCase("zydm")) {
			tabName = "zydmb";
		} else if (strname.equalsIgnoreCase("xlccdm")) {
			tabName = "xlccdmb";
		} else if (strname.equalsIgnoreCase("xqdm")) {
			strname = "dm";
			tabName = "dm_zju_xq";
		} else if (strname.equalsIgnoreCase("bjdm")) {
			tabName = "bks_bjdm";
		}

		if (strname.equalsIgnoreCase("nj")) {
			len = "4";
		} else if (strname.equalsIgnoreCase("xh")) {
			len = "";
		} else {
			if (!strname.equalsIgnoreCase("")) {
				String sql = "select length(" + strname + ") len from "
				+ tabName;
				len = dao.getOneRs(sql, new String[] {}, "len");
			}
		}
		return len;
	}

	/**
	 * 班级简称初始设定规则
	 */
	public List getClassSimpleNameRule() {
		DAO dao = DAO.getInstance();
		String sql = "select * from bjjcgzszb order by xh";
		List ruleList = dao.getList(sql, new String[] {}, new String[] {
				"zdmc", "qsw", "ws", "sfqb", "cl" });
		return ruleList;
	}

	/**
	 * 班级名称初始设定规则
	 */
	public List getClassNameRule() {
		DAO dao = DAO.getInstance();
		String sql = "select * from bjmcgzszb order by xh";
		List ruleList = dao.getList(sql, new String[] {}, new String[] {
				"zdmc", "qsw", "ws", "sfqb", "cl" });
		return ruleList;
	}

	/**
	 * 学号初始设定规则
	 */

	public List getLearningCodeRule() {
		DAO dao = DAO.getInstance();
		String sql = "select * from xhgzsz order by scxhsx";
		List ruleList = dao.getList(sql, new String[] {}, new String[] {
				"zdsjcd", "zdmc", "qsw", "ws", "sfbl", "qsbh" });
		return ruleList;
	}

	/**
	 * 学号排序顺序规则
	 */
	public List getLearningCodeOrderRule() {
		DAO dao = DAO.getInstance();
		String sql = "select zdmc,pxsx px from xhscpxsz order by xh";
		List ruleList = dao.getList(sql, new String[] {}, new String[] {
				"zdmc", "px" });
		return ruleList;
	}

	/**
	 * 江苏信息职业_新生情况登记 gjzxdksq
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward jsxxXsdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {

		HttpSession session = request.getSession();
		StudentInfoService service = new StudentInfoService();
		String sUserName = session.getAttribute("userName").toString();// SESSION中获取用户名
		String sUserType = session.getAttribute("userType").toString();// SESSION中获取用户类型

		String xh = "";// 学号
		xh = StringUtils.isEqual(sUserType, "stu")
		|| StringUtils.isEqual(sUserType, "student") ? sUserName : Base
				.chgNull(request.getParameter("xh"), "", 1);// 用户类型是学生则直接获取用户名
		HashMap<String, String> stuMap = new HashMap<String, String>();

		if (xh != null && !"".equalsIgnoreCase(xh)) {
			String rxrq = service.getRxrq(xh);
			String nd = Base.currNd;
			if (rxrq != null && !"".equalsIgnoreCase(rxrq)) {
				if (rxrq.length() >= 4) {
					if (nd.equalsIgnoreCase(rxrq.substring(0, 4))) {
						stuMap = service.getStu(xh);// 得到学生信息
					}
				}
			}
		} else {
			stuMap.put("bz", " ");
		}
		request.setAttribute("pk", xh);
		request.setAttribute("userType", sUserType);
		request.setAttribute("rs", stuMap);
		return mapping.findForward("jsxxXsdjb");
	}

	/**
	 * 江苏信息职业_新生情况登记保存 gjzxdksq
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward jsxxXsdjbSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();// SESSION中获取用户名
		String sUserType = session.getAttribute("userType").toString();// SESSION中获取用户类型
		String type = request.getParameter("type");
		String xh = "";// 学号
		xh = StringUtils.isEqual(sUserType, "stu")
		|| StringUtils.isEqual(sUserType, "student") ? userName : Base
				.chgNull(request.getParameter("xh"), "", 1);// 用户类型是学生则直接获取用户名

		StudentInfoService service = new StudentInfoService();
		HashMap<String, String> stuMap = new HashMap<String, String>();
		if ("edit".equalsIgnoreCase(type)) {
			boolean flg = service.jsxxXsdjbSave(xh, request);
			if (flg) {
				request.setAttribute("ok", "ok");
			} else {
				request.setAttribute("ok", "no");
			}
		}
		stuMap = service.getNewStu(xh);

		request.setAttribute("rs", stuMap);
		request.setAttribute("pk", xh);
		request.setAttribute("userType", sUserType);

		return mapping.findForward("jsxxXsdjb");
	}

	/**
	 * 江苏信息职业_新生情况登记表打印 gjzxdksq
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward jsxxXsdjbPrint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {

		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();// SESSION中获取用户名
		String userType = session.getAttribute("userType").toString();// SESSION中获取用户类型
		String type = request.getParameter("type");
		String pk = request.getParameter("pk");

		StudentInfoService service = new StudentInfoService();
		HashMap<String, String> stuMap = new HashMap<String, String>();
		HashMap<String, String> stuInfo = new HashMap<String, String>();

		String xh="";
		xh = StringUtils.isEqual(userType, "stu")
		|| StringUtils.isEqual(userType, "student") ? userName : Base
				.chgNull(request.getParameter("xh"), "", 1);// 用户类型是学生则直接获取用户名

		if (!"nostu".equalsIgnoreCase(type)) {
			String count = service.isNewXs(xh);

			if ("0".equalsIgnoreCase(count)) {
				String msg = "该学生还未提交新生情况登记，请提交后再打印";

				stuMap = service.getStu(xh);// 得到学生信息
				request.setAttribute("msg", msg);
				request.setAttribute("rs", stuMap);
				request.setAttribute("pk", xh);
				request.setAttribute("userType", userType);

				return mapping.findForward("jsxxXsdjb");
			}
		}
		stuMap = service.getNewStu(pk);
		stuInfo = service.getNewStuInfo(pk);
		String txrq = stuMap.get("txrq");
		if (txrq != null) {
			if (txrq.length() == 8) {
				String year = txrq.substring(0, 4);
				String month = txrq.substring(4, 6);
				String day = txrq.substring(6, 8);
				stuMap.put("year", year);
				stuMap.put("month", month);
				stuMap.put("day", day);
				request.setAttribute("xs", "yes");
			} else {
				request.setAttribute("xs", "no");
			}
		}else {
			request.setAttribute("xs", "no");
		}
		
		request.setAttribute("rs", stuMap);
		request.setAttribute("pk", xh);
		request.setAttribute("userType", userType);
		request.setAttribute("stuInfo", stuInfo);

		return mapping.findForward("jsxxXsdjbPrint");
	}
	
	/**
	 * 江苏信息新生登记管理
	 * 
	 * @return ActionForward
	 */
	public ActionForward jsxxXsdjManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();

		String userType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
		String userDep = (String) session.getAttribute("userDep");

		StudentInfoService service = new StudentInfoService();
		CommanForm myForm = (CommanForm) form;

		String title = "学生信息 - 新生情况登记查看";
		String doType = request.getParameter("doType");
		String tableName = "view_jsxx_xsqkdj";
		String realTable = "jsxx_xsqkdjb";
		String[] checkVal = myForm.getCheckVal();
		boolean result = false;

		ArrayList<String[]> rs = new ArrayList<String[]>();
		List<HashMap<String, String>> topTr = null;

		String xydm = myForm.getXydm();
		xydm = Base.isNull(xydm) ? "%" : xydm;
		
		if ("xy".equalsIgnoreCase(userType)) {
			myForm.setXydm(userDep);
		}

		if (!Base.isNull(doType) && "del".equalsIgnoreCase(doType)) {
			if (checkVal != null && checkVal.length > 0) {
				result = service.delNewStuInfo(checkVal);
				request.setAttribute("result", result);
			}
		}

		// 点击查询按钮进行查询
		if (((request.getParameter("go") != null) && request.getParameter("go")
				.equalsIgnoreCase("go"))
				|| result) {
			String[] colList = new String[] { "pk", "xh", "xm", "xb", "xymc",
					"zymc", "bjmc", "rxrq" };

			topTr = SearchUtils.getTopTr(tableName, colList, null);
			rs = service.getNewStuList(tableName, myForm, colList);
		}
		// 存放访问路径求取读写权
		request.setAttribute("path", "stu_info_add.do?method=jsxxXsdjManage");
		request.setAttribute("title", title);
		request.setAttribute("userType", userType);
		request.setAttribute("userName", userName);
		request.setAttribute("userDep", userDep);
		FormModleCommon.setNjXyZyBjList(request);
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request, tableName, realTable, rs,
				topTr);

		return mapping.findForward("jsxxXsdjManage");
	}
	
	/**
	 * 江苏信息新生综合素质情况记录
	 * 
	 * @return ActionForward
	 */
	public ActionForward jsxxXsdjUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		String title = "学生信息 - 学生综合素质情况记载";
		String doType = request.getParameter("doType");
		String pk = request.getParameter("pk");

		StudentInfoService service = new StudentInfoService();
		CommanForm myForm = (CommanForm) form;
		HashMap<String, String> rs = new HashMap<String, String>();
		HashMap<String, String> stuInfo = new HashMap<String, String>();
		//BeanUtils.copyProperties(model, myForm);

		
		if ("update".equalsIgnoreCase(doType)) {
			stuInfo = service.getStuInfo(pk);
			rs = service.getNewStuInfo(pk);
		}
		if ("save".equalsIgnoreCase(doType)) {
			boolean result = service.saveNewStuInfo(myForm);
			request.setAttribute("result", result);
		}
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjList(request);

		request.setAttribute("doType", doType);
		request.setAttribute("title", title);
		request.setAttribute("rs", rs);
		request.setAttribute("stuInfo", stuInfo);

		return mapping.findForward("jsxxXsdjUpdate");
	}

	/**
	 * 江苏信息职业_新生情况登记 gjzxdksq
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward jsxxXsdjbView(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {

		HttpSession session = request.getSession();
		StudentInfoService service = new StudentInfoService();
//		String sUserName = session.getAttribute("userName").toString();// SESSION中获取用户名
		String sUserType = session.getAttribute("userType").toString();// SESSION中获取用户类型

		String xh = request.getParameter("pk");// 学号

		HashMap<String, String> stuMap = service.getNewStu(xh);// 得到学生信息
		HashMap<String, String> stuInfo = service.getNewStuInfo(xh);
		
		request.setAttribute("pk", xh);
		request.setAttribute("userType", sUserType);
		request.setAttribute("rs", stuMap);
		request.setAttribute("stuInfo", stuInfo);
		return mapping.findForward("jsxxXsdjbView");
	}
	
	/**
	 * 浙江机电职业技术学院学生信息报表
	 */
	public  ActionForward zjjd_zjjd_stuTable(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception{
		DAO dao = DAO.getInstance();
		String[] colList = null;
		String[] colListCN = null;
		String sql  = "";// sql语句
		String type = request.getParameter("tableType"); 
		String bjdm = request.getParameter("bjdm");
		String bjmc = dao.getOneRs("select bjmc from view_njxyzybj where bjdm=?", new String[]{bjdm},"bjmc");
		if("zjjd_tableOne".equalsIgnoreCase(type)){
			sql = "select  bjmc,xh,xm,xb,csrq,jtdz,jtdh,(case jtjjqk when '1' then '宽裕'  when '2' then '一般' when '3' then '困难' when '4' then '特困' end  )jtjjqk,xx,nvl(jkzk,'无')jkzk,bz from view_xsxxb where bjdm='"+bjdm+"' order by xh";
			colListCN = new String[]{"班级","学号","姓名","性别","出生日期","家庭地址","家庭电话","家庭经济状况","血型","健康状况","备注"};
			response.reset();
			response.setContentType("application/vnd.ms-excel");
			Excel2Oracle.exportData(sql,colListCN, response.getOutputStream(),bjmc);
		}else{
			response.reset();
			response.setContentType("application/vnd.ms-excel");
			WritableWorkbook wwb = Workbook.createWorkbook(response.getOutputStream());
			WritableSheet ws = wwb.createSheet(bjmc, 0);
			WritableFont wf = new WritableFont(WritableFont.TIMES); // 构造字体格式
			//wf.setPointSize(20);
			WritableCellFormat wcf = new WritableCellFormat(wf); // 构造指定字体格式的单元格格式
			//wcf.setAlignment(Alignment.CENTRE); // 指定格式设置字符左右居中
			//wcf.setVerticalAlignment(VerticalAlignment.CENTRE); // 指定格式设置字符上下居中
			wcf.setWrap(true); // 指定格式设置自动换行					
			
			sql = "select  bjmc,xh,xm,xb,nvl(zw,'无')zw,zzmmmc,nvl((case when '' is null then (select wzdz from gygl_xswzxxb b where xn='"+Base.currXn+"' and xq='"+Base.currXq+"' and b.xh=a.xh) end),'否')sfxwzs, " 
				  +"ssbh,qsdh,sjhm,qqhm,bz,(select count(xh) from wjcfb b where a.xh=b.xh and xxsh='通过')cfjl,(select count(xh) from xsjxjb b where a.xh=b.xh and xxsh='通过')jljl,(select count(xh) from zjjd_zhszcp b where a.xh=b.xh)zcpm, " 
				  +"(select count(xh) from zjjd_zhszcp b where a.xh=b.xh)xqcjpm  from view_xsxxb a where  bjdm='"+bjdm+"' order by xh";
			colList = new String[]{ "bjmc","xh","xm","xb","zw","zzmmmc","sfxwzs","ssbh","qsdh","sjhm","qqhm","bz","cfjl","jljl","zcpm","xqcjpm"};
			colListCN = new String[]{"班级","学号","姓名","性别","职务","政治面貌","是否校外住宿","宿舍编号","寝室电话","手机","QQ","备注","处分记录","奖励记录","综合测评排名","学习成绩排名"};

			List<HashMap<String, String>> jgList = dao.getList(sql, new String[]{},colList);
			for (int i = 0; i < colListCN.length; i++) {
				ws.addCell(new Label(i,0,colListCN[i])); 
			}
			for(int i=0;i<jgList.size();i++){
				for (int b = 0; b < colList.length; b++) {					
					if(b==colList.length-4){//处分记录
						if(!"0".equalsIgnoreCase(jgList.get(i).get(colList[b]))){
							sql = "select max(ltrim(sys_connect_by_path(xn||'('||(select xqmc from xqdzb a where a.xqdm=c.xq )||')'||cflbmc,'、'),'、')) wjjl "
								+"     from (select xn,xq,cflbmc,xh,row_number() over (partition by b.xh order by b.xh) pno, "
								+"     row_number() over (partition by b.xh order by b.xh)-1 sno from view_wjcf b where xh=? and xxsh='通过' "
								+"     ) c  start with pno=1 connect by prior pno=sno   ";						
							ws.addCell(new Label(b,i+1,dao.getOneRs(sql,new String[]{jgList.get(i).get("xh")},"wjjl"),wcf)); 
						}else{
							ws.addCell(new Label(b,i+1,"无",wcf)); 
						}
					}else if(b==colList.length-3){//奖励记录
						if(!"0".equalsIgnoreCase(jgList.get(i).get(colList[b]))){
							sql = "select max(ltrim(sys_connect_by_path(xn||'('||(select xqmc from xqdzb a where a.xqdm=c.xq )||')'||jxjmc,'、'),'、')) jxj "
								+"     from (select xn,xq,jxjmc,xh,row_number() over (partition by b.xh order by b.xh) pno, "
								+"     row_number() over (partition by b.xh order by b.xh)-1 sno from view_xsjxjb b where xh=? and xxsh='通过' "
								+"     ) c  start with pno=1 connect by prior pno=sno ";  
							ws.addCell(new Label(b,i+1,dao.getOneRs(sql,new String[]{jgList.get(i).get("xh")},"jxj"),wcf)); 
						}else{
							ws.addCell(new Label(b,i+1,"无",wcf)); 
						}
					}else if(b==colList.length-2){//综合测评成绩排名记录
						if(!"0".equalsIgnoreCase(jgList.get(i).get(colList[b]))){
							sql = "select max(ltrim(sys_connect_by_path(xn||'('||(select xqmc from xqdzb a where a.xqdm=c.xq )||') 第'||zhszcpcjpm||'名','、'),'、'))zhpm"
								+"     from (select xn,xq,zhszcpcjpm,xh,row_number() over (partition by b.xh order by b.xh) pno,"
								+"     row_number() over (partition by b.xh order by b.xh)-1 sno from view_zjjd_zhszcp b where xh=?"
								+"     ) c  start with pno=1 connect by prior pno=sno ";  
							ws.addCell(new Label(b,i+1,dao.getOneRs(sql,new String[]{jgList.get(i).get("xh")},"zhpm"),wcf)); 
						}else{
							ws.addCell(new Label(b,i+1,"无",wcf)); 
						}
					}else if(b==colList.length-1){//学习成绩排名记录
						if(!"0".equalsIgnoreCase(jgList.get(i).get(colList[b]))){
							sql = "select max(ltrim(sys_connect_by_path(xn||'('||(select xqmc from xqdzb a where a.xqdm=c.xq )||') 第'||pjcjmc||'名','、'),'、'))pjcjmc"
								+"     from (select xn,xq,pjcjmc,xh,row_number() over (partition by b.xh order by b.xh) pno,"
								+"     row_number() over (partition by b.xh order by b.xh)-1 sno from view_zjjd_zhszcp b where xh=?"
								+"     ) c  start with pno=1 connect by prior pno=sno ";  
							ws.addCell(new Label(b,i+1,dao.getOneRs(sql,new String[]{jgList.get(i).get("xh")},"pjcjmc"),wcf)); 
						}else{
							ws.addCell(new Label(b,i+1,"无",wcf)); 
						}
					}else{
						ws.addCell(new Label(b,i+1,jgList.get(i).get(colList[b]),wcf));       		     
					}	
				}
			}
			wwb.write();
			wwb.close();
		}

		return mapping.findForward("blank");
	}
	
	/**
	 * 地质大学新生入学登记表
	 */
	public  ActionForward dzdxxsrxdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception{
		DAO dao = DAO.getInstance();
		String[] colList = null;
		HashMap<String, String> map = null;
		colList = dao.getColumnName("select xh,xm,xb,csrq,cym,mz,sfzh,zzmm,lxdh,ah,jg,syd,jtdz,yzbm,xymc,pycc," +
				"bjmc,zymc,sg,tz,ssbh,qsdh from view_xsxxb a where 1=2");
		String xh = request.getParameter("pkvalue");
		String sql = "select  xh,xm,xb,csrq,cym,(select mzmc from mzdmb  b where a.mz=b.mzdm)mz,sfzh,(select b.zzmmmc from zzmmdmb b where a.zzmm=b.zzmmdm) zzmm,lxdh,ah,jg,syd,jtdz,yzbm,xymc,zymc,pycc,bjmc,sg,tz,jtdz,ssbh,qsdh  from view_xsxxb a where xh=?";
		map = dao.getMap(sql, new String[]{xh}, colList);
		System.out.println(map.get("xh"));
		request.setAttribute("rs", map);
		return mapping.findForward("dzdxxsrxdjb");
	}
	
	/**
	 * 成都体育学院-打印学生登记表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 * @throws Exception
	 */
	public  ActionForward printXsdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception{
		DAO dao = DAO.getInstance();
		HashMap<String, String> map = null;
		String xh = request.getParameter("pkValue");
		String sql = "select  xh,xm,xb,csrq,cym,(select sydq from dmk_sydq where substr(a.jg,0,6) = sydqdm)jg," +
				"(select mzmc from mzdmb  b where a.mz=b.mzdm)mzmc,sfzh,(select b.zzmmmc from zzmmdmb b where a.zzmm=b.zzmmdm) zzmmmc," +
				"lxdh,ah,(select sydq from dmk_sydq where substr(a.syd,0,6) = sydqdm)||(select qxmc from dmk_qx where substr(a.syd,8,6) = qxdm)" +
				"||(select qxmc from dmk_qx where substr(a.syd,15,6) = qxdm) syd,jtdz,yzbm,xymc,zymc,pycc,bjmc,sg,tz,jtdz,ssbh,qsdh,sfzh,tc, " +
				"(select b.qxmc from DMK_QX b where a.syds = b.qxdm) syds," +
			    "(select b.qxmc from DMK_QX b where substr(syd, 8, 6)= b.qxdm) sydshi," +
			    "(select b.qxmc from DMK_QX b where substr(syd, 15, 6) = b.qxdm) sydxian, " +
			    "(select b.qxmc from DMK_QX b where substr(jg, 1, 6)= b.qxdm) jgs," +
			    "(select b.qxmc from DMK_QX b where substr(jg, 8, 6)= b.qxdm) jgshi," +
			    "(select b.qxmc from DMK_QX b where substr(jg, 15, 6) = b.qxdm) jgxian " +
				"from view_xsxxb a where xh=?";
		
		map = dao.getMapNotOut(sql, new String[]{xh});
		
		// ----------------------------家庭信息 begin----------------------------
		sql=" select a.*,(select zzmmmc from zzmmdmb b where a.jtcy1_zzmm=b.zzmmdm)jtcy1_zzmmmc" +
				" ,(select zzmmmc from zzmmdmb b where a.jtcy2_zzmm=b.zzmmdm)jtcy2_zzmmmc" +
				" ,(select zzmmmc from zzmmdmb b where a.jtcy3_zzmm=b.zzmmdm)jtcy3_zzmmmc" +
				" ,(select zzmmmc from zzmmdmb b where a.jtcy4_zzmm=b.zzmmdm)jtcy4_zzmmmc" +
				" ,to_char(sysdate,'yyyy')- to_char(to_date(jtcy1_nl,'yyyy-MM-dd'),'yyyy')jtcy1_nlxx "+
				" ,to_char(sysdate,'yyyy')- to_char(to_date(jtcy2_nl,'yyyy-MM-dd'),'yyyy')jtcy2_nlxx "+
				" ,to_char(sysdate,'yyyy')- to_char(to_date(jtcy3_nl,'yyyy-MM-dd'),'yyyy')jtcy3_nlxx "+
				" ,to_char(sysdate,'yyyy')- to_char(to_date(jtcy4_nl,'yyyy-MM-dd'),'yyyy')jtcy4_nlxx "+
				" from xsfzxxb a where xh=? ";
		map.putAll(dao.getMapNotOut(sql, new String[]{xh}));
		sql="select xh,max(jddm2)rtsj,max(jddm8)rdsj from (select xh, (case when a.jddm=2 then b.kssj end)jddm2,(case when a.jddm=8 then b.kssj end)jddm8  from xg_dtjs_jbszb a , (select * from xg_dtjs_xsdtxxjlb where xh=?) b where a.jddm=b.jddm) group by xh ";
		map.putAll(dao.getMapNotOut(sql, new String[]{xh}));
		// ----------------------------家庭信息 end------------------------------
		
		// ----------------------------党团信息 begin------------------------------
		StringBuilder sb=new StringBuilder();
		sb.append(" select max(dtxx) dtxx ");
		sb.append(" from (select to_char(WM_CONCAT(dtxx) ");
		sb.append(" over(partition by xh order by xh)) dtxx ");
		sb.append(" from (select xh, jdsj || '成为' || jdmc dtxx ");
		sb.append(" from xg_dtjs_jbszb a,(select xh,jddm, ");
		sb.append(" case  when jssj is not null then ");
		sb.append(" kssj || '至' || jssj  else  kssj  end jdsj ");
		sb.append(" from xg_dtjs_xsdtxxjlb  where xh = ? ) b ");
		sb.append(" where a.jddm = b.jddm)) group by dtxx ");
		
		map.putAll(dao.getMapNotOut(sb.toString(), new String[]{xh}));
		// ----------------------------党团信息 end------------------------------
		
		// --------------------宿舍信息 begin ----------------------------
		StringBuilder ssxx = new StringBuilder();
		ssxx.append(" select ldmc||ch||'层'||qsh ssbh from view_xg_gygl_new_cwxx where xh=? ");
		map.putAll(dao.getMapNotOut(ssxx.toString(), new String[]{xh}));
		
		
		request.setAttribute("rs", map);
		return mapping.findForward("printXsdjb");
	}
	
	/**
	 * 杭州职业技术学院成绩报告单打印
	 */
	public ActionForward hzy_cjbgdprint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		DAO dao  = DAO.getInstance();
		CommanForm myform = (CommanForm)form;
		XsxxglService service  = new XsxxglService();
		String pkValue = request.getParameter("pkValue");
		String[] pkVarray = pkValue.split("!!");
		List<HashMap<String,String>> listOne = new ArrayList<HashMap<String,String>>();
		List<HashMap<String,String>> listTow = new ArrayList<HashMap<String,String>>();
		HashMap<String,String> stuInfoOne = new HashMap<String, String>();
		HashMap<String,String> stuInfoTow = new HashMap<String,String>();
		String xhOne = "";
		String xhTow = "";
		String xn    = request.getParameter("xn");
		String xq    = request.getParameter("xq");
		
		if(Base.isNull(xn)){
			xn = Base.currXn;
			myform.setXn(xn);			 
		}
		if(Base.isNull(xq)){
			xq = Base.currXq;
			myform.setXq(xq);
		}
		String xqmc = dao.getOneRs("select xqmc from xqdzb where xqdm=?",new String[]{xq},"xqmc");
		if(pkVarray.length>=2){
			xhOne = pkVarray[0];
			xhTow = pkVarray[1];
		}else{
			xhOne = pkVarray[0];
		}
		if(!Base.isNull(xhOne)){
			String sql = "select kcsbm,cj from cjb a where xh=? and xn=? and xq=?";
			List<HashMap<String,String>> listTem = dao.getList(sql,new String[]{xhOne,xn,xq},new String[]{"kcsbm","cj"});
			int listLen = listTem.size();			
			int HalfLen = 0;
			int m = 0;
			//默认显示12行
			m = listLen%2;
			int n=0;
			if(m==1){//listLen是偶数否则是奇数
				if(listLen==2){
					HalfLen = 2; 
				}else{
					HalfLen = listTem.size()/2;
					n=HalfLen+1;
				}					
			}else{
				if(listLen==1){
					HalfLen = 2;
				}else{
					HalfLen = (listTem.size()+1)/2;
					n= HalfLen;
				}
			}
			for(int i=0;i<n;i++){						
				HashMap<String,String> map = new HashMap<String, String>();
				HashMap<String, String> value = listTem.size()>i ? listTem.get(i) : new HashMap<String, String>();
				HashMap<String, String> nextValue = listTem.size()> i+1 ? listTem.get(i+1) : new HashMap<String, String>();
				HashMap<String, String> halfValue = listTem.size() > n+i ? listTem.get(n+i) : new HashMap<String, String>();
				if(listLen==1||listLen==2){
                    if(listLen==2){
                    	if(i==0){
                    		map.put("rowOneA",String.valueOf(i+1));
                    		map.put("kcOneA",value== null ? "" :value.get("kcsbm"));
                    		map.put("cjOneA",value== null ? "" :value.get("cj"));	
                    		map.put("rowOneB",String.valueOf(2));
                    		map.put("kcOneB",nextValue== null ? "" :nextValue.get("kcsbm"));
                    		map.put("cjOneB",nextValue== null ? "" :nextValue.get("cj"));
                    	}
                    }else{
                    	if(i==0){
                    		map.put("rowOneA",String.valueOf(i+1));
                    		map.put("kcOneA",value== null ? "" :value.get("kcsbm"));
                    		map.put("cjOneA",value== null ? "" :value.get("cj"));	
                    		map.put("rowOneB","");
                    		map.put("kcOneB","");
                    		map.put("cjOneB","");
                    	}
                    }
				}else{
					if(i==n-1){
//						if(m==0){//奇数
//							map.put("rowOneA",String.valueOf(i+1));
//							map.put("kcOneA",value== null ? "" :value.get("kcsbm"));
//							map.put("cjOneA",value== null ? "" :value.get("cj"));	
//							map.put("rowOneB","");
//							map.put("kcOneB","");
//							map.put("cjOneB","");
//						}else{//偶数
							map.put("rowOneA",String.valueOf(i+1));
							map.put("kcOneA",value== null ? "" :value.get("kcsbm"));
							map.put("cjOneA",value== null ? "" :value.get("cj"));	
							map.put("rowOneB",String.valueOf(n+i+1));
							map.put("kcOneB",halfValue == null ? "" : halfValue.get("kcsbm"));
							map.put("cjOneB",halfValue == null ? "" : halfValue.get("cj"));
//						}
					}else{
						map.put("rowOneA",String.valueOf(i+1));
						map.put("kcOneA",value== null ? "" :value.get("kcsbm"));
						map.put("cjOneA",value== null ? "" :value.get("cj"));	
						map.put("rowOneB",String.valueOf(n+i+1));
						map.put("kcOneB",halfValue== null ? "" : halfValue.get("kcsbm"));
						map.put("cjOneB",halfValue == null ? "" : halfValue.get("cj"));
					}
				}
				listOne.add(map);
			}
		}
		if(!Base.isNull(xhTow)){
			String sql = "select kcsbm,cj from cjb a where xh=? and xn=? and xq=?";
			List<HashMap<String,String>> listTem = dao.getList(sql,new String[]{xhTow,xn,xq},new String[]{"kcsbm","cj"});
			int listLen = listTem.size();			
			int HalfLen = 0;
			int m = 0;
			//默认显示12行
			m = listLen%2;
			int n=0;
			if(m==1){//listLen是偶数否则是奇数
				if(listLen==2){
					HalfLen = 2; 
				}else{
					HalfLen = listLen/2;
					n = HalfLen+1;
				}					
			}else{
				if(listLen==1){
					HalfLen = 2;
				}else{
					HalfLen = (listLen+1)/2;
					n = HalfLen;
				}
			}
			for(int i=0;i<n;i++){						
				HashMap<String,String> map = new HashMap<String, String>();
				HashMap<String, String> value = listTem.size()>i ? listTem.get(i) : new HashMap<String, String>();
				HashMap<String, String> nextValue = listTem.size()> i+1 ? listTem.get(i+1) : new HashMap<String, String>();
				HashMap<String, String> halfValue = listTem.size() > n+i ? listTem.get(n+i) : new HashMap<String, String>();
				if(listLen==1||listLen==2){
					if(listLen==2){
						if(i==0){
							map.put("rowTowA",String.valueOf(i+1));
							map.put("kcTowA",value == null ? "" : value.get("kcsbm"));
							map.put("cjTowA",value == null ? "" : value.get("cj"));	
							map.put("rowTowB",String.valueOf(2));
							map.put("kcTowB",nextValue == null ? "" : nextValue.get("kcsbm"));
							map.put("cjTowB",nextValue == null ? "" : nextValue.get("cj"));
						}
					}else{
						if(i==0){
							map.put("rowTowA",String.valueOf(i+1));
							map.put("kcTowA",value == null ? "" : value.get("kcsbm"));
							map.put("cjTowA",value == null ? "" : value.get("cj"));	
							map.put("rowTowB","");
							map.put("kcTowB","");
							map.put("cjTowB","");
						}
					}
				}else{
					if(i==n-1){
//						if(m==0){//奇数
//							map.put("rowTowA",String.valueOf(i+1));
//							map.put("kcTowA",value == null ? "" : value.get("kcsbm"));
//							map.put("cjTowA",value == null ? "" : value.get("cj"));	
//							map.put("rowTowB","");
//							map.put("kcTowB","");
//							map.put("cjTowB","");
//						}else{//偶数
							map.put("rowTowA",String.valueOf(i+1));
							map.put("kcTowA",value == null ? "" : value.get("kcsbm"));
							map.put("cjTowA",value == null ? "" : value.get("cj"));	
							map.put("rowTowB",String.valueOf(n+i+1));
							map.put("kcTowB",halfValue == null ? "" : halfValue.get("kcsbm"));
							map.put("cjTowB",halfValue == null ? "" : halfValue.get("cj"));
//						}
					}else{
						map.put("rowTowA",String.valueOf(i+1));
						map.put("kcTowA",value == null ? "" : value.get("kcsbm"));
						map.put("cjTowA",value == null ? "" : value.get("cj"));	
						map.put("rowTowB",String.valueOf(n+i+1));
						map.put("kcTowB",halfValue == null ? "" : halfValue.get("kcsbm"));
						map.put("cjTowB",halfValue == null ? "" : halfValue.get("cj"));
					}
				}
				listTow.add(map);
			}
		}
		stuInfoOne = dao.getMap(" select xm,bjmc,(select xfje from view_xsxxgl_xfszb b where a.bjdm=b.bjdm)xfje from view_xsjbxx a  where xh=?", new String[]{xhOne},new String[]{"xm","bjmc","xfje"});
		stuInfoTow = dao.getMap(" select xm,bjmc,(select xfje from view_xsxxgl_xfszb b where a.bjdm=b.bjdm)xfje from view_xsjbxx a where xh=?", new String[]{xhTow},new String[]{"xm","bjmc","xfje"});
		stuInfoOne.putAll(service.queryXscjbgdxxOne(xn+xq+xhOne));
		stuInfoTow.putAll(service.queryXscjbgdxxOne(xn+xq+xhTow));
		request.setAttribute("stuInfoOne",stuInfoOne);
		request.setAttribute("stuInfoTow", stuInfoTow);
		request.setAttribute("pkValue",pkValue);
		request.setAttribute("xhOne", xhOne);
		request.setAttribute("xhTow", xhTow);
		request.setAttribute("xnList",Base.getXnndList());
		request.setAttribute("xqList",Base.getXqList());
		request.setAttribute("listOne", listOne);
		request.setAttribute("listTow", listTow);
		request.setAttribute("xn",xn);
		request.setAttribute("xqmc",xqmc);
		request.setAttribute("rs", service.selectCjbgddysjxx());
		return mapping.findForward("cjbgdPrint");
	}
	
	public ActionForward getGdzl(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType").toString();
		String xy = request.getParameter("xy");
		String nj = request.getParameter("nj");
		String xydm = "";
		if("xy".equals(userType)){
			xydm = session.getAttribute("userDep").toString();
		}else{
			xydm = xy;
		}
		StudentInfoService service = new StudentInfoService();
		String modelPath = servlet.getServletContext().getRealPath("")+"/print/gdzlb.xls";
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		WritableWorkbook wwb = ExcelMethods.getWritableWorkbook(new File(modelPath), response.getOutputStream());
		service.printPayReport(wwb,xydm,nj);
		
		return mapping.findForward("");
	} 
	
	/**
	 * 学生身份证号信息校验（籍贯，出生年月，性别）
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward stuSfzhInfoJy(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		CommanForm dataSearchForm = (CommanForm) form;
		HttpSession session = request.getSession();
		Base.chkSessionTimeOut(session);//检测是否超时
		
		String doType=Base.chgNull(request.getParameter("doType"), "",0);
		StudentInfoService service=new StudentInfoService();   
		//修改信息
		if("update".equals(doType)){
			String[] updateType=request.getParameterValues("updateType");
			boolean b=service.updateSfzhJyInfo(updateType,dataSearchForm,request);
			request.setAttribute("result", b);
		}
		
		List<String[]> rsList=service.getSfzhJyInfoList(dataSearchForm);
		
		request.setAttribute("rsList", rsList);
		request.setAttribute("topTr", service.getTopTr("xxjy"));
		
		request.setAttribute("path", "stu_sfzhinfo_jy.do?method=stuSfzhInfoJy");
		String[] writeAbleAndTitle = FormModleCommon.getWriteAbleAndTitle(request);
		
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("searchTj", dataSearchForm.getSearchModel());
		request.setAttribute("writeAble", writeAbleAndTitle[0]);
		request.setAttribute("title", writeAbleAndTitle[1]);
		request.setAttribute("path", "stu_sfzhinfo_jy.do");
		
		
		return mapping.findForward("stuSfzhInfoJy");
	}
	
	/**
	 * 昆明学院个性化，住宿费查询（查询从教务推送过来的数据）
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @throws Exception 
	 * @author honglin
	 * @date 2012-10-22
	 */
	public ActionForward zsfcx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception
			{
	
		CommanForm dataSearchForm = (CommanForm) form;
		HttpSession session = request.getSession();
		String isFdy=session.getAttribute("fdyQx")==null ? "false"  : String.valueOf(session.getAttribute("fdyQx"));
		String isBzr=session.getAttribute("bzrQx")==null ? "false"  : String.valueOf(session.getAttribute("bzrQx"));
		String xy = request.getParameter("xy");
		String zy = request.getParameter("zydm");
		String nj = request.getParameter("nj");
		if (null==request.getParameter("xn")) {
			request.setAttribute("xn", Base.currXn);
			dataSearchForm.setXn(Base.currXn);
		}else{
			request.setAttribute("xn", request.getParameter("xn"));
		}
		Base.chkSessionTimeOut(session);//检测是否超时
		StudentInfoService service=new StudentInfoService();  
		//查询结果集
		List<String[]> rsList=service.getZsfInfoList(dataSearchForm,getUser(request));
		//查询结果表头
		request.setAttribute("topTr", service.getZsfTopTr());
		request.setAttribute("rs", rsList);
		appendProperties(request, xy, zy, nj);//加载学院专业班级年级列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		String userName = request.getSession().getAttribute("userName").toString();
		String userType = request.getSession().getAttribute("userType").toString();
		String userDep = request.getSession().getAttribute("userDep").toString();
		if("xy".equalsIgnoreCase(userType)){
			dataSearchForm.setXy(userDep);
		}
		request.setAttribute("userName", userName);
		request.setAttribute("maxNum", dataSearchForm.getPages().getPageSize());
		request.setAttribute("isFdy", isFdy);
		request.setAttribute("isBzr", isBzr);
		request.setAttribute("title", "学生信息-学生信息-住宿费查询");
		return mapping.findForward("knxy_zsfxx");
	}
	
}