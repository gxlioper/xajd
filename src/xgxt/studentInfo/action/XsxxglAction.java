/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.action;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.base.Excel2Oracle;
import xgxt.comm.FileManage;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.form.CommanForm;
import xgxt.form.User;
import xgxt.studentInfo.model.XsxxdjForm;
import xgxt.studentInfo.model.XsxxpzModel;
import xgxt.studentInfo.service.StudentInfoService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.studentInfo.zgkd.XsxxZgkdService;
import xgxt.studentInfo.zjgszyjsxy.XsxxZjgszyjsxyService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.utils.String.StringUtils;

import com.zfsoft.basic.BasicAction;
import common.Globals;
import common.GlobalsVariable;

/**
 * <p>Title: 学生工作管理系统</p>
 * <p>Description: 学生信息管理Action</p>
 * <p>Copyright: Copyright (c) 2008</p>
 * <p>Company: zfsoft</p>
 * <p>Author: 李容</p>
 * <p>Version: 1.0</p>
 * <p>Time: 2008-08-07</p>
 */
public class XsxxglAction extends BasicAction {
	
	/***
	 * 加载页面参数
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 * @return void
	 * */
	public void appendProperties(HttpServletRequest request, String xydm,
			String zydm, String nj) throws Exception {
		XsxxZgkdService service = new XsxxZgkdService();
		String xy = "";
		String zy = "";
		String njLocal = nj;
		xy = xy==null ? "": (xydm==null ? "" : xydm); 
		zy = zy==null ? "": (zydm==null ? "" : zydm); 
		njLocal = nj==null ? "": nj;
		String zyKey = xy==null ? "":xy; 
		String bjKey = xy+"!!"+zy+"!!"+njLocal;
		String userType = request.getSession().getAttribute("userType").toString();
		
		request.setAttribute("mzList", service.getMzList());
		request.setAttribute("zzmmList", service.getZzmmList());
		request.setAttribute("writeAble", "yes");//判断用户读写权
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		request.setAttribute("ndList", Base.getXnndList());//学年列表
		request.setAttribute("njList", Base.getNjList());//年级列表
		request.setAttribute("xyList", Base.getXyList());//学院列表
		request.setAttribute("zyList", Base.getZyMap().get(zyKey));//专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));//班级列表		
		request.setAttribute("userType", userType);//用户类型		
	}
	
	/** 
	 * 显示导出数据页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward showExportPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CommanForm colForm = (CommanForm)form;
		HttpSession session = request.getSession();
		String xxdm = StandardOperation.getXxdm();
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();	
		String userName = session.getAttribute("userName").toString();
		String condition = DealString.toGBK(request.getParameter("condition"));
		String realTable = "xsxxb";
		String tableName = "view_xsxxb";
		
		if(userType!=null 
				&& userType.equals("xy") 
				&& !session.getAttribute("fdyQx").toString().equalsIgnoreCase("true")){//学院用户
			colForm.setXydm(userDep);
		}
		
		if(userType!=null 
				&& userType.equals("xy") 
				&& session.getAttribute("fdyQx").toString().equalsIgnoreCase("true")){//辅导员用户
			colForm.setXydm("");
		}
		if(xxdm.equals(Globals.XXDM_YNYS)){//云南艺术学院籍贯在界面上分省市县的下拉列表选择
			colForm.setJg(DealString.toGBK(request.getParameter("jgz")));
		}
		colForm.setUserName(userName);
		colForm.setFdyQx(session.getAttribute("fdyQx").toString());
				
		XsxxglService service = new XsxxglService();
		List<HashMap<String, String>> list = service.getColumn2Export(tableName);//获取所有的字段列表
		
		request.setAttribute("whereSql", condition);
		request.setAttribute("form", form);
		request.setAttribute("rs", list);
		request.setAttribute("realTable", realTable);
		request.setAttribute("tableName", tableName);
		request.setAttribute("path", "no".equalsIgnoreCase(request.getParameter("sfzxk")) 
										? "stu_info_query.do?method=stuInfo&sfzxk=no" 
										: "stu_info_query.do?method=stuInfo");
		request.setAttribute("sfzxk", request.getParameter("sfzxk"));
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("success");
	}
	
	/** 
	 * 数据导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward expData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, Exception {
		CommanForm colForm = (CommanForm) form;
		HttpSession session = request.getSession();
		XsxxglService service = new XsxxglService();
		String xxdm  = StandardOperation.getXxdm();		
		String columnStr = colForm.getMappingItem();
		String whereSql = request.getParameter("sql");//查询条件
		whereSql = whereSql==null || whereSql.equals("") ? "" : DealString.toGBK(whereSql);//条件语句
		String[] key = columnStr.split("!!SplitOne!!");//所有用户选择的导出字段
		String sql = "";
		String tableName = service.getTableName();
		tableName = StringUtils.isNull(tableName) ? "view_xsxxb" : tableName;
		String userName = session.getAttribute("userName").toString();		
		boolean isFdy = session.getAttribute("fdyQx").toString().equalsIgnoreCase("true") ? true : false;
		
		sql = service.getColumnSql2Exp(tableName,key,colForm);//获取导出的查询语句
		whereSql = service.getCondition(whereSql);
		if(Globals.XXDM_LSSFXY.equalsIgnoreCase(xxdm)){//乐山师范
			String jgshen = colForm.getJgshen();
			String jgshi  = colForm.getJgshi();
			String jgxian = colForm.getJgxian();
			String jtdzshen = colForm.getJtdzshen();
			String jtdzshi = colForm.getJtdzshi();
			String jtdzxian = colForm.getJtdzxian();	
    	    String jgValue = "";
    	    String jtdzValue = "";
            if(!Base.isNull(jgshen)){
        	   jgValue+=jgshen+"/";
            }
            if(!Base.isNull(jgshi)){
        	   jgValue+=jgshi+"/";
            }
            if(!Base.isNull(jgxian)){
        	   jgValue+=jgxian;
            }
            if(!Base.isNull(jtdzshen)){
        	   jtdzValue+=jtdzshen+"/";
            }
            if(!Base.isNull(jtdzshi)){
        	   jtdzValue+=jtdzshi+"/";
            }
            if(!Base.isNull(jtdzxian)){
        	   jtdzValue+=jtdzxian;
            }           
            whereSql+=(Base.isNull(jgValue))?"":" and jg like '%"+jgValue+"%' ";
            whereSql+=(Base.isNull(jtdzValue))?"":" and jtdz like '%"+jtdzValue+"%' ";
            if(sql.indexOf("SYD")!=-1){//生源地
        	   sql=sql.replace("SYD","((select b.qxmc from dmk_qx b where b.qxdm=substr(a.syd,0,instr(a.syd,'/')-1) )||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.syd,instr(a.syd,'/')+1,instr(a.syd,'/',1,2)-instr(a.syd,'/')-1))||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.syd,instr(a.syd,'/',-1)+1)))SYD ");
            }
            if(sql.indexOf("JG")!=-1){//籍贯
        	   sql=sql.replace("JG","((select b.qxmc from dmk_qx b where b.qxdm=substr(a.jg,0,instr(a.jg,'/')-1))||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jg,instr(a.jg,'/')+1,instr(a.jg,'/',1,2)-instr(a.jg,'/')-1))||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jg,instr(a.jg,'/',-1)+1)))JG  ");
            }
            if(sql.indexOf("JTDZ")!=-1){
        	   sql=sql.replace("JTDZ","((select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,0,instr(a.jtdz,'/')-1) ) ||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,instr(a.jtdz,'/')+1,instr(a.jtdz,'/',1,2)-instr(a.jtdz,'/')-1))||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,instr(a.jtdz,'/',1,2)+1,instr(a.jtdz,'/',1,3)-instr(a.jtdz,'/',1,2)-1)) ||substr(a.jtdz,instr(a.jtdz,'/',-1)+1,length(a.jtdz)))JTDZ ");
            }
            if(sql.indexOf("RXQDW")!=-1){
        	   sql=sql.replace("RXQDW", "((select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,0,instr(a.jtdz,'/')-1) ) ||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,instr(a.jtdz,'/')+1,instr(a.jtdz,'/',1,2)-instr(a.jtdz,'/')-1))||(select b.qxmc from dmk_qx b where b.qxdm=substr(a.jtdz,instr(a.jtdz,'/',1,2)+1,instr(a.jtdz,'/',1,3)-instr(a.jtdz,'/',1,2)-1)) ||substr(a.jtdz,instr(a.jtdz,'/',-1)+1,length(a.jtdz)))RXQDW ");
            }
		}
		sql += whereSql;//添加条件	
		if(isFdy){
			sql += " and exists(select 1 from view_fdybbj f where a.bjdm=f.bjdm and f.zgh='" + userName +"') ";
		}
		response.reset();
		response.setContentType("application/vnd.ms-excel");		
		Excel2Oracle.exportData(sql, tableName, response.getOutputStream());//将数据写到Excel文件
		return mapping.findForward("");
	}
	
	/** 
	 * 显示信息发布页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward showStuInfoPub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		return mapping.findForward("stuInfoPub");
	}
	
	/** 
	 * 显示信息发布页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuInfoPub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{		
		String title = DealString.toGBK(request.getParameter("infoTitle"));
		String content = DealString.toGBK(request.getParameter("content1"));
		
		XsxxglService service = new XsxxglService();
		request.setAttribute("result", service.saveStuInfoPub(title,content,request));
		return mapping.findForward("stuInfoPub");
	}
	
	/** 
	 * 显示信息发布页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward viewStuInfoPub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{			
		XsxxglService service = new XsxxglService();
		String title = "";
		String nr = "";
		if(Globals.XXDM_SJXY.equals(Base.xxdm)){
			title="转档须知";
			nr = service.getInfo_ser(title);
		}else{
			title="信息修改协议";
		}
		request.setAttribute("nr",nr );
		return mapping.findForward("zdxz");
	}
	
	/** 
	 * 按选择的条件初始化毕业年月
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward configBynyByCondition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
			CommanForm model = (CommanForm)form;
			XsxxglService service = new XsxxglService();
			String type = DealString.toGBK(request.getParameter("type"));
			String yf = request.getParameter("yf");
			String rq = request.getParameter("rq");
			
			if(type != null && "all".equalsIgnoreCase(type)){//初始化全部
				model = new CommanForm();
				model.setYf(yf);
				model.setSj(rq);
				model.setRq(rq);
			}
			
			request.setAttribute("result", service.saveByny(model, request));
			return new ActionForward("/stu_info_query.do?method=stuInfo");
	}
	
	/** 
	 * 按选择的数据初始化毕业年月
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward configBynyByData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxglService service = new XsxxglService();
		String pk = DealString.toGBK(request.getParameter("pk"));
		CommanForm model = new CommanForm();
		model.setYf(request.getParameter("yf"));
		model.setSj(request.getParameter("rq"));
		model.setPkValue(pk);
		
		request.setAttribute("result", service.saveBynyByData(model,request));
		return new ActionForward("/stu_info_query.do?method=stuInfo");
	}
	
	/** 
	 * 按选择的条件初始化是否是毕业生
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward configBysByCondition(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm)form;
		XsxxglService service = new XsxxglService();
		
		request.setAttribute("result", service.saveBys(model, request));
		return new ActionForward("/stu_info_query.do?method=stuInfo");
	}
	
	/** 
	 * 按选择的数据初始化毕业生
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward configBysByData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxglService service = new XsxxglService();
		String pk = DealString.toGBK(request.getParameter("pk"));
		
		request.setAttribute("result", service.saveBysByData(pk,request));
		return new ActionForward("/stu_info_query.do?method=stuInfo");
	}
	
	/**
	 * 打印学生详细信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception  
	 * */
	public ActionForward printXsxxxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxglService service = new XsxxglService();
		HttpSession session = request.getSession();
		String userName = session.getAttribute("userName").toString();
		String userType = session.getAttribute("userType").toString();
		String[] colList = {};		
		String item = request.getParameter("item");
		String xh = request.getParameter("xh");
		if("stu".equals(userType)){
			xh = userName;
		}
		String[] items = item.split("-");
		
		for(int i=0; i<items.length; i++){
			request.setAttribute(items[i], items[i]);
		}
		
		//党团		
		List<String[]> dyxxList = service.getDyxx(xh);
		
		//评奖
		colList = new String[]{"nd", "xn", "xh", "xm", "bjmc", "jxjmc","jlje","xysh", "xxsh"};
		List<String[]> jxjList = service.getInfoOfStu(xh, "view_xsjxjb", colList);
		
		colList = new String[]{"nd", "xn", "xh", "xm", "bjmc", "rychmc","xysh", "xxsh"};
		List<String[]> rychList = service.getInfoOfStu(xh, "view_xsrychb", colList);
		
		colList = new String[]{"xn","xh","xm","pdcpdf","kcxxcjdf","kpm","sxcpdf","jbszcpdf","jpm","jbszcpdj","fzszcpdf","fpm"};
		List<String[]> zhszcpList = service.getZhszcpxx(xh, colList);
		
		//对外交流
		colList = new String[]{"nd", "xn", "xq", "xh", "xm", "dwjlxmmc","sqsj", "xysh", "xxsh", "xxzs", "jxj"};
		List<String[]> dwjlList = service.getInfoOfStu(xh, "view_dwjlsq", colList);	
		
		
		//学生资助
		List<String[]> gjzxdkList = service.getXszzInfo(xh, "VIEW_XSZZ_COMMON_GJZXDK");
		List<String[]> zzsqList = service.getXszzInfo(xh, "VIEW_XSZZ_COMMON_NEW_ZZBBXSSQB");
		List<String[]> knsList = service.getXszzInfo(xh, "VIEW_ZGKYDX_KNSXX");
		
		//勤工助学
		colList = new String[]{"xn", "nd", "xq", "xh", "xm", "bjmc", "gwdm","sqsj"};
		List<String[]> xsgwList = service.getInfoOfStu(xh, "view_xsgwxx", colList);	
		
		colList = new String[]{"xn", "nd", "xq", "yf","xh", "xm","bjmc","gwdm","cjje","ffsj"};
		List<String[]> cjffList = service.getInfoOfStu(xh, "view_xscjff", colList);
		
		//心理健康
		colList = new String[]{"xh", "xm","xlcsxmmc","xlcsjgmc", "cssj"};
		List<String[]> xlcsList = service.getInfoOfStu(xh, "view_xlcsjg", colList);
		
		colList = new String[]{"xh", "xm", "tbgxxslbmc"};
		List<String[]> tsxsList = service.getInfoOfStu(xh, "view_xytbgxxsxx", colList);
		
		//学生军训
		colList = new String[]{"nd", "xn", "xq", "xh", "xm", "bjmc", "jxmc","hjsj"};
		List<String[]> jxtdhjList = service.getInfoOfStu(xh, "view_xsjxhj", colList);
		
		colList = new String[]{"xh","xm","nd","bjmc","mzmc","xlcj","kscj","cj","lrsj","lrr"};
		List<String[]> jxcjList = service.getInfoOfStu(xh, "view_jxcjxx", colList);
		
		//违纪处分
		colList = new String[]{"xh", "xm", "xn", "nd", "xq", "cflbmc","cfsj", "cfwh", "ssjg", "cxsj"};
		List<String[]> wjcfList = service.getInfoOfStu(xh, "view_wjcf", colList);
		
		//其它数据
		colList = new String[]{"nd","xn","xq", "xh", "xm", "bxgsmc", "bxxzmc", "tbsj", "tuibsj", "tbbj"};
		List<String[]> xsbxList = service.getInfoOfStu(xh, "view_xsbxxx", colList);
		
		colList = new String[]{"xh", "xm", "nf", "yf", "xfje"};
		List<String[]> hsxfList = service.getInfoOfStu(xh, "view_xshsxf", colList);
		
		request.setAttribute("rs", service.selectStuinfo(xh));
		//学生家庭信息
		request.setAttribute("jtxxMap", service.getStuJtxx(xh));
		request.setAttribute("jxjRs", jxjList);
		request.setAttribute("dyxxList", dyxxList);
		request.setAttribute("rychList", rychList);
		request.setAttribute("zhszcpList", zhszcpList);
		request.setAttribute("dwjlList", dwjlList);
		request.setAttribute("xsgwList", xsgwList);
		request.setAttribute("cjffList", cjffList);
		request.setAttribute("xlcsList", xlcsList);
		request.setAttribute("tsxsList", tsxsList);
		request.setAttribute("jxtdhjList", jxtdhjList);
		request.setAttribute("jxcjList", jxcjList);
		request.setAttribute("wjcfList", wjcfList);
		request.setAttribute("xsbxList", xsbxList);
		request.setAttribute("hsxfList", hsxfList);
		request.setAttribute("gjzxdkList", gjzxdkList);
		request.setAttribute("zzsqList",zzsqList );
		request.setAttribute("knsList", knsList);
		return mapping.findForward("stuxxb");
	}
	
	/** 
	 * 显示学生成绩报告单信息维护页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xscjbgdxxwh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm)form;
		request.setAttribute("tableName", "view_hzzy_cjbgdxxb");
		request.setAttribute("realTable", "hzzy_cjbgdxxb");
		appendProperties(request, model.getXydm(), model.getZydm(), model.getNj());
		return mapping.findForward("xscjbgdxxwh");
	}
	
	/** 
	 * 查询学生成绩报告单信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward queryXscjbgdxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		FormModleCommon.formToGBK(model);//转换字符编码 
		List<String[]> rs = service.queryXscjbgdxx(model);

		request.setAttribute("topTr", service.getCjbgdxxToptr());
		request.setAttribute("rs", rs);
		request.setAttribute("rsNum", rs.size());
		return xscjbgdxxwh(mapping,form,request,response);
	}
	
	/** 
	 * 显示学生成绩报告单信息增加页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xscjbgdxxAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxglService service = new XsxxglService();
		String xh = request.getParameter("xh");
		
		request.setAttribute("rs", service.selectStuinfo(xh));
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		return mapping.findForward("xscjbgdxxAdd");
	}
	
	/** 
	 * 显示学生成绩报告单信息修改页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xscjbgdxxModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		String pkValue = request.getParameter("pkValue");
		XsxxglService service = new XsxxglService();
		request.setAttribute("rs", service.queryXscjbgdxxOne(pkValue));
		return mapping.findForward("xscjbgdxxModi");
	}
	
	/** 
	 * 增加学生成绩报告单信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward addXscjbgdxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		String xn = DealString.toGBK(model.getXn());
		String xq = DealString.toGBK(model.getXq());
		String xh = DealString.toGBK(model.getXh());
		
		request.setAttribute("result", service.saveXscjbgdxx(model,request));
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表
		request.setAttribute("rs", service.queryXscjbgdxxOne(xn+xq+xh));
		FormModleCommon.formToGBK(model);//转换字符编码
		return mapping.findForward("xscjbgdxxAdd");
	}
	
	/** 
	 * 修改学生成绩报告单信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward modiXscjbgdxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		String xn = DealString.toGBK(model.getXn());
		String xq = DealString.toGBK(model.getXq());
		String xh = DealString.toGBK(model.getXh());
		
		request.setAttribute("result", service.saveXscjbgdxx(model,request));
		request.setAttribute("rs", service.queryXscjbgdxxOne(xn+xq+xh));
		FormModleCommon.formToGBK(model);//转换字符编码
		return mapping.findForward("xscjbgdxxModi");
	}
	
	/** 
	 * 删除学生成绩报告单信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward delXscjbgdxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		request.setAttribute("result", service.delXscjbgdxx(model));
		return queryXscjbgdxx(mapping, form, request, response);
	}
	
	/** 
	 * 显示学生或学院用户修改学生信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward stuModiInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxglService service = new XsxxglService();
		XsxxZgkdService zgkdService = new XsxxZgkdService();
		User user = getUser(request);
		String userName = user.getUserName();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = user.getUserType();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = "";
		
		if(userOnLine != null && "student".equalsIgnoreCase(userOnLine)){
			yhjs = userOnLine;
			xh = userName;			
		}else{
			xh = request.getParameter("xh");
		}
		
		//除学号外学生可维护的字段
		String zdList = service.getzdNoXh(yhjs);
		//学生可维护的字段的原始值
		HashMap<String, String> rs=new HashMap<String, String>();
		rs = service.getStuAndFamily(xh,yhjs);
		HashMap<String, String> rs1 = rs;
		//学生学习经历信息
		rs.putAll(service.getXsxxjlb(xh));
		//判断是否在设定的修改时间段内		
		request.setAttribute("sqsjFlag", service.isXsxxxgsj());//false:不在申请时间内
		if(!"stu".equalsIgnoreCase(user.getUserType())){
			request.setAttribute("message", "本页面只有学生和"+Base.YXPZXY_KEY+"用户可以访问");
			return new ActionForward("/prompt.do",false);
		}
		if(!service.isXsxxxgsj() 
				&& !"admin".equalsIgnoreCase(user.getUserType()) 
				&& !"xx".equalsIgnoreCase(user.getUserType())){
			request.setAttribute("message", "现在不在修改时间之内，暂时不能修改");
			return new ActionForward("/prompt.do",false);
		}
		//判断学生是否可修改信息
		if("stu".equalsIgnoreCase(user.getUserType()) && !service.checkXsxgqx(xh)){
			request.setAttribute("errMsg", "学生信息修改已经审核通过，暂时不能修改");
		}
		//判断是否是根据老师分配字段的字段权限修改
		String dzbzFlag = service.getXsxxCs().get("dzxxqdm");
		//新版本
		String version = Base.getEdition();
		//学生修改信息后是否需要审核标志
		String xsxxshFlag = Base.initProperties.get("xsxxNeedAudi");
		//学生信息修改后是否需要审核
		xsxxshFlag = service.getXsxxCs().get("xsxgxxsfsh");
		//提示信息
		String message = "";
		if("yes".equalsIgnoreCase(xsxxshFlag)){	
			//获取审核结果
			String shjg =zgkdService.getXxshjg(xh);
			//如果信息已经修改过了，提示审核信息
			message = service.getXsxxxgtsxx(xh,shjg);
			if("未审核".equalsIgnoreCase(shjg)){
				//未审核请，查询修改的信息
				rs.putAll(zgkdService.getNewValue(xh,false));
			}
			request.setAttribute("xgzd", zgkdService.getXgzdxx(xh).get("xgzd"));
		}
		if("new".equalsIgnoreCase(version)){
			dzbzFlag = "yes";
		}
		if("yes".equalsIgnoreCase(dzbzFlag)){//地址信息采用标准码
			String syd = rs.get("syd");			
			String jg = rs.get("jg");
			String hkszd = rs.get("hkszd");	
			if(!Base.isNull(syd)){
				String[] arrDq = syd.split("/");
				rs.put("syshen", (arrDq.length>=1)?arrDq[0]:"");
				rs.put("syshi", (arrDq.length>=2)?arrDq[1]:"");
				rs.put("syxian", (arrDq.length>=3)?arrDq[2]:"");
			}
			if(!Base.isNull(jg)){
				String[] arrDq = jg.split("/");
				rs.put("jgshen", (arrDq.length>=1)?arrDq[0]:"");
				rs.put("jgshi", (arrDq.length>=2)?arrDq[1]:"");
				rs.put("jgxian", (arrDq.length>=3)?arrDq[2]:"");
			}
			if(!Base.isNull(hkszd)){
				String[] arrDq = hkszd.split("/");
				rs.put("hkshen", (arrDq.length>=1)?arrDq[0]:"");
				rs.put("hkshi", (arrDq.length>=2)?arrDq[1]:"");
				rs.put("hkxian", (arrDq.length>=3)?arrDq[2]:"");
			}
			
			String shen = rs.get("syshen");
			shen = StringUtils.isNull(shen) ? "9999999" : shen;
			
			String jgshen = rs.get("jgshen");
			jgshen = StringUtils.isNull(jgshen) ? "9999999" : jgshen;
			
			String hkshen = rs.get("hkshen");
			hkshen = StringUtils.isNull(hkshen) ? "9999999" : hkshen;
			
			request.setAttribute("ssList", service.getSsList());
			request.setAttribute("shiList", service.getShiXianList(shen).get("shiList"));
			request.setAttribute("xianList", service.getShiXianList(shen).get("xianList"));
			request.setAttribute("jgshiList", service.getShiXianList(jgshen).get("shiList"));
			request.setAttribute("jgxianList", service.getShiXianList(jgshen).get("xianList"));
			request.setAttribute("hkshiList", service.getShiXianList(hkshen).get("shiList"));
			request.setAttribute("hkxianList", service.getShiXianList(hkshen).get("xianList"));
			// ------------2010/5/14 edit by luojw -------------
			String xxdm = StandardOperation.getXxdm();
			//南京技师，贵州大学
			if (xxdm.equalsIgnoreCase(Globals.XXDM_NJJS)
					||xxdm.equalsIgnoreCase(Globals.XXDM_GUIZHDX)) {
				// 户口
				request.setAttribute("hkshiList", service.getShiXianList(
						rs.get("hkshen")).get("shiList"));
				request.setAttribute("hkxianList", service.getShiXianList(
						rs.get("hkshi")).get("xianList"));

				XsxxZjgszyjsxyService xsxxService = new XsxxZjgszyjsxyService();
				List xsccList = xsxxService.getDmList("dtjs_xsccb",
						new String[] { "xsccdm", "xsccmc" });
				List hkxzList = xsxxService.getDmList("xsxx_hkxzb",
						new String[] { "dm", "mc" });
				List rxqwhcdList = xsxxService.getDmList("xsxx_rxqwhcdb",
						new String[] { "dm", "mc" });

				request.setAttribute("xsccList", xsccList);
				request.setAttribute("hkxzList", hkxzList);
				request.setAttribute("rxqwhcdList", rxqwhcdList);
			}
			// -------------------end---------------------
		}
		
		request.setAttribute("rs", rs);
		request.setAttribute("rs1", rs1);
		request.setAttribute("message", message);
		request.setAttribute("zdList", zdList);
		request.setAttribute("yhList", service.getYhList());//银行信息列表GlobalsVariable.XTWH_PYCC_LIST
		appendProperties(request,"","","");
		request.setAttribute("xjztList", service.getList("xjztList"));
		request.setAttribute("jtgxList", service.getJtgxList());
		//培养层次
		request.setAttribute("xsccList", service.getList(GlobalsVariable.XTWH_PYCC_LIST));
		request.setAttribute("kslbList", service.getList(GlobalsVariable.XTWH_KSLB_LIST));//考生类别
		request.setAttribute("rxfsList", service.getList(GlobalsVariable.XTWH_RXFS_LIST));//入学方式
		request.setAttribute("pyfsList", service.getList(GlobalsVariable.XTWH_PYFS_LIST));//培养方式
		request.setAttribute("xsxxshFlag", xsxxshFlag);
		request.setAttribute("xxdm", Base.xxdm);
		
		return mapping.findForward("new".equalsIgnoreCase(version) ? "xsUpdateXsxx" : "stumodi");
	}
	
	/** 
	 * 学生和学院用户修改后的信息保存
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward saveStuinfoModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		XsxxZgkdService service = new XsxxZgkdService();
		XsxxglService xsxxglService = new XsxxglService();
		User user = getUser(request);
		String userOnLine = session.getAttribute("userOnLine").toString();
		String yhjs = session.getAttribute("userType").toString();
		yhjs = yhjs !=null && yhjs.equalsIgnoreCase("admin") ? "xx" : yhjs;
		String xh = request.getParameter("xh");
		//修改字段
		String xgzd = request.getParameter("xgzd");
		
		boolean flag = false;
		if(userOnLine !=null && userOnLine.equalsIgnoreCase("student")){
			yhjs = "student";
		}
		
		//信息需审核
		boolean audiFlag = false;
		//学生修改信息后是否需要审核标志
		String xsxxshFlag = Base.initProperties.get("xsxxNeedAudi");
		//学生信息修改后是否需要审核
		xsxxshFlag = xsxxglService.getXsxxCs().get("xsxgxxsfsh");
		if("yes".equalsIgnoreCase(xsxxshFlag)){
			audiFlag = true;
		}
		if(audiFlag){
			yhjs = "student";
			xh = user.getUserName();
			flag = service.saveStuinfoModi(yhjs,xh,request);
			service.saveXgzdxx(xh, xgzd, user);
		}else if(Globals.XXDM_BJQNZZXY.equalsIgnoreCase(Base.xxdm) && "stu".equalsIgnoreCase(user.getUserType())){
			//北京青年政治学生修改信息学院审核
			yhjs = "student";
			xh = user.getUserName();
			flag = service.saveStuinfoModi(yhjs,xh,request);
		}else{
			flag = service.saveStuinfoByXy(xh, request);//学生修改个人信息
		}
//		if(Globals.XXDM_BJQNZZXY.equalsIgnoreCase(Base.xxdm)){
			//北京青年政治
			HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
			if(flag){
				xsxxglService.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
				xsxxglService.saveXsshgx(xh,valueMap);//保存学生社会关系信息
			}
//		}
		//if(Globals.XXDM_TJJTZYJSXY.equalsIgnoreCase(xxdm)){//天津交通职业学院			
			//保存学生学习简历
			if(flag){
				flag = service.saveXsxxjlxx(xh, request);
			}
		//}
		request.setAttribute("result", flag);
		request.setAttribute("xh", xh);
		request.setAttribute("jtgxList", xsxxglService.getJtgxList());
		request.setAttribute("xsxxshFlag", xsxxshFlag);
		//培养层次
		request.setAttribute("xsccList", xsxxglService.getList(GlobalsVariable.XTWH_PYCC_LIST));
		request.setAttribute("kslbList", xsxxglService.getList(GlobalsVariable.XTWH_KSLB_LIST));//考生类别
		request.setAttribute("rxfsList", xsxxglService.getList(GlobalsVariable.XTWH_RXFS_LIST));//入学方式
		request.setAttribute("pyfsList", xsxxglService.getList(GlobalsVariable.XTWH_PYFS_LIST));//培养方式
		return stuModiInfo(mapping, form, request, response);
	}
	
	/**
	 * 学生成绩报告单学费设置
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception  
	 * */
	public ActionForward xscjbgdzyxfsz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		List<String[]> rs = service.queryXfszxx(model);
		
		request.setAttribute("rs", rs);		
		request.setAttribute("rsNum", rs.size());
		request.setAttribute("topTr", service.getXfszTopTr());
		appendProperties(request, model.getXydm(), model.getZydm(), model.getNj());
		return mapping.findForward("zyxfsz");
	}
	
	/**
	 * 显示学费设置页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception  
	 * */
	public ActionForward showXfsz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		
		appendProperties(request, model.getXydm(), model.getZydm(), model.getNj());
		return mapping.findForward("xfsz");
	}
	
	/**
	 * 保存学费设置信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward saveXfsz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		CommanForm model = (CommanForm) form;
		XsxxglService service = new XsxxglService();
		
		request.setAttribute("result", service.saveXfsz(model));
		appendProperties(request, model.getXydm(), model.getZydm(), model.getNj());
		return mapping.findForward("xfsz");
	}
	
	/**
	 * 成绩报告单连续打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward cjbgdlxdy(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxglService service = new XsxxglService();
		CommanForm model = (CommanForm) form;
		String xh1 = request.getParameter("xh1");
		String xh2 = request.getParameter("xh2");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");
		List<HashMap<String,String>> listOne = new ArrayList<HashMap<String,String>>();
		List<HashMap<String,String>> listTow = new ArrayList<HashMap<String,String>>();
		
		
		HashMap<String, String> stuInfoOne = service.getXfje(xh1);//dao.getMap(" select xm,bjmc,(select xfje from view_xsxxgl_xfszb b where a.bjdm=b.bjdm)xfje from view_xsjbxx a  where xh=?", new String[]{xhOne},new String[]{"xm","bjmc","xfje"});
		HashMap<String, String> stuInfoTow = service.getXfje(xh2);//dao.getMap(" select xm,bjmc,(select xfje from view_xsxxgl_xfszb b where a.bjdm=b.bjdm)xfje from view_xsjbxx a where xh=?", new String[]{xhTow},new String[]{"xm","bjmc","xfje"});
		stuInfoOne.putAll(service.queryXscjbgdxxOne(xn+xq+xh1));
		stuInfoTow.putAll(service.queryXscjbgdxxOne(xn+xq+xh2));
		
		model.setXn(xn);
		model.setXq(xq);
		if(StringUtils.isNotNull(xh1)){
			model.setXh(xh1);			
			listOne = service.queryXscjbForPrint(model);
		}
		
		if(StringUtils.isNotNull(xh2)){
			model.setXh(xh2);
			listTow = service.queryXscjbForPrint(model);
		}
		
		request.setAttribute("stuInfoOne",stuInfoOne);
		request.setAttribute("stuInfoTow", stuInfoTow);
		request.setAttribute("listOne", listOne);
		request.setAttribute("listTow", listTow);
		
		request.setAttribute("xn",xn);
		request.setAttribute("xq",xq);
		request.setAttribute("xqmc",service.getXqmc(xq));
		request.setAttribute("rs", service.selectCjbgddysjxx());
		return mapping.findForward("cjbgdlxdy");
	}
	
	/**
	 * 常州信息成绩单打印
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward czxxCjdPrint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		String pkV = request.getParameter("pkV");
		CommanForm model = (CommanForm) form;
		model.setPkV(pkV.split("!!"));
		XsxxglService service = new XsxxglService();
		model.setXn(StringUtils.isNull(model.getXn()) ? Base.currXn : model.getXn());
		model.setXq(StringUtils.isNull(model.getXq()) ? Base.currXq : model.getXq());
		
		request.setAttribute("xnList", Base.getXnndList());
		request.setAttribute("xqList", Base.getXqList());
		request.setAttribute("rs", service.queryXscjb(model));
		request.setAttribute("pkValue", pkV);
		return mapping.findForward("czxxCjdPrint");
	}
	
	/**
	 * 学生信息登记
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward xsxxdj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		HttpSession session = request.getSession();
		XsxxdjForm model = (XsxxdjForm)form;
		XsxxglService service = new XsxxglService();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName").toString();
		String go = request.getParameter("go");
		String type = request.getParameter("type");
		String tableName = "xsxxdjb";
		String viewName = "view_xsxxdjb";
		
		if ("xy".equalsIgnoreCase(session.getAttribute("userType").toString())
				&& !"true".equalsIgnoreCase(session.getAttribute("fdyQx").toString())) {
			model.setQueryequals_xydm(session.getAttribute("userDep").toString());
		}
		
		if("student".equalsIgnoreCase(userOnLine)){//学生登陆
			model.setQuerylike_xh(userName);
		}
		
		if("go".equalsIgnoreCase(go)){//查询数据
			String[] outputColumn = {"pkValue", "xh", "xm", "xb", "nj", "xymc", 
					                 "zymc", "bjmc"};
			this.selectPageDataByPagination(request, form, tableName, viewName, outputColumn);
		}
		if("del".equalsIgnoreCase(type)){//信息删除
			this.deleteOperation(request, tableName);
			service.deleteXsxxjl(request);//删除学生学习经历信息
		}
		request.setAttribute("path", "xjxxdj.do?method=xjxxdj");
		FormModleCommon.commonRequestSet(request);//读写权信息
		//加载学院专业班级列表信息
		FormModleCommon.setNjXyZyBjListForFdyBzr(request, 
				                                 model.getQueryequals_xydm(),
				                                 model.getQueryequals_zydm(), 
				                                 model.getQueryequals_bjdm(), 
				                                 model.getQueryequals_nj());
		request.setAttribute("realTable", tableName);
		return mapping.findForward("success");
	}
	
	 
	/**
	 * 学生信息登记增加
	 * @return ActionForward
	 */
	public ActionForward xsxxdjAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			{
		HttpSession session = request.getSession();		
		XsxxglService xsxxglService = new XsxxglService();
		String type = request.getParameter("type");
		String xh = request.getParameter("xh");
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName").toString();
		HashMap<String, String> rs = new HashMap<String, String>();
		
		if("student".equalsIgnoreCase(userOnLine)){//学生登陆
			xh = userName;
		}
		
		if("save".equalsIgnoreCase(type)){//信息保存
			xh = request.getParameter("save_xh");
			this.insertOperation(request, "xsxxdjb");//保存学生登记基本信息
			HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
			
			xsxxglService.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
			String pkValue = xh;
			
			selectPageDataByOne(request, "xsxxdjb", "view_xsxxdjb", pkValue);//查询单个学生登记信息
			rs = (HashMap<String, String>) request.getAttribute("rs");
		}
		rs.putAll(xsxxglService.selectStuinfo(xh));//查询学生基本信息		
		rs.put("save_xh", rs.get("xh"));
		request.setAttribute("rs", rs);
		
		FormModleCommon.commonRequestSet(request);//读写权信息
		return mapping.findForward("xsxxdjAdd");
	}	
	
	/**
	 * 学生信息登记修改
	 * @return ActionForward
	 */
	public ActionForward xsxxdjModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		XsxxglService xsxxglService = new XsxxglService();
		HashMap<String, String> rs = new HashMap<String, String>();
		String type = request.getParameter("type");
		
		if("save".equalsIgnoreCase(type)){//信息修改
			this.updateOperation(request, "xsxxdjb");
			String xh = request.getParameter("save_xh");
			HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
			xsxxglService.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
		}
		
		String pkValue = request.getParameter("save_xh");			
		selectPageDataByOne(request, "xsxxdjb", "view_xsxxdjb", pkValue);
		rs = (HashMap<String, String>) request.getAttribute("rs");
		rs.putAll(xsxxglService.selectStuinfo(rs.get("xh")));//查询学生基本信息
		
		request.setAttribute("rs", rs);
		FormModleCommon.commonRequestSet(request);//读写权信息
		request.setAttribute("type", type);
		return mapping.findForward("xsxxdjModi");
	}
	
	/**
	 * 学生信息登记导出
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward xsxxdjExp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		String[] outputColumn = {"xh", "xm", "xb", "nj", "xz", "xydm", "xymc",
				                 "zydm", "zymc", "bjdm", "bjmc", "csd", "xuex",
				                 "sfsty", "jrgqtsj", "tytysj", "zybdysj",
				                 "rxqjkzk", "rxhjkzk", "ywbs", "sjdh", "qqhm", 
				                 "zjxy", "txdz", "sxyy", "sxzsdz", "zyjnzs", "hksfqr",
				                 "jcqk", "zwjs"};
		this.expPageData(request, response, "xsxxdjb", "view_xsxxdjb", outputColumn);
		return mapping.findForward("");
	}
	
	/**
	 * 打印学生信息登记表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward printXsdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		XsxxglService service = new XsxxglService();
		
		String pkValue = request.getParameter("pkValue");//主键值
		
		this.selectPageDataByOne(request, "xsxxdjb", "view_xsxxdjb", pkValue);//维护的学生登记信息
//		request.setAttribute("rs", );
		request.setAttribute("stuRs", service.selectStuinfo(pkValue));//学生基本信息
		request.setAttribute("jtxxRs", service.getStuJtxx(pkValue));//学生家庭信息	
		
		List<HashMap<String, String>> xxjl = service.getXsxxjl(pkValue);
		request.setAttribute("xxjl", xxjl);//学生学习经历信息
		request.setAttribute("xxjlSize", xxjl.size());//学生学习经历记录数
		request.setAttribute("sj", GetTime.getNowTime());
		return mapping.findForward("xsdjb");
	}
	
	/**
	 * 学生学籍信息登记
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward xjxxdj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		HttpSession session = request.getSession();
		XsxxdjForm model = (XsxxdjForm)form;
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName").toString();
		String go = request.getParameter("go");
		String type = request.getParameter("type");
		String tableName = "xsxx_xjxxdjb";
		String viewName = "view_xsxx_xjxxdjb";
		
		if ("xy".equalsIgnoreCase(session.getAttribute("userType").toString())
				&& !"true".equalsIgnoreCase(session.getAttribute("fdyQx").toString())) {
			model.setQueryequals_xydm(session.getAttribute("userDep").toString());
		}
		
		if("student".equalsIgnoreCase(userOnLine)){//学生登陆
			model.setQuerylike_xh(userName);
		}
		
		if("go".equalsIgnoreCase(go)){//查询数据
			String[] outputColumn = {"pkValue", "xh", "xm", "xb", "nj", "xymc", 
					                 "zymc", "bjmc"};
			this.selectPageDataByPagination(request, form, tableName, viewName, outputColumn);
		}
		if("del".equalsIgnoreCase(type)){//信息删除
			this.deleteOperation(request, tableName);
			//service.deleteXsxxjl(request);//删除学生学习经历信息
		}
		
		FormModleCommon.commonRequestSet(request);
		//加载学院专业班级列表信息
		FormModleCommon.setNjXyZyBjListForFdyBzr(request, 
				                                 model.getQueryequals_xydm(),
				                                 model.getQueryequals_zydm(), 
				                                 model.getQueryequals_bjdm(), 
				                                 model.getQueryequals_nj());
		request.setAttribute("realTable", tableName);
		return mapping.findForward("success");
	}
	
	 
	/**
	 * 学生学籍信息登记增加
	 * @return ActionForward
	 * @throws IOException 
	 * @throws Exception 
	 */
	public ActionForward xjxxdjAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception
			{
		XsxxdjForm model = (XsxxdjForm)form;
		HttpSession session = request.getSession();		
		XsxxglService xsxxglService = new XsxxglService();
		String type = request.getParameter("type");
		String xh = request.getParameter("xh");
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName").toString();
		HashMap<String, String> rs = new HashMap<String, String>();
		
		if("student".equalsIgnoreCase(userOnLine)){//学生登陆
			xh = userName;
		}
		
		if("save".equalsIgnoreCase(type)){//信息保存
			xh = request.getParameter("save_xh");
			this.insertOperation(request, "xsxx_xjxxdjb");//保存学生登记基本信息
//			HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
//			
//			xsxxglService.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
			String pkValue = xh;
			
			selectPageDataByOne(request, "xsxx_xjxxdjb", "view_xsxx_xjxxdjb", pkValue);//查询单个学生登记信息
			rs = (HashMap<String, String>) request.getAttribute("rs");
			//文件上传
			HashMap<String,String> map = FileManage.fileUpload(model.getBkzp(), "/upload", 10);
			
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "bkzp", "xh", pkValue, map);				
			}
			//文件上传
			map = FileManage.fileUpload(model.getRxzp(), "/upload", 10);
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "rxzp", "xh", pkValue, map);				
			}
			//文件上传
			map = FileManage.fileUpload(model.getByzp(), "/upload", 10);
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "byzp", "xh", pkValue, map);				
			}
			
		}
		rs.putAll(xsxxglService.selectStuinfo(xh));//查询学生基本信息		
		rs.put("save_xh", rs.get("xh"));
		request.setAttribute("rs", rs);
		
		request.setAttribute("path", "xjxxdj.do?method=xjxxdj");
		FormModleCommon.commonRequestSet(request);//读写权信息
		initSelectData(request);//加载页面下拉列表的数据
		return mapping.findForward("xjxxdjAdd");
	}	
	
	/**
	 * 学生学籍信息登记修改
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xjxxdjModi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		XsxxdjForm model = (XsxxdjForm)form;
		XsxxglService xsxxglService = new XsxxglService();
		HashMap<String, String> rs = new HashMap<String, String>();
		String type = request.getParameter("type");
		
		if("save".equalsIgnoreCase(type)){//信息修改
			this.updateOperation(request, "xsxx_xjxxdjb");
			String xh = request.getParameter("save_xh");
			HashMap<String, String[]> valueMap = this.getValueArrayMap(request, "saveb_");//获取学生学习经历信息
//			xsxxglService.saveXsxxjl(xh,valueMap);//保存学生学习经历信息
			//文件上传
			HashMap<String,String> map = FileManage.fileUpload(model.getBkzp(), "/upload", 10);
			
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "bkzp", "xh", xh, map);				
			}
			//文件上传
			map = FileManage.fileUpload(model.getRxzp(), "/upload", 10);
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "rxzp", "xh", xh, map);				
			}
			//文件上传
			map = FileManage.fileUpload(model.getByzp(), "/upload", 10);
			if (!Base.isNull(map.get("errMsg"))) {
				request.setAttribute("errMsg", map.get("errMsg"));
			} else if(!map.isEmpty()){
				FileManage.saveFileInfo("xsxx_xjxxdjb", "", "byzp", "xh", xh, map);				
			}
		}
		
		String pkValue = request.getParameter("save_xh");			
		selectPageDataByOne(request, "xsxx_xjxxdjb", "view_xsxx_xjxxdjb", pkValue);
		rs = (HashMap<String, String>) request.getAttribute("rs");
		rs.putAll(xsxxglService.selectStuinfo(rs.get("xh")));//查询学生基本信息
		
		request.setAttribute("rs", rs);
		request.setAttribute("path", "xjxxdj.do?method=xjxxdj");
		FormModleCommon.commonRequestSet(request);//读写权信息
		request.setAttribute("type", type);
		initSelectData(request);//加载页面下拉列表的数据
		return mapping.findForward("xjxxdjModi");
	}
	
	/**
	 * 学生学籍信息登记导出
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward xjxxdjExp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		StudentInfoService service = new StudentInfoService();
		String expColumn = request.getParameter("mappingItems");//所有用户选择的导出字段
		
		String[] outputColumn = service.getDczd(expColumn).split(",");
		this.expPageData(request, response, "xsxx_xjxxdjb", "view_xsxx_xjxxdjb", outputColumn);
		return mapping.findForward("");
	}
	
	/**
	 * 打印学生学籍信息登记表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward printXjdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		XsxxglService service = new XsxxglService();
		
		String pkValue = request.getParameter("pkValue");//主键值
		
		this.selectPageDataByOne(request, "xsxx_xjxxdjb", "view_xsxx_xjxxdjb", pkValue);//维护的学生登记信息
//		request.setAttribute("rs", );
		request.setAttribute("stuRs", service.selectStuinfo(pkValue));//学生基本信息
		request.setAttribute("jtxxRs", service.getStuJtxx(pkValue));//学生家庭信息	
		
		List<HashMap<String, String>> xxjl = service.getXsxxjl(pkValue);
		request.setAttribute("xxjl", xxjl);//学生学习经历信息
		request.setAttribute("xxjlSize", xxjl.size());//学生学习经历记录数
		request.setAttribute("sj", GetTime.getNowTime());
		return mapping.findForward("xjdjb");
	}
	
	/**
	 * 打印天津交通职业技术学院学生信息登记表
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 * */
	public ActionForward printTjjtzyXsdjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		XsxxglService service = new XsxxglService();
		
		String pkValue = request.getParameter("xh");//主键值		
		this.selectPageDataByOne(request, "xsxx_xsxxjlb", "xsxx_xsxxjlb", pkValue);//学生学习经历信息		
		HashMap<String, String> rs = (HashMap<String, String>)request.getAttribute("rs");
		
		rs.putAll(service.selectStuinfo(pkValue));//学生基本信息
		rs.putAll(service.getStuJtxx(pkValue));//学生家庭信息	
		request.setAttribute("rs", rs);
		return mapping.findForward("djb");
	}
	
	/**
	 * 附件下载 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward downLoadFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {		
		String tableName = "xsxx_xjxxdjb";
		String pkKey = "xh";
		String pkValue = request.getParameter("pkValue");
		String filePath = DealString.toGBK(request.getParameter("filePath"));
		String fileName = DealString.toGBK(request.getParameter("fileName"));
		
		if (FileManage.downLoadFile(filePath, fileName, response)) {
			return null;
		} else {
			request.setAttribute("errMsg", "文件不存在或者已删除!");
			FileManage.delFileInfo(tableName, "bkzp", "", pkKey, pkValue);
			return new ActionForward("/errMsg.do",false);
		}
		
	}
	
	/**
	 * 删除附件
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward deleteFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		String filePath = request.getParameter("filepath");
		String tableName = "xsxx_xjxxdjb";
		String url ="";
		String doType = request.getParameter("doType");
		String pk = "xh";
		String pkValue = request.getParameter("pkValue");
		String zd = request.getParameter("zd");

		boolean result = false;
		
		File f = new File(filePath);
		// 判断附件是否存在，若存在则删除
		if (f.exists()) {
			f.delete();
		} 
		
		result = FileManage.delFileInfo(tableName, "", zd, pk, pkValue);
		request.setAttribute("message", result ? "操作成功!" : "操作失败!");
		
		return new ActionForward("/xjxxdj.do?method=" + url + "&doType="
				+ doType+"&pk="+pkValue, false);
	}
	
	/**
	 * 初始化数据列表
	 * @param request
	 * */
	public void initSelectData(HttpServletRequest request){
		XsxxglService service = new XsxxglService();
		//省列表
		request.setAttribute("ssList",service.getSsList());
		//婚姻状况
		request.setAttribute("hyzkList",service.initXjxxList("yhzk"));
		//国别
		request.setAttribute("gbList",service.initXjxxList("gb"));
		//校区
		request.setAttribute("xqList",service.initXjxxList("xq"));
		//学生类别
		request.setAttribute("xslbList",service.initXjxxList("xslb"));
		//证件类型
		request.setAttribute("zjlxList",service.initXjxxList("zjlx"));
		//港澳台侨
		request.setAttribute("gatqList",service.initXjxxList("gatq"));
		//专业科类
		request.setAttribute("zyklList",service.initXjxxList("zykl"));
		//培养类型
		request.setAttribute("pylxList",service.initXjxxList("pylx"));
		//学习形式
		request.setAttribute("xxxsList",service.initXjxxList("xxxs"));
		//获得学历方式
		request.setAttribute("hdxlfsList",service.initXjxxList("hdxlfs"));
		//学习方式
		request.setAttribute("xxfsList",service.initXjxxList("xxfs"));
		//学生来源
		request.setAttribute("xslyList",service.initXjxxList("xsly"));
		//州别
		request.setAttribute("zbList",service.initXjxxList("zb"));
		//就读方式
		request.setAttribute("jdfsList",service.initXjxxList("jdfs"));
		//外语语种
		request.setAttribute("wyyzList",service.initXjxxList("wyyz"));
	}
	
	/**
	 * 学生信息详细页面显示配置
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward xsxxpz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		
		if(!"new".equalsIgnoreCase(Base.getInitProperties().get("edition"))){
			request.setAttribute("yhInfo", "系统配置不正确！");
			return new ActionForward("/yhInfo.do", false); 
		}
		
		String doType = request.getParameter("doType");
		XsxxglService service = new XsxxglService();
		
		if("save".equalsIgnoreCase(doType)){
			XsxxpzModel model = new XsxxpzModel();
			String[] ename = request.getParameterValues("ename");
			String[] cname = request.getParameterValues("cname");
			String[] xssx = request.getParameterValues("xssx");
			
			String[] sfxs = new String[ename.length];
			
			for(int i=0; i<ename.length; i++){
				sfxs[i] = request.getParameter(ename[i]);
			}
			
			model.setEname(ename);
			model.setCname(cname);
			model.setSfxs(sfxs);
			model.setXssx(xssx);
			
			String message = service.savePages(model) ? "操作成功！" : "操作失败！";
			request.setAttribute("message", message);
		}
		
		
		List<HashMap<String, String>> pages = service.getPagesList();
		
		request.setAttribute("pages", pages);
		request.setAttribute("path", "xsxxgl.do?method=xsxxpz");
		request.setAttribute("title", FormModleCommon.getWriteAbleAndTitle(request)[1]);
		return mapping.findForward("xsxxpz");
	}
}