/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.studentInfo.csmzzyjsxy;

import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.comm.search.SearchService;
import xgxt.studentInfo.service.StudentInfoService;

public class StudentHkztAction extends DispatchAction {
	
	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws NoSuchMethodException
	 * @throws InvocationTargetException
	 * @throws IllegalAccessException
	 * @throws SecurityException
	 * @throws IllegalArgumentException
	 */
	public ActionForward hkztQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IllegalArgumentException, SecurityException,
			IllegalAccessException, InvocationTargetException,
			NoSuchMethodException,Exception {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		StudentHkztForm model = (StudentHkztForm) form;
		StudentInfoCsmzService service = new StudentInfoCsmzService();
		String bjKey = "";
		List rs = null;
		
		String writeAble = Base.getWriteAble(request);
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();		
		String userOnLine = session.getAttribute("userOnLine").toString();
		String go = request.getParameter("go");
		
		String xydm = model.getXydm();
		String xh = model.getXh();
		xh = userOnLine.equalsIgnoreCase("student") ? session.getAttribute("userName").toString() : xh;
		
		//学院用户只能查询本学院信息
		if(userType.equalsIgnoreCase("xy")){
			xydm = userDep;
			model.setXydm(xydm);			
		}	
		
		bjKey = service.getBjKey(model);
		xydm = xydm==null || "".equalsIgnoreCase(xydm) ? "" : xydm;
		
		//将字符转换成GBK
		model.setXm(DealString.toGBK(model.getXm()));
		model.setSfjf(DealString.toGBK(model.getSfjf()));
		model.setXh(xh);
		
		if(go!=null && "go".equalsIgnoreCase(go)){
			model = service.queryHkztInfo(model, request);
			//数据集合
			rs = model.getRs();
			//表头
			List topTr = model.getTopTr();
			request.setAttribute("rs", rs);
			request.setAttribute("topTr", topTr);
			request.setAttribute("rsNum", rs.size());
			
			request.setAttribute("searchTj", model.getSearchModel());
		}
		
		request.setAttribute("xyList",Base.getXyList());
		request.setAttribute("zyList",Base.getZyMap().get(xydm));
		request.setAttribute("bjList",Base.getBjMap().get(bjKey));
		request.setAttribute("njList",Base.getNjList());
		//户口状态列表
		request.setAttribute("hkztList",service.getHkztList());
		request.setAttribute("writeAble",writeAble);
		return mapping.findForward("success");
	}
	
	/**
	 * 增加户口状态信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward addHkztInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentInfoCsmzService service = new StudentInfoCsmzService();
		StudentHkztForm model = (StudentHkztForm) form;
		String doType = request.getParameter("doType");
		String writeAble = Base.getWriteAble(request);
		boolean flag = false;
		
		model.setSfjf(DealString.toGBK(model.getSfjf()));
		
		if(doType!=null && doType.equalsIgnoreCase("add")){
			flag = service.addHkztInfo(model, request);
			request.setAttribute("result", flag);
		}		
		request.setAttribute("hkztList", service.getHkztList());
		request.setAttribute("rs", model);
		request.setAttribute("writeAble", writeAble);
		return mapping.findForward("hkztAdd");
	}
	
	/**
	 * 增加户口状态信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward showHkzt(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentInfoService xsxx = new StudentInfoService();
		StudentInfoCsmzService service = new StudentInfoCsmzService();
//		StudentHkztForm model = (StudentHkztForm) form;
		String xh = request.getParameter("xh");
//		String doType = request.getParameter("doType");
//		String writeAble = Base.getWriteAble(request);
//		boolean flag = false;
		
//		model.setSfjf(DealString.toGBK(model.getSfjf()));
		
//		if(doType!=null && doType.equalsIgnoreCase("add")){
//			flag = service.addHkztInfo(model, request);
//			request.setAttribute("result", flag);
//		}		
		request.setAttribute("rs", xsxx.getStuInfo(xh));
		request.setAttribute("hkztList", service.getHkztList());
//		request.setAttribute("rs", model);
		request.setAttribute("writeAble", "yes");
		return mapping.findForward("hkztAdd");
	}
	
	/**
	 * Method 修改户口状态信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	@SuppressWarnings("unchecked")
	public ActionForward modHkztInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		StudentInfoCsmzService service = new StudentInfoCsmzService();
		StudentHkztForm model = (StudentHkztForm) form;		
		String writeAble = Base.getWriteAble(request);
		boolean flag = false;
		HashMap<String, String> map = new HashMap<String, String>();
		
		String doType = request.getParameter("doType");
		String xh = request.getParameter("xh").trim();
		
		model.setSfjf(DealString.toGBK(model.getSfjf()));
		model.setXh(xh);
		
		map = service.getHkztInfoByPk(xh);
		
		if(doType!=null && doType.equalsIgnoreCase("mod")){
			model = service.modHkztInfo(model, request);
			flag = model.isFlag();
			map = model.getMap();
			request.setAttribute("result", flag);
		}	
		
		request.setAttribute("hkztList", service.getHkztList());
		request.setAttribute("rs", map);
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("doType", request.getParameter("doType"));
		return mapping.findForward("hkztMod");
	}
	
	/**
	 * Method 删除户口状态信息
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws NoSuchMethodException
	 * @throws InvocationTargetException
	 * @throws IllegalAccessException
	 * @throws SecurityException
	 * @throws IllegalArgumentException
	 */
	public ActionForward delHkztInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws IllegalArgumentException, SecurityException,
			IllegalAccessException, InvocationTargetException,
			NoSuchMethodException,Exception {
		StudentInfoCsmzService service = new StudentInfoCsmzService();
		StudentHkztForm model = (StudentHkztForm) form;
		boolean flag = false;
		String xh = request.getParameter("xh");
		// String xydm = model.getXydm();
		// String bjKey = service.getBjKey(model);
		model.setXh(xh);

		model = service.delHkztInfo(model, request);

		flag = model.isFlag();
		model.setXh("");
		request.setAttribute("result", flag);
		return this.hkztQuery(mapping, form, request, response);

	}
	
	/**
	 * 数据导出
	 * */
	public ActionForward expData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		StudentHkztForm model = (StudentHkztForm) form;
		StudentInfoCsmzService service = new StudentInfoCsmzService();
		if("xy".equalsIgnoreCase(request.getSession().getAttribute("userType").toString())){
			model.setXydm(request.getSession().getAttribute("userDep").toString());
		}
		//导出数据 
		service.expDate(model, response);		
		return mapping.findForward("");
	}
	
}

