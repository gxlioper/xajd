/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.jxgl;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import xgxt.DAO.DAO;
import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.form.CommanForm;
import xgxt.utils.dealDate;
import xgxt.wjsc.WjscDataAccessAction;

/**
 * MyEclipse Struts Creation date: 08-23-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class JxglAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		String myAction = mapping.getParameter();
		ActionForward myFwd = null;
		try {
			String writeAble = Base.getWriteAble(request);

			if ("ArmyCalendarArrange".equalsIgnoreCase(myAction)) { // 军训日程安排
				myFwd = JxglOperationAction.ArmyCalendarArrange(mapping, form,
						request, response);
			} else if ("viewArmyCalendar".equalsIgnoreCase(myAction)) { // 维护军训日程信息
				myFwd = JxglOperationAction.ArmyCalendarManager(mapping, form,
						request, response);
			} else if ("ArmyCalendarSave".equalsIgnoreCase(myAction)) { // 保存军训日程信息
				myFwd = JxglOperationAction.SaveArmyCalendar(mapping, form,
						request, response);
			} else if ("ArmyStuInfo".equalsIgnoreCase(myAction)) { // 军训名单维护
				myFwd = JxglOperationAction.ArmyStuInfo(mapping, form, request,
						response);
			} else if ("viewArmyStu".equalsIgnoreCase(myAction)) { // 维护军训名单
				myFwd = JxglOperationAction.ArmyStuInfoManager(mapping, form,
						request, response);
			} else if ("ArmyStuInfoSave".equalsIgnoreCase(myAction)) { // 保存军训名单
				myFwd = JxglOperationAction.SaveArmyStuInfo(mapping, form,
						request, response);
			} else if ("fugleTeacherInfo".equalsIgnoreCase(myAction)) { // 带队老师信息
				myFwd = JxglOperationAction.FugleTeacherInfo(mapping, form,
						request, response);
			} else if ("viewTeacherInfo".equalsIgnoreCase(myAction)) { // 带队老师信息维护
				myFwd = JxglOperationAction.FugleTeacherManager(mapping, form,
						request, response);
			} else if ("TeacherInfoSave".equalsIgnoreCase(myAction)) { // 保存教师信息
				myFwd = JxglOperationAction.SaveTeacherInfo(mapping, form,
						request, response);
			} else if ("drillmasterInfo".equalsIgnoreCase(myAction)) { // 教官信息
				myFwd = JxglOperationAction.DrillmasterInfo(mapping, form,
						request, response);
			} else if ("viewDrillmasterInfo".equalsIgnoreCase(myAction)) { // 维护教官信息
				myFwd = JxglOperationAction.DrillmasterInfoManager(mapping,
						form, request, response);
			} else if ("DrillmasterInfoSave".equalsIgnoreCase(myAction)) { // 保存教官信息
				myFwd = JxglOperationAction.SaveDrillmasterInfo(mapping, form,
						request, response);
			} else if ("cadremanInfo".equalsIgnoreCase(myAction)) { // 基干民兵信息
				myFwd = JxglOperationAction.CadremanInfo(mapping, form,
						request, response);
			} 
			// ===========begin 骆嘉伟 2009/4/8 ================
			else if ("xscxgbInfo".equalsIgnoreCase(myAction)) { // 学生参训干部
				myFwd = JxglOperationAction.XscxgbInfo(mapping, form, request,
						response);
			} else if ("viewXscxgbInfo".equalsIgnoreCase(myAction)) { // 维护学生参训干部
				myFwd = JxglOperationAction.XscxgbInfoManager(mapping, form,
						request, response);
			} else if ("saveXscxgbInfo".equalsIgnoreCase(myAction)) { // 保存学生参训干部
				myFwd = JxglOperationAction.SaveXscxgbInfo(mapping, form,
						request, response);
			}
			// ===========end 骆嘉伟 2009/4/8 ================
			else if ("viewCadremanInfo".equalsIgnoreCase(myAction)) { // 维护基干民兵信息
				myFwd = JxglOperationAction.CadremanInfoManager(mapping, form,
						request, response);
			} else if ("CadremanInfoSave".equalsIgnoreCase(myAction)) { // 保存基干民兵信息
				myFwd = JxglOperationAction.SaveCadremanInfo(mapping, form,
						request, response);
			} else if ("Army".equalsIgnoreCase(myAction)) { // 军训表现－表彰－惩罚查询
				myFwd = JxglOperationAction.Army(mapping, form, request,
						response);
			} else if ("modiArmy".equalsIgnoreCase(myAction)) { // 军训表现－表彰－惩罚修改
				myFwd = JxglOperationAction.ModifyArmy(mapping, form, request,
						response);
			} else if ("showArmy".equalsIgnoreCase(myAction)) {
				myFwd = JxglOperationAction.ShowArmy(mapping, form, request,
						response);
			} else if ("ArmyIntoAchievement".equalsIgnoreCase(myAction)) { // 成绩录入
				myFwd = JxglOperationAction.ArmyIntoAchievement(mapping, form,
						request, response);
			} else if ("ArmyAchievementSave".equalsIgnoreCase(myAction)) { // 成绩保存
				myFwd = JxglOperationAction.SaveArmyAchievement(mapping, form,
						request, response);
			} else if ("TRAINCONF".equalsIgnoreCase(myAction)) { // 勤工助学参数设置
				myFwd = JxglOperationAction.trainConf(mapping, form, request,
						response);
			} else if ("TRAINCLOTHAPPLY".equalsIgnoreCase(myAction)) { // 军训服装申请
				myFwd = JxglOperationAction.TrainColthApplyInit(mapping, form,
						request, response);
			} else if ("TRAINCLOTHINSERT".equalsIgnoreCase(myAction)) { // 军训服装申请-提交申请
				myFwd = JxglOperationAction.TrainColthApplyInsert(mapping,
						form, request, response);
			} else if ("trainWeave".equalsIgnoreCase(myAction)) { // 军训建制
				myFwd = JxglOperationAction.trainWeave(mapping, form, request,
						response);
			} else if ("updatethephoto".equalsIgnoreCase(myAction)) { // 军训照片上传
				myFwd = updatethephoto(mapping, form, request, response);
			} else if ("jxglphotoquery".equalsIgnoreCase(myAction)) { // 军训照片管理
				myFwd = JxglOperationAction.jxglphotoquery(mapping, form,
						request, response);
			} else if ("jxglphotoinfo".equalsIgnoreCase(myAction)) { // 军训照片详细查看
				myFwd = JxglOperationAction.jxglphotoinfo(mapping, form,
						request, response);
			} else if ("jxgldelphoto".equalsIgnoreCase(myAction)) { // 军训照片删除
				myFwd = jxgldelphoto(mapping, form,
						request, response);
			} else if ("jxglupdatephoto".equalsIgnoreCase(myAction)) { // 军训照片修改
				myFwd = JxglOperationAction.jxglupdatephoto(mapping, form,
						request, response);
			} else if ("jxglphotobrowse".equalsIgnoreCase(myAction)) { // 军训照片浏览
				myFwd = jxglphotobrowse(mapping, form, request, response);
			} else if ("jxglrwbm".equalsIgnoreCase(myAction)) { // 入伍报名登记
				myFwd = JxglOperationAction.jxglrwbm(mapping, form, request, response);
			}  else if ("jxglrwbmquery".equalsIgnoreCase(myAction)) { // 入伍报名查询
				myFwd = JxglOperationAction.jxglrwbmquery(mapping, form, request, response);
			}  else if ("jxglrwbmmorequery".equalsIgnoreCase(myAction)) { // 入伍报名详细查看
				myFwd = JxglOperationAction.jxglrwbmmorequery(mapping, form, request, response);
			}  else if ("jxglrwbmxxsh".equalsIgnoreCase(myAction)) { // 入伍报名审核
				myFwd = JxglOperationAction.jxglrwbmxxsh(mapping, form, request, response);
			}  else if ("jxglrwbmxxshresult".equalsIgnoreCase(myAction)) { // 入伍报名审核
				myFwd = JxglOperationAction.jxglrwbmxxshresult(mapping, form, request, response);
			}  else if ("jxglzpsc".equalsIgnoreCase(myAction)) { // 军训管理照片上传
				myFwd = jxglzpsc(mapping, form, request, response);
			}  
			
			request.setAttribute("writeAble", writeAble);
			return myFwd;

		} catch (Exception e) {
			e.printStackTrace();
			return new ActionForward("/errMsg.do", false);
		}
	}

	// 军训风采-照片上传

	public ActionForward updatethephoto(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		String dir = servlet.getServletContext().getRealPath("/pictures");
		CommanForm wjscform = (CommanForm) form;
		HttpSession session = request.getSession();
		String fbr = session.getAttribute("userName").toString(); // 发布人
		String bt = request.getParameter("bt"); // 标题
		String nr = request.getParameter("nr");// 内容
		String fbsj = WjscDataAccessAction.GetSysTime(); // 发布时间
		String remark = request.getParameter("remark");//图片类型
		String filePath = ""; // 图片路径
		String realPath = "";
		String message = ""; // 消息提示
		// String dir = "/uploadpic"; //路径根目录
		String doType = request.getParameter("doType");
		if ("save".equals(doType)) {

			File f = new File(dir);
			if (!f.exists()) {
				f.mkdir();
			}
			Timestamp date = new Timestamp(System.currentTimeMillis());
			String dateStr = date.toString().substring(0, 19);
			dateStr = dateStr.replaceAll("-", "").replaceAll(" ", "")
					.replaceAll(":", "");
			FormFile file = wjscform.getUploadFile();
			if (file == null) {
				message = "照片上传失败!";
				request.setAttribute("message", message);
				request.setAttribute("save", "no");
				return mapping.findForward("success");
			} else {
				int size = file.getFileSize();
				String fName = dateStr + file.getFileName();
				InputStream in = file.getInputStream();
				filePath = dir + "/" + fName;
				realPath = "/xgxt/pictures/" + fName;
				OutputStream out = new FileOutputStream(filePath);
				int bytesRead = 0;
				byte[] buffer = new byte[size];
				while ((bytesRead = in.read(buffer, 0, size)) != -1) {
					out.write(buffer, 0, bytesRead);
				}
				out.close();
				in.close();
			}
		}

		if ("save".equals(doType)) {
			String[] setpara = { bt, nr, realPath, fbsj, fbr,remark };
			boolean judge = false;
			judge = StandardOperation.insert("jxgl_photo", new String[] { "bt",
					"nr", "path", "fbsj", "fbr","remark" }, setpara, request);
			if (judge) {
				request.setAttribute("save", "ok");
			} else {
				request.setAttribute("save", "mo");
			}
		}

		return mapping.findForward("success");
	}
	
	
	
//	 删除照片
	public  ActionForward jxgldelphoto(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		DAO dao = DAO.getInstance();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		HashMap<String, String> map = new HashMap<String, String>();

		if ("del".equals(doType)) {

			boolean del = false;
			String path = dao.getOneRs(
					"select path from jxgl_photo where rowid=?",
					new String[] { pkValue }, "path");
			
			path=servlet.getServletContext().getRealPath(path.substring(path.indexOf("/pictures")));
			File file = new File(path);

			if((file.exists())){
				try {
					del=file.delete(); 
					if (del) {
						System.out.println("军训照片" + path + "删除成功!");
					} else {
						System.out.println("军训照片" + path + "删除失败!");
					}
				} catch (SecurityException e) {
					System.out.println("不能删除该文件!");
				}
			}

			
			
			
			
			boolean judge = false;
			judge = StandardOperation.delete("jxgl_photo", "rowid", pkValue,
					request);
			if (judge) {
				request.setAttribute("delete", "ok");
				request.setAttribute("rs", map);
				return mapping.findForward("success");
			} else {
				request.setAttribute("delete", "no");
				request.setAttribute("rs", map);
				return mapping.findForward("success");
			}
		}
		request.setAttribute("rs", map);
		return mapping.findForward("false");
	}
	
	public ActionForward jxglzpsc(ActionMapping mapping, ActionForm form, 
			HttpServletRequest request, HttpServletResponse response) throws FileNotFoundException, IOException {
		// 军训管理学生照片上传
		String doType = request.getParameter("doType");
		String xh = request.getParameter("xh");
		String userType = (String) request.getSession().getAttribute("userType");
		request.setAttribute("xh", xh);
		if(doType!=null && doType.equalsIgnoreCase("upload")){
			String dir = servlet.getServletContext().getRealPath("/pictures/xsjxgl");
			File f = new File(dir);
			if (!f.exists()) {
				f.mkdir();
			}
			
			CommanForm hff = (CommanForm) form;
			FormFile file = hff.getFile();
			if (file == null) {
				return mapping.findForward("false");
			}
			int size = file.getFileSize();
			String fName=file.getFileName();
			InputStream in = file.getInputStream();
			String filePath = "";
			if(userType.equalsIgnoreCase("stu")) {
				filePath = dir + "/" + xh + ".jpg";
			}else {
				filePath = dir + "/" + fName;
			}
			OutputStream out = new FileOutputStream(filePath);
			int bytesRead = 0;
			byte[] buffer = new byte[size];
			while ((bytesRead = in.read(buffer, 0, size)) != -1) {
				out.write(buffer, 0, bytesRead);
			}
			out.close();
			in.close();
			
			request.setAttribute("dataImported", "success");
			request.setAttribute("filepath", filePath);
			request.setAttribute("moditag", request.getParameter("moditag"));
		}
		return mapping.findForward("success");
	}


	// 军训管理照片浏览
	public ActionForward jxglphotobrowse(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {

		String sql = "";
		String[] colList = null;
		String querry ="";
		DAO dao = DAO.getInstance();
		ArrayList<HashMap<String, String>> rs = new ArrayList<HashMap<String, String>>();
		HashMap<String, String> map = new HashMap<String, String>();
		JxglForm wjscform = (JxglForm) form;
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String rsNum ="0";

		if (null != pkValue) {
			pkValue.replace(" ", "+");
		}

		if ("query".equals(doType)) {

			String bt = DealString.toGBK(request.getParameter("bt"));
			String fbr = DealString.toGBK(request.getParameter("fbr"));
			String xjsj = request.getParameter("xjsj");
			String remark = DealString.toGBK(request.getParameter("remark"));
			if ("query".equals(doType)) {
				map.put("bt", bt);
				map.put("fbr", fbr);
				map.put("xjsj", xjsj);
				map.put("remark", remark);
			}
			// 关于时间的处理
			dealDate dealdate = new dealDate();
			// beforesj = dealdate.getDate2(Integer.parseInt(xjsj), nowsj1);
			if("".equalsIgnoreCase(xjsj)){
				xjsj="-1";
			}
			String nowdatesj = WjscDataAccessAction.GetSysTime();
			String nowdate = nowdatesj.substring(0, 10);
			String nowsj = nowdatesj.substring(11, 19);
			String beforedate = dealdate.getDate2(Integer.parseInt(xjsj),
					nowdate);
			String beforedatesj = beforedate + " " + nowsj;



			StringBuffer query = new StringBuffer();

			if (!("".equals(bt))) {
				query.append(" and bt like '%");
				query.append(bt);
				query.append("%'");
			}
			if (!("".equals(fbr))) {
				query.append(" and fbr like '%");
				query.append(fbr);
				query.append("%'");
			}
			if (!("".equals(remark))) {
				query.append(" and remark = '");
				query.append(remark);
				query.append("'");
			}
			if (!("".equals(map.get("xjsj")))) {
				query.append(" and (fbsj between '");
				query.append(beforedatesj);
				query.append("' and '");
				query.append(nowdatesj);
				query.append("') ");
			}
			
			if(null!=query){
				querry= query.toString();
			}

			// 翻页
			sql = "select count(*) count from jxgl_photo a where 1=1 "+querry;
			rsNum = dao.getOneRs(sql, new String[] {}, "count");
			wjscform.getJxglpages().setMaxRecord(Integer.parseInt(rsNum));

			// 照片信息
			sql = "select * from (select a.*,rownum r from (select distinct a.rowid rid,a.bt,a.nr,a.path,a.fbsj,a.fbr from jxgl_photo a where 1=1 "
					+ querry
					+ "  order by fbsj) a ) a where a.r>"
					+ wjscform.getJxglpages().getStart()
					+ " and a.r<="
					+ (wjscform.getJxglpages().getStart() + wjscform
							.getJxglpages().getPageSize()) + " order by fbsj";
			colList = new String[] { "rid", "bt", "nr", "path", "fbsj", "fbr" };
			rs = dao.getArrayList(sql, new String[] {}, colList);

		
		}
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("rs1", map);
		request.setAttribute("rs", rs);
		return mapping.findForward("success");
	}
}