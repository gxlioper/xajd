/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xszz.nbty.jtjjknsbz;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.zfsoft.basic.BasicAction;

import xgxt.action.Base;
import xgxt.pjpy.nbty.NbtyPjpyForm;
import xgxt.pjpy.nbty.rych.NbtyPjpyService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.utils.String.StringUtils;

/** 
 * MyEclipse Struts
 * Creation date: 06-30-2010
 * 宁波天一职业技术学院家庭经济困难学生补助
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NbtyJtjjknsAction extends BasicAction {
	/*
	 * Generated Methods
	 */
	protected static final String QUERY = "qry";//页面查询操作判断标志
	
	protected static final String DELETE = "del";//页面删除操作判断标志
	
	protected static final String VIEW = "view";//页面单个显示详细操作判断标志
	
	protected static final String MODIFY = "modi";//页面修改操作判断标志

	protected static final String SAVE = "save";//页面保存操作判断标志
	
	protected static final String TABNAME = "nbty_xszz_jtjjkns";//页面保存操作判断标志
	
	protected static final String VIEWNAME = "VIEW_NBTY_XSZZ_JTJJKNS1";//页面保存操作判断标志
	
	/** 
	 * 家庭经济困难学生补助申请
	 * Method jtjjknsSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward jtjjknsSq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		NbtyJtjjknsService nbtyJtjjknsService=new NbtyJtjjknsService();
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		
		String nowTime=GetTime.getNowTime2();
		String userName=session.getAttribute("userName").toString();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String xh=request.getParameter("xh");
		String doType=request.getParameter("doType").toString();
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		//获取学期名称
		String xqmc=nbtyJtjjknsService.getXqMc(Base.currXq);
		//拼接PKVALUE的值
		String pkValue=request.getParameter("xh")+request.getParameter("save_xn")+request.getParameter("save_bzlx");
		HashMap<String,String> map = new HashMap<String, String>();
		
		
		if("student".equalsIgnoreCase(userOnLine)){
			   xh=userName;													
		}
		
		map=xsxxglService.selectStuinfo(xh);
		
		//判断登陆的院系,是否不在申请时间内 true在时间内 false不在时间内
		if(!"xx".equalsIgnoreCase(userType)
				&& !"admin".equalsIgnoreCase(userType)
				&& !nbtyJtjjknsService.sqsj(userDep,VIEWNAME)){
			request.setAttribute("notSqsj", "yes");
		}else{
			request.setAttribute("notSqsj", "no");
			
		}
		
		
		if(SAVE.equalsIgnoreCase(doType)){
			//判断是否是困难生 false不是困难生 true是困难生
			if(nbtyJtjjknsService.isKns(userName, VIEWNAME)){	
				this.insertOperation(request, TABNAME);								
				request.setAttribute("pkValue", pkValue);					//用于打印的pkValue
			}else{
				request.setAttribute("notKns", "yes");
			}
			
		}
		
		
		request.setAttribute("nowTime", nowTime);
		request.setAttribute("rs", map);
		request.setAttribute("xszzList", nbtyJtjjknsService.getXszzList());
		request.setAttribute("xn", Base.currXn);
		request.setAttribute("xq", Base.currXq);//获取当前学年，放入request中
		request.setAttribute("nd", Base.currNd);								
		request.setAttribute("xqmc", xqmc);
		return mapping.findForward("jtjjknsSq");
	}
	
	/** 
	 * 家庭经济困难学生补助审核
	 * Method jtjjknsSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward jtjjknsSh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		NbtyJtjjknsService nbtyJtjjknsService=new NbtyJtjjknsService();
		HttpSession session=request.getSession();
		NbtyJtjjknsForm nbtyJtjjknsForm=(NbtyJtjjknsForm)form;
		
		String shjb=(nbtyJtjjknsService.getShjb(VIEWNAME).get(0)).get("jb");//审核级别
		String userOnLine =session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String userDep =session.getAttribute("userDep").toString();
		String doType=request.getParameter("doType");
		String shjg=request.getParameter("shjg");								//审核结果
		String shzd="";															//审核字段
		String userType=session.getAttribute("userType").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String shsj="";
		
		HashMap<String,String> valueMap=new HashMap<String,String>();
		
		if(SAVE.equalsIgnoreCase(doType)){									//判断操作是否为审核
			if("3".equalsIgnoreCase(shjb)){						//判断审核的级别
				if("true".equalsIgnoreCase(isFdy)){												//如果当前用户登陆权限为辅导员，并且操作为审核
					shzd="fdysh";
					shsj="fdyshsj";
				}else if("xy".equalsIgnoreCase(userType)){							//如果当前用户登陆权限为学院，并且操作为审核
					shzd="xysh";
					shsj="xyshsj";
				}else if("xx".equalsIgnoreCase(userType)	
						||	"admin".equalsIgnoreCase(userType)){						//如果当前用户登陆权限为学校，并且操作为审核
					shzd="xxsh";
					shsj="xxshsj";
				}
			}
			
			if("2".equalsIgnoreCase(shjb)){						//判断审核的级别
				 if("xy".equalsIgnoreCase(userType)){							//如果当前用户登陆权限为学院，并且操作为审核
					shzd="xysh";
					shsj="xyshsj";
				}else if("xx".equalsIgnoreCase(userType)	
						||	"admin".equalsIgnoreCase(userType)){						//如果当前用户登陆权限为学校，并且操作为审核
					shzd="xxsh";
					shsj="xxshsj";
				}
			}
			
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			valueMap.put(shzd,shjg );
			valueMap.put(shsj, GetTime.getNowTime2());
			
			this.auditingBatchOperation(request, primaryMap, valueMap, TABNAME);
			doType="go";
		}
		
		if("go".equalsIgnoreCase(doType)){//查询
			
			if("student".equalsIgnoreCase(userOnLine)){	
				request.setAttribute("annexTerm", "and xh='"+userName+"'");
				request.setAttribute("clientColumns", "(case fdysh when '通过' then 'disabled' else '' end)disabled,");
			}
			
			if("3".equalsIgnoreCase(shjb)){				                 //三级的审核
				
				if("true".equalsIgnoreCase(isFdy)){	
					request.setAttribute("clientColumns", "(case xysh when '通过' then 'disabled' else '' end)disabled,");
				}else if("xy".equalsIgnoreCase(userType)
						&& !"isFdy".equalsIgnoreCase(isFdy)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
					request.setAttribute("annexTerm", " and fdysh='通过' ");
				}else if("xx".equalsIgnoreCase(userType) 
						|| "admin".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
					request.setAttribute("annexTerm", " and xysh='通过' ");
			
				}
				
				String	[]outputColumn = new String[] { "pk","disabled", "xh", "xm", "xb", "xn","xqmc", "bjmc",
					"fdysh","xysh", "xxsh"  };
				selectPageDataByPagination(request, nbtyJtjjknsForm, TABNAME, VIEWNAME, outputColumn);
				request.setAttribute("writeAble", "yes");
			
			}else if("2".equalsIgnoreCase(shjb)){                     //二级的审核
				
				if("xy".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
				}else if("xx".equalsIgnoreCase(userType) 
						|| "admin".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
					request.setAttribute("annexTerm", " and xysh='通过' ");
				}
				String	[]outputColumn = new String[] { "pk","disabled", "xh", "xm", "xb", "xn","xqmc", "bjmc",
					"xysh", "xxsh"  };
				selectPageDataByPagination(request, nbtyJtjjknsForm, TABNAME, VIEWNAME, outputColumn);
			}
		}
		
		if("3".equalsIgnoreCase(shjb))
		{
			if("xy".equalsIgnoreCase(userType)
					&& !"true".equalsIgnoreCase(isFdy)){
				nbtyJtjjknsForm.setXydm(userDep);                   //获取当前登陆为学院用户时的，学院名称
			}						
		}else if("2".equalsIgnoreCase(shjb)){
			if("xy".equalsIgnoreCase(userType)){
				nbtyJtjjknsForm.setXydm(userDep);                     //获取当前登陆为学院用户时的，学院名称
			}						
		}
		
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);						
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("shjb", shjb);
		return mapping.findForward("jtjjknsSh");
	}
	
	/** 
	 * 家庭经济困难学生补助申请查询
	 * Method jtjjknsSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward jtjjknsResult(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session=request.getSession();
		NbtyJtjjknsService nbtyJtjjknsService=new NbtyJtjjknsService();
		NbtyJtjjknsForm nbtyJtjjknsForm=(NbtyJtjjknsForm)form;
		
		String userType=session.getAttribute("userType").toString();
		String userOnLine =session.getAttribute("userOnLine").toString();
		String doType=request.getParameter("doType");
		String isFdy=session.getAttribute("isFdy").toString();
		String userName=session.getAttribute("userName").toString();
		String userDep=session.getAttribute("userDep").toString();
		String shjb=(nbtyJtjjknsService.getShjb(VIEWNAME).get(0)).get("jb");//审核级别
		
		if(DELETE.equalsIgnoreCase(doType)){
			this.deleteOperation(request, TABNAME);
			doType="qry";
		}
		
		if(QUERY.equalsIgnoreCase(doType)){
			if("student".equalsIgnoreCase(userOnLine)){	
				request.setAttribute("annexTerm", "and xh='"+userName+"'");
				request.setAttribute("clientColumns", "(case fdysh when '通过' then 'disabled' else '' end)disabled,");
			}
			
			if("3".equalsIgnoreCase(shjb)){				           //三级的审核
				if("true".equalsIgnoreCase(isFdy)){	
					request.setAttribute("clientColumns", "(case xysh when '通过' then 'disabled' else '' end)disabled,");
				}else if("xy".equalsIgnoreCase(userType)
						&& !"isFdy".equalsIgnoreCase(isFdy)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
				}else if("xx".equalsIgnoreCase(userType) 
						|| "admin".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
			
				}
				String	[]outputColumn = new String[] { "pk","disabled", "xh", "xm", "xb", "xn","xqmc", "bjmc",
					"fdysh","xysh", "xxsh"  };
				selectPageDataByPagination(request, nbtyJtjjknsForm, TABNAME, VIEWNAME, outputColumn);
				request.setAttribute("writeAble", "yes");
			}else if("2".equalsIgnoreCase(shjb)){                     //二级的审核
				 if("xy".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
				}else if("xx".equalsIgnoreCase(userType) 
						|| "admin".equalsIgnoreCase(userType)){
					request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
			    }
				String	[]outputColumn = new String[] { "pk","disabled", "xh", "xm", "xb", "xn","xqmc", "bjmc",
					"xysh", "xxsh"  };
				selectPageDataByPagination(request, nbtyJtjjknsForm, TABNAME, VIEWNAME, outputColumn);
			}
		}
		if("xy".equalsIgnoreCase(userType)
				&& !"true".equalsIgnoreCase(isFdy)){
			nbtyJtjjknsForm.setXydm(userDep);
		}
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("shjb", shjb);
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表	
		return mapping.findForward("resultJtjjknsbz");
	}
	
	
	/**
	 * 家庭经济困难生单个审核
	 * method shOne
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward shOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		HttpSession session=request.getSession();
		NbtyJtjjknsForm nbtyJtjjknsForm=(NbtyJtjjknsForm)form;
		NbtyJtjjknsService nbtyJtjjknsService=new NbtyJtjjknsService();
		
		String shjb=(nbtyJtjjknsService.getShjb(VIEWNAME).get(0)).get("jb");//审核级别
		String isFdy= session.getAttribute("isFdy").toString();
		String userType= session.getAttribute("userType").toString();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String shsj=GetTime.getNowTime2();//审核时间
		String write="yes";
		String title="学生资助 - 审核 - 补助审核";
		HashMap<String,String> rs=new HashMap<String,String>();
		this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		rs=(HashMap)request.getAttribute("rs");
		
		if(MODIFY.equalsIgnoreCase(doType)){
		  	this.updateOperation(request, TABNAME);			//获取request中要保存的数据，进行修改操作
		}
		
		if("3".equals(shjb)){
			if("isFdy".equalsIgnoreCase(isFdy)){								//加载单个审核时的审核结果
			nbtyJtjjknsForm.setSave_fdysh(rs.get("fdysh").toString());	
			}else if("xy".equalsIgnoreCase(userType)){
			nbtyJtjjknsForm.setSave_xysh(rs.get("xysh").toString());	
			}else if("xx".equalsIgnoreCase(userType) 
					|| "admin".equalsIgnoreCase(userType)){
				nbtyJtjjknsForm.setSave_xxsh(rs.get("xxsh").toString());	
			}
		}else {
			if("xy".equalsIgnoreCase(userType)){
				nbtyJtjjknsForm.setSave_xysh(rs.get("xysh").toString());	
				}else if("xx".equalsIgnoreCase(userType) 
						|| "admin".equalsIgnoreCase(userType)){
					nbtyJtjjknsForm.setSave_xxsh(rs.get("xxsh").toString());	
				}		
		}
		if("3".equals(shjb)){
			if("true".equalsIgnoreCase(isFdy)){			//辅导员
				if(rs.get("xysh").toString().equals("通过"))		//如果登陆的是辅导员，并且学院审核是通过
				{
				write="no";
				}
			}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
				if(rs.get("xxsh").toString().equals("通过"))		//如果登陆的是辅导员，并且学院审核是通过
				{
					write="no";
				}
			}
		}else if("2".equals(shjb)){
			if("xy".equalsIgnoreCase(userType)){			//学院登陆)
				if(rs.get("xxsh").toString().equals("通过"))		//如果登陆的是辅导员，并且学院审核是通过
				{
					write="no";
				}
			}
		}
		request.setAttribute("nowTime", shsj);
		request.setAttribute("write", write);
		request.setAttribute("title", title);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		return mapping.findForward("shOne");
	}
	
	/**
	 * 返回单条记录信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward oneJtjjknsbz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		HttpSession session=request.getSession();
		NbtyJtjjknsService nbtyJtjjknsService=new NbtyJtjjknsService();
		NbtyJtjjknsForm nbtyJtjjknsForm=(NbtyJtjjknsForm)form;
		
		String shjb=(nbtyJtjjknsService.getShjb(VIEWNAME).get(0)).get("jb");//审核级别
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String userOnLine =session.getAttribute("userOnLine").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String userType=session.getAttribute("userType").toString();
		if(MODIFY.equalsIgnoreCase(doType)){
			
			this.updateOperation(request, TABNAME);
		}
		
		if(StringUtils.isNotNull(doType)){
			this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);	//JSP传入的是view时,只查询不修改
		}
		
		if(SAVE.equalsIgnoreCase(doType)){
			HashMap<String,String> rs=(HashMap<String,String>)request.getAttribute("rs");
			if("3".equals(shjb)){
				if("student".equalsIgnoreCase(userOnLine)){
					if("通过".equals(rs.get("fdysh"))){
						doType="view";
					}
				}else if("true".equalsIgnoreCase(isFdy)){			//辅导员
				if("通过".equals(rs.get("xysh"))){		//如果登陆的是辅导员，并且学院审核是通过
						doType="view";
					}
				}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
					if("通过".equals(rs.get("xxsh"))){		//如果登陆的是辅导员，并且学院审核是通过
						doType="view";
					}
				}
			}else if("2".equals(shjb)){
				if("student".equalsIgnoreCase(userOnLine)){
					if("通过".equals(rs.get("xysh"))){		//如果登陆的是辅导员，并且学院审核是通过
						doType="view";
					}
				}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
					if("通过".equals(rs.get("xxsh"))){		//如果登陆的是辅导员，并且学院审核是通过
						doType="view";
					}
				}
			}
			nbtyJtjjknsForm.setSave_bzlx(rs.get("bzlx"));
		}
		
		
		request.setAttribute("xszzList", nbtyJtjjknsService.getXszzList());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		return mapping.findForward("oneJtjjknsbz");
	}
	
	
	/**
	 * 数据导出
	 * method expDate
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	
	
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try {
			this.expPageData(request, response, TABNAME, VIEWNAME, null);
		} catch (Exception e) {
			e.printStackTrace();
		}			
		
		return mapping.findForward("success");
	}
	
	
	
	/**
	 * 申请表打印
	 * method jtjjknsPrint
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward jtjjknsPrint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
			
		    String pkValue = request.getParameter("pkValue");
			this.selectPageDataByOne(request,TABNAME, VIEWNAME,  pkValue);
			return mapping.findForward("jtjjknsPrint");
	}
	
}