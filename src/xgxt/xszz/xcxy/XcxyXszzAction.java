/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xszz.xcxy;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.base.Excel2Oracle;
import xgxt.xszz.xcxy.XcxyXszzForm;
import xgxt.xszz.xcxy.XcxyXszzService;

/** 
 * MyEclipse Struts
 * Creation date: 08-24-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class XcxyXszzAction extends DispatchAction {

	/** 
	 * Method zzxmInfo
	 * 资助项目信息查询
	 * @return ActionForward
	 */
	public ActionForward zzxmInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		String tips = "学生资助 - 基础数据维护 - 资助项目维护";
		String rsNum = "0";// 返回的记录数
		String tableName = "xszz_xmdmb";
		String[] colList = new String[] { "pk", "xmdm", "xmmc","xmlc","bbys" };
		XcxyXszzService service =new XcxyXszzService();
		String[] colListCN = service.getColumnNameCN_ser(colList, tableName);
		List topTr = service.arrayToList_ser(colList, colListCN);
		List<String[]> rs = new ArrayList<String[]>();
		zzform.setXmdm(Base.chgNull(zzform.getXmdm(), "", 1));
		zzform.setXmmc(Base.chgNull(zzform.getXmmc(), "", 1));
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("xmdm", zzform.getXmdm());
		map.put("xmmc", zzform.getXmmc());

		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("query")) {
			rs = service.getZzxm_ser(colList,zzform);
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}
		request.setAttribute("rs1", map);
		request.setAttribute("tips", tips);// 发送位置提示栏信息
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		return mapping.findForward("zzxminfo");
	}

	/** 
	 * Method zzxmEdit
	 * 资助项目维护
	 * @return ActionForward
	 */
	public ActionForward zzxmEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//String pk = "xmdm";
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HashMap<String, String> map = new HashMap<String, String>();
		String[] colList = new String[] {"xmdm", "xmmc","xmlc","bbys" };
		String pk = request.getParameter("pkVal");
		zzform.setXmmc(DealString.toGBK(zzform.getXmmc()));
		zzform.setXmlc(DealString.toGBK(zzform.getXmlc()));
		zzform.setBbys(DealString.toGBK(zzform.getBbys()));
		if("save".equals(zzform.getAct())){
			if("add".equals(zzform.getDoType())){
				String onlyOne = service.checkOnlyOne_ser("xmdm", zzform.getXmdm(), "xszz_xmdmb");
				if(Base.isNull(onlyOne)){
					request.setAttribute("save", service.add_ser(zzform));
				}else{
					request.setAttribute("exist", "yes");
				}
			}else {
				request.setAttribute("save", service.modify_ser(zzform));
			}
		}
		if("add".equals(zzform.getDoType())){
			for (int i = 0; i < colList.length; i++) {
				map.put(colList[i], "");
			}
		}else {
			map = service.getOneZzxm_ser(pk, colList);
		}
		request.setAttribute("rs", map);
		request.setAttribute("doType", zzform.getDoType());
		return mapping.findForward("editzzxm");
	}
	/**
	 * Method zzxmDel
	 * 删除资助项目
	 * @throws Exception
	 */
	public ActionForward zzxmDel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzService service =new XcxyXszzService();
		String pkDel = Base.chgNull(request.getParameter("pkDel"), "", 1);
		request.setAttribute("result", service.delete_ser(pkDel));	
		return new ActionForward("/xcxyXszz.do?method=zzxmInfo&doType=query", false);
	}

	/** 
	 * Method zzxmJeInfo
	 * 资助项目信息查询
	 * @return ActionForward
	 */
	public ActionForward zzxmJeInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String tips = "学生资助 - 基础数据维护 - 资助金额维护";
		String rsNum = "0";// 返回的记录数
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		List<String[]> rs = new ArrayList<String[]>();
		String[] colList = new String[] { "pk", "xmmc", "zzje" };
		String[] colListCN = new String[] { "主键", "项目名称", "资助金额" };
		List topTr = service.arrayToList_ser(colList, colListCN);

		zzform.setXmdm(Base.chgNull(zzform.getXmdm(), "", 1));
		zzform.setXmmc(Base.chgNull(zzform.getXmmc(), "", 1));
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("xmdm", zzform.getXmdm());
		map.put("xmmc", zzform.getXmmc());


		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("query")) {
			rs = service.queryZzxmJe_ser(colList,zzform);
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}

		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		request.setAttribute("rs1", map);
		request.setAttribute("tips", tips);// 发送位置提示栏信息
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		return mapping.findForward("zzjeinfo");
	}

	/** 
	 * Method zzjeEdit
	 * 资助金额维护
	 * @return ActionForward
	 */
	public ActionForward zzjeEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//String pk = "xmdm";
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HashMap<String, String> map = new HashMap<String, String>();
		String[] colList = new String[] {"xmdm", "zzje" };
		String pk = Base.chgNull(request.getParameter("pkVal"), "", 1);
		zzform.setXmmc(DealString.toGBK(zzform.getXmmc()));
		if("save".equals(zzform.getAct())){
			if("add".equals(zzform.getDoType())){
				String onlyOne = service.checkOnlyOne_ser("xmdm||zzje", zzform.getXmdm()+zzform.getZzje(), "xszz_zzjeb");
				if(Base.isNull(onlyOne)){
					request.setAttribute("save", service.addZzje_ser(zzform));
				}else{
					request.setAttribute("exist", "yes");
				}
			}else {
				zzform.setTemp(pk);
				request.setAttribute("save", service.modifyZzje_ser(zzform));
			}
		}
		if("add".equals(zzform.getDoType())){
			for (int i = 0; i < colList.length; i++) {
				map.put(colList[i], "");
			}
		}else {
			map = service.getOneZzje_ser(pk, colList);
		}
		request.setAttribute("rs", map);
		request.setAttribute("pk", pk);
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		request.setAttribute("doType", zzform.getDoType());
		return mapping.findForward("editzzje");
	}

	/**
	 * Method zzxmDel
	 * 删除资助金额
	 * @throws Exception
	 */
	public ActionForward zzjeDel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzService service =new XcxyXszzService();
		String pkDel = Base.chgNull(request.getParameter("pkDel"), "", 1);
		request.setAttribute("result", service.deleteZzje_ser(pkDel));	
		return new ActionForward("/xcxyXszz.do?method=zzxmJeInfo&doType=query", false);
	}

	/** 
	 * Method zzxmSjInfo
	 * 资助项目信息查询
	 * @return ActionForward
	 */
	public ActionForward zzxmSjInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String tips = "学生资助 - 基础数据维护 - 资助时间维护";
		String rsNum = "0";// 返回的记录数
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		List<String[]> rs = new ArrayList<String[]>();
		String[] colList = new String[] { "xmdm","xmmc", "zzkssj", "zzjssj" };
		String[] colListCN = new String[] { "主键","项目名称", "资助开始时间", "资助结束时间" };
		List topTr = service.arrayToList_ser(colList, colListCN);	

		zzform.setXmdm(Base.chgNull(zzform.getXmdm(), "", 1));
		zzform.setXmmc(Base.chgNull(zzform.getXmmc(), "", 1));
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("xmdm", zzform.getXmdm());
		map.put("xmmc", zzform.getXmmc());

		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("query")) {
			rs = service.queryZzxmSj_ser(colList,zzform);
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}

		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		request.setAttribute("rs1", map);
		request.setAttribute("tips", tips);// 发送位置提示栏信息
		request.setAttribute("rs", rs);// 发送数据集
		request.setAttribute("topTr", topTr);// 发送表头
		request.setAttribute("rsNum", rsNum);// 发送记录数
		return mapping.findForward("zzsjinfo");
	}

	/** 
	 * Method zzjeEdit
	 * 资助时间维护
	 * @return ActionForward
	 */
	public ActionForward zzxmSjEdit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		//String pk = "xmdm";
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HashMap<String, String> map = new HashMap<String, String>();
		String[] colList = new String[] {"xmdm", "zzkssj","zzjssj" };
		String pk = Base.chgNull(request.getParameter("pkVal"), "", 1);
		zzform.setXmmc(DealString.toGBK(zzform.getXmmc()));
		String str = Base.chgNull(request.getParameter("savepk"), "", 1);
		if("oneSave".equals(zzform.getAct())){
			zzform.setXmdm(zzform.getTemp());
			request.setAttribute("save", service.setZzsj_ser(zzform));
		} else if("manySave".equals(zzform.getAct())){
			request.setAttribute("save", service.saveManyZzsj_ser(str, zzform));
		} else if("clear".equals(zzform.getAct())){
			service.clearZzsj_ser();
			return new ActionForward("/xcxyXszz.do?method=zzxmSjInfo&doType=query", false);
		}
		if("one".equals(zzform.getDoType())){
			map = service.getOneZzsj_ser(pk, colList);
			zzform.setAct("oneSave");
		}else {
			map.put("zzkssj", "");
			map.put("zzjssj", "");
			zzform.setAct("manySave");
		}
		request.setAttribute("savepk", str);
		request.setAttribute("act", zzform.getAct());
		request.setAttribute("rs", map);
		request.setAttribute("pk", pk);
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		request.setAttribute("doType", zzform.getDoType());
		return mapping.findForward("editzzsj");
	}

	/** 
	 * Method zzjeEdit
	 * 资助申请列表
	 * @return ActionForward
	 */
	public ActionForward getZzxmList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		request.setAttribute("doType", Base.chgNull(zzform.getDoType(), "", 0));
		XcxyXszzService service =new XcxyXszzService();
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		return mapping.findForward("zzxmlist");
	}

	/** 
	 * Method zzjeEdit
	 * 获得资助申请页面
	 * @return ActionForward
	 */
	public ActionForward getXmsq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		HttpSession session = request.getSession();
		XcxyXszzService service =new XcxyXszzService();
		String userType = session.getAttribute("userOnLine") == null ? "" 
				: session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName") == null ? "" 
				: session.getAttribute("userName").toString();
		String xxmc = session.getAttribute("xxmc") == null ? "" 
				: session.getAttribute("xxmc").toString();
		if(userType.equals("student")){
			zzform.setXh(userName);
		}
		String[] cols = new String[]{"xmdm","xmmc","xmlc","zzkssj","zzjssj"};
		HashMap<String,String> xmMap = service.getOneZzxm_ser(zzform.getXmdm(), cols);
		HashMap<String,String> map = new HashMap<String,String>();
		List<HashMap<String,String>> xszzList = new ArrayList<HashMap<String,String>> ();
		if(xmMap != null){
			String sfksq = service.checkSfksq_ser(xmMap);
			String forward = "";
			String xmlc = xmMap.get("xmlc");
			if("国家奖学金".equals(xmlc)){
				map = service.getJxjXsxx_ser(xxmc,zzform);
				forward = "jxjsqb";
			}else if("国家助学金".equals(xmlc)){
				map = service.getZxjXsxx_ser(zzform);
				forward = "zxjsqb";
			}else if("国家励志奖学金".equals(xmlc)){
				map = service.getLzjxjXsxx_ser(zzform);
				forward = "zxjsqb";
			}
			if(map != null){
				if(Base.isNull(map.get("chjl"))){
					xszzList = service.getXsAllPrise_ser(zzform.getXh(), "");
				}
				request.setAttribute("xszzList", xszzList);
				request.setAttribute("xnxszzList", service.getXsAllPrise_ser(zzform.getXh(), Base.currXn));
				String temp = service.getViewCjXnOrNd();
				if(temp.length() > 5){
					request.setAttribute("xnxswjcfList", service.getXsAllWjcf_ser(zzform.getXh(), temp,""));
				}else{
					List<HashMap<String,String>> list = service.getXsAllWjcf_ser(zzform.getXh(), Base.beforXn,"01");
					list.addAll(service.getXsAllWjcf_ser(zzform.getXh(), Base.currXn,"02"));
					request.setAttribute("xnxswjcfList", list);
				}
				String wjsclj = map.get("wjsclj");
				if(!Base.isNull(wjsclj)){
					map.put("wjmc", wjsclj.substring(wjsclj.indexOf("!@!")+3, wjsclj.length()));
				}
			}
			request.setAttribute("rs", map);
			request.setAttribute("zzxm", xmMap);
			request.setAttribute("sfksq", sfksq);
			return mapping.findForward(forward);
		}	
		return null;
	}

	/** 
	 * Method getXscj
	 * 获得学生成绩
	 * @return ActionForward
	 */
	public ActionForward getXscj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String xh = zzform.getXh();
		String temp = service.getViewCjXnOrNd();
		String title1 = "";
		String title2 = "";
		List<String[]> cj1 = new ArrayList<String[]>();
		List<String[]> cj2 = new ArrayList<String[]>();
		HashMap<String,String> map1 = new HashMap<String,String>();
		HashMap<String,String> map2 = new HashMap<String,String>();
		if(temp.length() > 5){
			title1 = temp+"学年秋";
			title2 = temp+"学年春";
			cj1 = service.getCjList_ser(xh, temp, "02");
			cj2 = service.getCjList_ser(xh, temp, "01");
			map1 = service.getXscjHz_ser(xh, temp, "02");
			map2 = service.getXscjHz_ser(xh, temp, "01");
		}else{
			title1 = Base.beforXn+"学年春";
			title2 = Base.currXn+"学年秋";
			cj1 = service.getCjList_ser(xh, Base.beforXn, "01");
			cj2 = service.getCjList_ser(xh, Base.currXn, "02");
			map1 = service.getXscjHz_ser(xh, Base.beforXn, "01");
			map2 = service.getXscjHz_ser(xh, Base.currXn, "02");
		}
		request.setAttribute("title1", title1);
		request.setAttribute("title2", title2);
		request.setAttribute("rs1", cj1);
		request.setAttribute("rs2", cj2);
		request.setAttribute("map1", map1);
		request.setAttribute("map2", map2);
		return mapping.findForward("viewxscj");
	}

	/** 
	 * Method zzjeEdit
	 * 保存学生资助申请
	 * @return ActionForward
	 */
	public ActionForward saveXsXmsq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		FormFile file = zzform.getUploadFile();
	    if(!Base.isNull(file.getFileName())){
	    	int size = file.getFileSize();
	    	if(size>10485760){
	    		 request.setAttribute("result", "info");
	    		 return getXmsq(mapping, form, request, response);
	    	}
	    }
		String flag = service.saveJzxjsq_ser(zzform);
		request.setAttribute("result", flag);
		return getXmsq(mapping, form, request, response);
	}
	/** 
	 * Method DownLoadFile
	 * 文件下载
	 * @return ActionForward
	 */
	public static ActionForward DownLoadFile(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		byte b[] = new byte[500];
		String dir = DealString.toGBK(request.getParameter("wjsclj"));	
		String filename = dir.substring(dir.indexOf("!@!")+3, dir.length());
		File fileload = new File(dir);
		response.setContentType("application/octet-stream");
		response.setHeader("Content-Disposition", "attachment;filename="
				+ DealString.toUtf8String(filename));
		InputStream in = new FileInputStream(fileload);
		in = new BufferedInputStream(in);
		while ((in.read(b)) != -1) {
			response.getOutputStream().write(b);
		}
		return null;
	}
	/** 
	 * Method getXmsh
	 * 获得资助审核页面
	 * @return ActionForward
	 */
	public ActionForward getXmsh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep") == null ? "" 
				: session.getAttribute("userDep").toString();
		String tips = "学生资助 - 审核 - 学生申请审核";
		List<String[]> rs = new ArrayList<String[]>();
		String rsNum = "";
		String tableName = "";
		String realTable = "";
		HashMap<String,String> xmMap = new HashMap<String,String>();
		zzform.setXysh(DealString.toGBK(zzform.getXysh()));
		zzform.setXxsh(DealString.toGBK(zzform.getXxsh()));
		if("stu".equals(userType)){
			request.setAttribute("errMsg", "学生用户无权访问该页面！");
			return new ActionForward("/errMsg.do",false);
		}
		if(!Base.isNull(zzform.getXmdm())){
			String[] cols = new String[]{"xmdm","xmmc","xmlc"};
			xmMap = service.getOneZzxm_ser(zzform.getXmdm(), cols);
			String xmlc = xmMap.get("xmlc");
			if("国家奖学金".equals(xmlc)){
				tableName = "view_xszz_jxjsqb";
				realTable = "xszz_jxjsqb";
			}else if("国家助学金".equals(xmlc)){
				tableName = "view_xszz_zxjsqb";
				realTable = "xszz_zxjsqb";
			}else if("国家励志奖学金".equals(xmlc)){
				tableName = "view_xszz_lzjxjsqb";
				realTable = "xszz_lzjxjsqb";
			}
		}
		if(userType.equals("xy")){
			zzform.setXy(userDep);
			request.setAttribute("xydm", userDep);
		}
		String[] colList = new String[] { "pk", "xh","xm","nj","xymc","zymc","bjmc","xmmc","xysh","xxsh"};
		String[] colListCN = new String[] { "主键", "学号", "姓名","年级",Base.YXPZXY_KEY+"名称","专业名称","班级名称","项目名称",Base.YXPZXY_KEY+"审核","学校审核" };
		List topTr = service.arrayToList_ser(colList, colListCN);
		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("query")) {
			rs = service.queryShInfo_ser(colList,zzform,tableName,userType);
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}
		zzform.setXn(Base.isNull(zzform.getXn()) == true ? Base.currXn:zzform.getXn());
		initData(request,zzform);
		request.setAttribute("tips", tips);
		request.setAttribute("rs", rs);
		request.setAttribute("zzxm", xmMap);
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("topTr", topTr);
		request.setAttribute("tableName", tableName);// 发送视图名
		request.setAttribute("realTable", realTable);// 发送数据源表名	
		request.setAttribute("userType", userType);// 发送记录数
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		return mapping.findForward("zzxmsh");

	}

	/** 
	 * Method zzjeEdit
	 * 初始化基础数据列表 
	 * @return ActionForward
	 */
	public void initData(HttpServletRequest request, ActionForm form) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		String xydm = Base.isNull(zzform.getXydm()) ? "" : zzform.getXydm();
		String zydm = Base.isNull(zzform.getZydm()) ? "" : zzform.getZydm();
		String nj = Base.isNull(zzform.getNj()) ? "" : zzform.getNj();
		if(zzform.getXysx() != null && zzform.getXysx().equals("yes")){
			zydm = "";
		}
		request.setAttribute("xnList", Base.getXnndList());// 发送学年列表
		request.setAttribute("njList", Base.getNjList());// 发送学年列表
		request.setAttribute("xyList", Base.getXyList());// 发送学院列表
		request.setAttribute("zyList", Base.getZyMap().get(xydm));// 发送专业列表
		request.setAttribute("bjList", Base.getBjMap().get(xydm+"!!"+zydm+"!!"+nj));// 发送班级列表
	}

	/** 
	 * Method zzjeEdit
	 * 批量审核学生资助申请
	 * @return ActionForward
	 */
	public ActionForward excutePlsh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String tips = "学生资助 - 审核 - 批量审核";
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("sh")) {
			request.setAttribute("result", service.excutePlsh_ser(zzform,userType));
		}
		List<HashMap<String,String>> list = service.getZzxmJe_ser(zzform.getXmdm());
		if(list != null && list.size() > 0 && list.get(0).size() > 0){
			request.setAttribute("xmmc", list.get(0).get("xmmc"));
			request.setAttribute("xmdm", list.get(0).get("xmdm"));
		}else{
			request.setAttribute("xmmc", "");
			request.setAttribute("xmdm", "");
		}
		request.setAttribute("zzjeList", list);
		request.setAttribute("tips", tips);
		request.setAttribute("userType", userType);
		request.setAttribute("pks", zzform.getTemp());
		return mapping.findForward("excutesh");
	}

	/** 
	 * Method zzjeEdit
	 * 单个审核学生资助申请
	 * @return ActionForward
	 */
	public ActionForward excuteDgsh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String tips = "学生资助 - 审核 - 单个审核";
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("sh")) {
			request.setAttribute("result", service.excuteDgsh_ser(zzform,userType));
		}
		List<HashMap<String,String>> list = service.getZzxmJe_ser(zzform.getXmdm());
		HashMap<String,String> map = service.getXssqInfo_ser(zzform);
		request.setAttribute("xnxszzList", service.getXsAllPrise_ser(zzform.getXh(), Base.currXn));
		String temp = service.getViewCjXnOrNd();
		if(temp.length() > 5){
			request.setAttribute("xnxswjcfList", service.getXsAllWjcf_ser(zzform.getXh(), temp,""));
		}else{
			List<HashMap<String,String>> wjlist = service.getXsAllWjcf_ser(zzform.getXh(), Base.beforXn,"01");
			wjlist.addAll(service.getXsAllWjcf_ser(zzform.getXh(), Base.currXn,"02"));
			request.setAttribute("xnxswjcfList", wjlist);
		}
		String wjsclj = map.get("wjsclj");
		if(!Base.isNull(wjsclj)){
			map.put("wjmc", wjsclj.substring(wjsclj.indexOf("!@!")+3, wjsclj.length()));
		}
		request.setAttribute("rs", map);
		request.setAttribute("zzjeList", list);
		request.setAttribute("tips", tips);
		request.setAttribute("userType", userType);
		request.setAttribute("pk", zzform.getTemp());
		return mapping.findForward("viewxssq");
	}
	/** 
	 * Method getXmsh
	 * 学生资助查询
	 * @return ActionForward
	 */
	public ActionForward queryXszz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep") == null ? "" 
				: session.getAttribute("userDep").toString();
		String tips = "学生资助 - 信息维护 - 学生资助查询";
		List<String[]> rs = new ArrayList<String[]>();
		String rsNum = "";
		String tableName = "";
		zzform.setXxsh(DealString.toGBK(zzform.getXxsh()));
		HashMap<String,String> xmMap = new HashMap<String,String>();
		if(userType.equalsIgnoreCase("stu")){//学生无操作权限
			request.setAttribute("errMsg", "学生用户无权访问该页面！");
			return new ActionForward("/errMsg.do", false);
		}
		if(!Base.isNull(zzform.getXmdm())){
			String[] cols = new String[]{"xmdm","xmmc","xmlc"};
			xmMap = service.getOneZzxm_ser(zzform.getXmdm(), cols);
			String xmlc = xmMap.get("xmlc");
			if("国家奖学金".equals(xmlc)){
				tableName = "view_xszz_jxjsqb";
			}else if("国家助学金".equals(xmlc)){
				tableName = "view_xszz_zxjsqb";
			}else if("国家励志奖学金".equals(xmlc)){
				tableName = "view_xszz_lzjxjsqb";
			}
		}
		if(userType.equals("xy")){
			zzform.setXy(userDep);
			request.setAttribute("xydm", userDep);
		}
		String[] colList = new String[] { "pk", "xmdm","xh","xm","nj","xymc","zymc","bjmc","xmmc","xysh","xxsh"};
		String[] colListCN = new String[] { "主键", "项目代码","学号", "姓名","年级",Base.YXPZXY_KEY+"名称","专业名称","班级名称","项目名称",Base.YXPZXY_KEY+"审核","学校审核" };
		List topTr = service.arrayToList_ser(colList, colListCN);
		if ((zzform.getDoType() != null) && zzform.getDoType().equalsIgnoreCase("query")) {
			zzform.setAct("query");
			rs = service.queryShInfo_ser(colList,zzform,tableName,userType);
			if (rs == null) {
				rsNum = "0";
			} else {
				rsNum = String.valueOf(rs.size());
			}
		}
		zzform.setXn(Base.isNull(zzform.getXn()) == true ? Base.currXn:zzform.getXn());
		initData(request,zzform);
		request.setAttribute("tips", tips);
		request.setAttribute("rs", rs);
		request.setAttribute("zzxm", xmMap);
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("topTr", topTr);
		request.setAttribute("tableName", tableName);// 发送视图名	
		request.setAttribute("userType", userType);// 发送记录数
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		return mapping.findForward("queryxszz");
	}

	/** 
	 * Method zzjeEdit
	 * 查看单个学生资助申请和审核信息
	 * @return ActionForward
	 */
	public ActionForward getDgView(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String tips = "学生资助 - 信息维护 - 学生资助查询 - 单个查看";
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		HashMap<String,String> map = service.getXssqInfo_ser(zzform);
		request.setAttribute("xnxszzList", service.getXsAllPrise_ser(zzform.getXh(), Base.currXn));
		String temp = service.getViewCjXnOrNd();
		if(temp.length() > 5){
			request.setAttribute("xnxswjcfList", service.getXsAllWjcf_ser(zzform.getXh(), temp,""));
		}else{
			List<HashMap<String,String>> wjlist = service.getXsAllWjcf_ser(zzform.getXh(), Base.beforXn,"01");
			wjlist.addAll(service.getXsAllWjcf_ser(zzform.getXh(), Base.currXn,"02"));
			request.setAttribute("xnxswjcfList", wjlist);
		}
		String wjsclj = map.get("wjsclj");
		if(!Base.isNull(wjsclj)){
			map.put("wjmc", wjsclj.substring(wjsclj.indexOf("!@!")+3, wjsclj.length()));
		}
		request.setAttribute("rs", map);
		request.setAttribute("tips", tips);
		request.setAttribute("userType", userType);
		request.setAttribute("pk", zzform.getTemp());
		return mapping.findForward("viewzzxx");
	}
	/** 
	 * Method zzjeEdit
	 * 学生查看自己的资助情况
	 * @return ActionForward
	 */
	public ActionForward queryOneXszz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String tips = "学生资助 - 信息维护 - 申请结果查询";
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userOnLine") == null ? "" 
				: session.getAttribute("userOnLine").toString();
		String userName = session.getAttribute("userName") == null ? "" 
				: session.getAttribute("userName").toString();
		List<String[]> rs = new ArrayList<String[]>();
		String[] colList = new String[] { "pk","xmdm","xm","xn","xmmc","xysh","xxsh"};
		String[] colListCN = new String[] { "主键","项目代码","姓名","学年","项目名称",Base.YXPZXY_KEY+"审核","学校审核" };
		List topTr = service.arrayToList_ser(colList, colListCN);
		String xm = "";
		if("teacher".equals(userType)){
			request.setAttribute("view", "no");
		}else{
			zzform.setXh(userName);
			rs = service.queryShInfo_ser(colList,zzform,"","");
			if(rs != null && rs.size() > 0 && rs.get(0) !=null){
				xm = rs.get(0)[2];
			}
		}
		request.setAttribute("topTr", topTr);
		request.setAttribute("rs", rs);
		request.setAttribute("tips", tips);
		request.setAttribute("xm", xm);
		return mapping.findForward("xsviewzzinfo");
	}
	/** 
	 * Method xszzExpData
	 * 数据导出
	 * @return ActionForward
	 */
	public ActionForward xszzExpData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		String tableName = request.getParameter("tableName");
		String condsql = request.getParameter("condsql");
		zzform.setXysh(DealString.toGBK(zzform.getXysh()));
		zzform.setXxsh(DealString.toGBK(zzform.getXxsh()));
		String sql = "";
		sql = service.getExpSql_ser(zzform,tableName,condsql);
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		Excel2Oracle.exportData(sql, tableName, response.getOutputStream(), "数据导出");
		return mapping.findForward("expdata");
	}

	/** 
	 * Method printSqb
	 * 申请表打印
	 * @return ActionForward
	 */
	public ActionForward printSqb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HttpSession session = request.getSession();
		String xxmc = session.getAttribute("xxmc") == null ? "" 
				: session.getAttribute("xxmc").toString();
		HashMap<String,String> map = new HashMap<String,String>();
		map = service.formToMap_ser(zzform);
		String temp = service.getViewCjXnOrNd();
		if(temp.length() > 5){
			zzform.setXn(temp);
			zzform.setXq("01");
			map.put("jsxx", "("+temp+"春)");
		}else{
			zzform.setXn(Base.currXn);
			zzform.setXq("02");
			map.put("jsxx", "("+temp+"秋)");
		}
		map.putAll(service.getXscj_ser(zzform));
		map.putAll(service.getXsxx_ser(xxmc, zzform));
		request.setAttribute("rs", map);
		return mapping.findForward("printsqb");
	}

	/** 
	 * Method printSqb
	 * 学生各资助报表打印
	 * @return ActionForward
	 */
	public ActionForward printXszz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		if(userType.equalsIgnoreCase("stu")){//学生无操作权限
			request.setAttribute("errMsg", "学生用户无权访问该页面！");
			return new ActionForward("/errMsg.do", false);
		}	
		String[] cols = new String[]{"xmdm","xmmc","xmlc","bbys"};
		HashMap<String, String> xmMap = new HashMap<String, String>();
		if(!Base.isNull(zzform.getXmdm())){
			xmMap = service.getOneZzxm_ser(zzform.getXmdm(),cols);
			zzform.setBbys(xmMap.get("bbys"));
			zzform.setXmmc(xmMap.get("xmmc"));
		}	
		if(Base.isNull(zzform.getNd())){
			zzform.setNd(Base.currNd);
		}
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("zzxmList", service.getAllZzxm_ser());
		request.setAttribute("xmMap", xmMap);
		request.setAttribute("bblxList", service.getPrintList_ser(zzform, userType));
		return mapping.findForward("printxszz");
	}
	/** 
	 * Method printSqb
	 * 学生各资助报表打印
	 * @return ActionForward
	 */
	public ActionForward excutePrint(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		XcxyXszzForm zzform = (XcxyXszzForm) form;
		XcxyXszzService service =new XcxyXszzService();
		HttpSession session = request.getSession();
		String userType = session.getAttribute("userType") == null ? "" 
				: session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep") == null ? "" 
				: session.getAttribute("userDep").toString();
		String bmmc = session.getAttribute("bmmc") == null ? "" 
				: session.getAttribute("bmmc").toString();
		zzform.setXydm(userDep);
		zzform.setXymc(bmmc);
		String[] cols = new String[]{"xmdm","xmmc","xmlc","bbys"};
		HashMap<String, String> xmMap = new HashMap<String, String>();
		if(!Base.isNull(zzform.getXmdm())){
			xmMap = service.getOneZzxm_ser(zzform.getXmdm(),cols);
			zzform.setXmlc(xmMap.get("xmlc"));
			zzform.setXmmc(xmMap.get("xmmc"));
		}
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		service.excutePrint_ser(zzform,userType,response.getOutputStream());
		return mapping.findForward("expdata");
	}
}