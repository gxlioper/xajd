/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xljk.mjxy.xlkh;

import java.io.File;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jxl.write.WritableWorkbook;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.ExcelMethods;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.xljk.mjxy.XljkMjxyService;

/** 
 * MyEclipse Struts
 * Creation date: 12-07-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class XljkMjxyXlkhxsAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method xlkhxsWh
	 * 心理困惑学生维护
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xlkhxsWh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		XljkMjxyService service=new XljkMjxyService();
		XsxxglService xsxxglService = new XsxxglService();
		XljkMjxyXlkhxsForm myForm=(XljkMjxyXlkhxsForm)form;
		
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		String userType=session.getAttribute("userType").toString();
		String tabName="xljk_mjxy_xlkhxsb";
		
		//学生用户读取时控制
		if ("stu".equals(userType)) {
			request.setAttribute("errMsg", "对不起，学生用户不能访问本页面!");
			return new ActionForward("/errMsg.do",false);
		}
		
		if("save".equalsIgnoreCase(doType)){
			//主表数据插入
			this.insertOperation(request,tabName);
			//批量增加副表信息
			String result=request.getAttribute("result").toString();
			if("true".equalsIgnoreCase(result)){
				service.deleteSql(myForm.getSave_xh());
				service.plSave(request, myForm);
			}
			String pkValue=myForm.getSave_xh();
			
			this.selectPageDataByOne(request, tabName, tabName, pkValue);
			HashMap<String,String>hashMap=(HashMap<String,String>)request.getAttribute("rs");
			hashMap.putAll(xsxxglService.selectStuinfo(hashMap.get("xh")));
			request.setAttribute("pkValue", pkValue);
			doType="add";
		}
		
		request.setAttribute("userDep", userDep);
		request.setAttribute("path", "xljkMjxyXlkhxs.do?method=xlkhxsWh&doType=add");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		return mapping.findForward("xlkhxsWh");
	}
	
	/** 
	 * Method xlkhxsCx
	 * 心理困惑学生查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xlkhxsCx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		XljkMjxyService service=new XljkMjxyService();
		XljkMjxyXlkhxsForm myForm=(XljkMjxyXlkhxsForm)form;
		
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		String userType=session.getAttribute("userType").toString();
		
		if ("stu".equals(userType)) {
			request.setAttribute("errMsg", "对不起，学生用户不能访问本页面!");
			return new ActionForward("/errMsg.do",false);
		}
		
		if("del".equalsIgnoreCase(doType)){
			this.deleteOperation(request, "xljk_mjxy_xlkhxsb");//主表数据删除
			//副表信息删除
			service.deleteFbxx();
			doType="qry";
		}
		
		
		if("qry".equalsIgnoreCase(doType)){
			String []outputColumn ={"pkValue","xh","xm","xb","nj","xymc","zymc","bjmc"};
			request.setAttribute("clientColumns", "  '' disabled, ");
			this.selectPageDataByPagination(request, myForm, "xljk_mjxy_xlkhxsb", "view_xljk_mjxy_xlkhxsb", outputColumn);
		}
		
		request.setAttribute("userDep", userDep);
		request.setAttribute("save_xn", Base.currXn);
		request.setAttribute("save_xq", Base.currXq);
		request.setAttribute("path", "xljkMjxyXlkhbs.do?method=xlkhbsCx");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		return mapping.findForward("xlkhxsCx");
	}
	
	/** 
	 * Method xlkhxsOne
	 * 心理困惑学生单条数据维护
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xlkhxsOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		XljkMjxyService service=new XljkMjxyService();
		XljkMjxyXlkhxsForm myForm=(XljkMjxyXlkhxsForm)form;
		
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();

		String pkValue=request.getParameter("pkValue");
		
		if("save".equalsIgnoreCase(doType)){
			this.updateOperation(request, "xljk_mjxy_xlkhxsb");
			//批量修改副表信息
			String result=request.getAttribute("result").toString();
			if("true".equalsIgnoreCase(result)){
				service.deleteSql(myForm.getSave_xh());
				service.plSave(request, myForm);
			}
		}
		
		this.selectPageDataByOne(request, "xljk_mjxy_xlkhxsb", "view_xljk_mjxy_xlkhxsb", pkValue);//主表数据查询
		
		request.setAttribute("userDep", userDep);
		request.setAttribute("save_xn", Base.currXn);
		request.setAttribute("save_xq", Base.currXq);
		request.setAttribute("path", "xljkMjxyXlkhxs.do?method=xlkhxsWh&doType=add");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("doType", doType);
		request.setAttribute("pkValue", pkValue);
		return mapping.findForward("xlkhxsWh");
	}
	
	/**
	 * 心理困惑咨询信息导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		
		XljkMjxyService service=new XljkMjxyService();
		XljkMjxyXlkhxsForm myForm=(XljkMjxyXlkhxsForm)form;
 		HttpSession session=request.getSession();
		String daochu=request.getParameter("daochu");
		if("xljk_mjxy_xlkhzxjlb".equalsIgnoreCase(daochu)){
			myForm.setUserName(session.getAttribute("userName").toString());
			myForm.setUserDep(session.getAttribute("userDep").toString());
			myForm.setUserType(session.getAttribute("userType").toString());
			myForm.setIsBzr(session.getAttribute("isBzr").toString());
			myForm.setIsFdy(session.getAttribute("isFdy").toString());
			String modelPath = servlet.getServletContext().getRealPath("")+"/print/xsxx/cslg_xxjl.xls";
			response.reset();
			response.setContentType("application/vnd.ms-excel");
			WritableWorkbook wwb = ExcelMethods.getWritableWorkbook(new File(
					modelPath), response.getOutputStream());
			service.expData(myForm, request, wwb);
		}else{
			
			try {
				
				this.expPageData(request, response, daochu,daochu, null);
			
			} catch (Exception e) {
			
				e.printStackTrace();
			
			}		
		}
		return mapping.findForward("success");
	}
	
	public ActionForward khxsdtb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
  		XsxxglService xsxxglService = new XsxxglService();
		XljkMjxyService service=new XljkMjxyService();
		
		String xh = request.getParameter("pkValue");
		if(!"".equalsIgnoreCase(xh) && xh!=null){
		this.selectPageDataByOne(request, "xljk_mjxy_xlkhxsb", "xljk_mjxy_xlkhxsb", xh);
		HashMap<String,String>hashMap=(HashMap<String,String>)request.getAttribute("rs");
		hashMap.putAll(xsxxglService.selectStuinfo(hashMap.get("xh")));
		request.setAttribute("rs", hashMap);
		request.setAttribute("len", service.getKhxsjlList(xh).size()+1);
		request.setAttribute("khxsjl",service.getKhxsjlList(xh));
		}
		return mapping.findForward("khxsdtb");
	}
	
}