/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xljk.mjxy;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.BaseAction;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;

/** 
 * MyEclipse Struts
 * Creation date: 12-06-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class XljkMjxyXlztbsAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * 心理状态报送维护
	 * Method xlztbsWh
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward xlztbsWh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XljkMjxyService service=new XljkMjxyService();
		XljkMjxyXlztbsForm myForm=(XljkMjxyXlztbsForm)form;
		HttpSession session=request.getSession();
		
		String tabName="XLJK_MJXY_XLJKBS";
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		
		if ("stu".equals(userType)) {
			request.setAttribute("errMsg", "对不起，学生用户不能访问本页面!");
			return new ActionForward("/errMsg.do",false);
		}

		if("save".equalsIgnoreCase(doType)){
			String pkValue=myForm.getSave_xydm()+myForm.getSave_bsbm()+myForm.getSave_bssj();
			this.insertOperation(request, tabName);
			this.selectPageDataByOne(request, tabName, tabName, pkValue);
			doType="add";
			request.setAttribute("pkValue", pkValue);
		}
		
		request.setAttribute("doType", doType);
		request.setAttribute("bsbmList", service.getBsbmList());
		request.setAttribute("xlztList", service.getXlztList());
		request.setAttribute("nowTime", GetTime.getNowTime2());
		request.setAttribute("path", "xljkMjxyXlztbs.do?method=xlztbsWh&doType=add");
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		return mapping.findForward("xlztbsWh");
	}
	
	/**
	 * 心理状态报送查询
	 * method xlztbsCx
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward xlztbsCx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XljkMjxyService service=new XljkMjxyService();
		XljkMjxyXlztbsForm myForm=(XljkMjxyXlztbsForm)form;
		HttpSession session=request.getSession();
		
		String doType=request.getParameter("doType");
		String tabName="XLJK_MJXY_XLJKBS";
		String viewName="view_xljk_mjxy_xljkbs";
		String userType=session.getAttribute("userType").toString();
		
		if ("stu".equals(userType)) {
			request.setAttribute("errMsg", "对不起，学生用户不能访问本页面!");
			return new ActionForward("/errMsg.do",false);
		}
		
		if("del".equalsIgnoreCase(doType)){
			this.deleteOperation(request, tabName);
			doType="qry";
		}
		
		if("qry".equalsIgnoreCase(doType)){
			String []outputColumn={"pkValue","xymc","bssj","fzr","bsr","xlztmc","bsbmmc"}; 
			String qry="";
			if(!"".equalsIgnoreCase(myForm.getKssj())){
				qry=" and bssj >= "+myForm.getKssj();
			}
			if(!"".equalsIgnoreCase(myForm.getJssj())){
				
				qry+=" and bssj <= "+myForm.getJssj();
			}
			request.setAttribute("annexTerm", qry);
			this.selectPageDataByPagination(request, form,tabName, viewName, outputColumn);
		}
		
		request.setAttribute("bsbmList", service.getBsbmList());
		request.setAttribute("xlztList", service.getXlztList());
		request.setAttribute("path", "xljkMjxyXlztbs.do?method=xlztbsCx");
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		return mapping.findForward("xlztbsCx");
	}
	
	/** 
	 * 心理状态报送单条记录操作
	 * Method xlztbsWh
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward xlztbsOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		XljkMjxyService service=new XljkMjxyService();
		
		String pkValue=request.getParameter("pkValue");
		String tabName="XLJK_MJXY_XLJKBS";
		String viewName="view_xljk_mjxy_xljkbs";
		String doType=request.getParameter("doType");
		if("view".equalsIgnoreCase(doType) 
				|| "modi".equalsIgnoreCase(doType)){
			this.selectPageDataByOne(request, tabName, viewName, pkValue);
		}
		
		if("update".equalsIgnoreCase(doType)){
			this.updateOperation(request, tabName);
		}
		
		request.setAttribute("doType", doType);
		request.setAttribute("bsbmList", service.getBsbmList());
		request.setAttribute("xlztList", service.getXlztList());
		request.setAttribute("nowTime", GetTime.getNowTime2());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("path", "xljkMjxyXlztbs.do?method=xlztbsWh&doType=add");
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		return mapping.findForward("xlztbsWh");
	}
	
	public ActionForward xlztbsb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pkValue=request.getParameter("pkValue");
		String tabName="XLJK_MJXY_XLJKBS";
		String viewName="view_xljk_mjxy_xljkbs";
		this.selectPageDataByOne(request, tabName, viewName, pkValue);
		return mapping.findForward("xsxlztbsb");
	}
	
	/**
	 * 信息导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String tabName="XLJK_MJXY_XLJKBS";
		String viewName="view_xljk_mjxy_xljkbs";
		try {
			this.expPageData(request, response, tabName, viewName, null);
		} catch (Exception e) {
			e.printStackTrace();
		}			
		
		return mapping.findForward("success");
	}
}