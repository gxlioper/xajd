/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xljk.xyxljkgl.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.DAO.DAO;
import xgxt.action.Base;
import xgxt.utils.FormModleCommon;
import xgxt.xljk.xyxljkgl.form.*;
import xgxt.xljk.xyxljkgl.util.*;
import java.util.*;
import xgxt.xljk.lrh_Util.util.*;
import xgxt.xljk.lrh_Util.model.*;

/** 
 * MyEclipse Struts
 * Creation date: 07-31-2007
 * 
 * XDoclet definition:
 * @struts.action path="/xljk_xsxlgcy" name="xljk_xyxljkjyry_from" scope="request" validate="true"
 */
public class xljk_xsxlgcyAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		// TODO Auto-generated method stub

		xljk_xyxljkjyry_from xljk_xyxljkjyry_from = (xljk_xyxljkjyry_from) form;
		try {
			int i = Base.chkTimeOut(request.getSession());
			if (i <= 2) {
				xljk_xyxljkjyry_from.setErrMsg("登陆超时，请重新登陆！");
				return new ActionForward("/login.jsp", false);
			}
			HttpSession session = request.getSession();
			if (session == null) {
				request.setAttribute("errMsg", "sadfsdf");
				return mapping.findForward("false");
			}

			ActionForward myActFwd = null;
			String act = request.getParameter("act");
			String doType = request.getParameter("doType");
			//	    String userName=session.getAttribute("userName").toString();
			//		String userDep=session.getAttribute("userDep").toString();
			//		String userNameReal=session.getAttribute("userNameReal").toString();
			//		String userOnLine=session.getAttribute("userOnLine").toString();

			if (act.equals("xsxlgcy")) {
				if (doType != null && !doType.equalsIgnoreCase("")) {
					if (doType.equals("gcy_del")) {
						myActFwd = gcy_del(mapping, form, request, response);
					} else if (doType.equals("gcy_search")) {
						myActFwd = gcy_search(mapping, form, request, response);
					} else if (doType.equals("gcy_view")) {
						myActFwd = gcy_view(mapping, form, request, response);
					} else if (doType.equals("gcy_add")) {
						myActFwd = gcy_add(mapping, form, request, response);
					} else if (doType.equals("stu_info")) {
						myActFwd = stu_info(mapping, form, request, response);
					} else if (doType.equals("gcy_modi")) {
						myActFwd = gcy_modi(mapping, form, request, response);
					}

				} else {
					myActFwd = index_to_jsp(mapping, form, request, response);
				}
			}
			return myActFwd;
		} catch (Exception e) {
			e.printStackTrace();
			xljk_xyxljkjyry_from.setErrMsg("数据连接中断，请重新登陆！");
			return new ActionForward("/login.jsp", false);
		}
	}

	private ActionForward index_to_jsp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HttpSession session = request.getSession();
		DAO dao = DAO.getInstance();
		String userDep = session.getAttribute("userDep").toString();
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		myform.deal_gbk();
		String xydm = myform.getXydm();
		lrh_commen_util commen_util = new lrh_commen_util();
		String userType = commen_util.get_userType(userDep);
		if ("xx".equalsIgnoreCase(userType)) {
			xydm = myform.getXydm();
		} else {
			xydm = userDep;
			myform.setXydm(xydm);
		}
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		String zydm = myform.getZydm();
		List sexList = myutil.get_dmwhb_dmList("sex");
		request.setAttribute("sexList", sexList);
		request.setAttribute("xyList", myutil.get_xyList());
		request.setAttribute("bjList", myutil.get_bjList(xydm, zydm));
		request.setAttribute("writeAble", "yes");
		request.setAttribute("userDep", userDep);
		request.setAttribute("userType", userType);
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		
		request.setAttribute("path", "xljk_xsxlgcy.do?act=xsxlgcy");
		FormModleCommon.commonRequestSet(request);
		
		return mapping.findForward("index_to_jsp");
	}

	private ActionForward gcy_search(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HttpSession session = request.getSession();
		String userDep = session.getAttribute("userDep").toString();
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		myform.deal_gbk();
		String xydm = myform.getXydm();
		lrh_commen_util commen_util = new lrh_commen_util();
		String userType = commen_util.get_userType(userDep);
		if ("xx".equalsIgnoreCase(userType)) {
			xydm = myform.getXydm();
		} else {
			xydm = userDep;
			myform.setXydm(xydm);
		}
		List gcyList = myutil.xsxlgcy_search(myform);
		String rsNum = String.valueOf(gcyList.size());
		String tableName = "VIEW_XLJK_XSXLGCYB";
		String[] zdm = { "GCYBH", "XH", "XM", "XB", "XYMC", "BJMC", "CSNY" };
		List topTr = myutil.Get_Table_Title(tableName, zdm);
		String zydm = myform.getZydm();
		List sexList = myutil.get_dmwhb_dmList("sex");
		request.setAttribute("topTr", topTr);
		request.setAttribute("rsNum", rsNum);
		request.setAttribute("rs", gcyList);
		request.setAttribute("sexList", sexList);
		request.setAttribute("xyList", myutil.get_xyList());
		request.setAttribute("bjList", myutil.get_bjList(xydm, zydm));
		request.setAttribute("writeAble", "yes");
		request.setAttribute("userDep", userDep);
		request.setAttribute("userType", userType);
		DAO dao = DAO.getInstance();
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		
		request.setAttribute("path", "xljk_xsxlgcy.do?act=xsxlgcy");
		FormModleCommon.commonRequestSet(request);
		
		return mapping.findForward("index_to_jsp");
	}

	private ActionForward gcy_add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		DAO dao = DAO.getInstance();
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		myutil.xljk_xljkfdy_util(request);
		myform.deal_gbk();
		String add_flag = request.getParameter("add_flag");
		if (add_flag != null && !add_flag.equalsIgnoreCase("")) {
			if (add_flag.equals("yes")) {
				String message = myutil.xsxlgcy_add(myform);
				request.setAttribute("message", message);
			}
		}
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		return mapping.findForward("gcy_add");
	}

	private ActionForward stu_info(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		//		 		xljk_xsxlgcy_util myutil= new xljk_xsxlgcy_util();
		myform.deal_gbk();
		String url = "/xgxt/xljk_xsxlgcy.do?act=xsxlgcy&doType=stu_info";
		String xh = request.getParameter("stu_id");
		DAO dao = DAO.getInstance();
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		if (xh != null && !xh.equalsIgnoreCase("")) {
			myform.setXh(xh);
			stu_info_util stu_info = new stu_info_util();
			stu_info_model stu_mod = new stu_info_model();
			stu_mod = stu_info.stu_find_byxh(xh);
			myform.setXb(stu_mod.getXB());
			myform.setXm(stu_mod.getXM());
			myform.setXydm(stu_mod.getXYDM());
			myform.setXymc(stu_mod.getXYMC());
			myform.setBjdm(stu_mod.getBJDM());
			myform.setBjmc(stu_mod.getBJMC());
			return mapping.findForward("gcy_add");
		} else {
			request.setAttribute("url", url);
			return mapping.findForward("stu_info");
		}
	}

	private ActionForward gcy_view(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		myform.deal_gbk();
		String gcy_xnid = request.getParameter("xn_id");
		myform.setXljk_xsxlgcyb_xnid(gcy_xnid);
		myform = myutil.xsxlgcy_view(myform);
		return mapping.findForward("gcy_view");
	}

	private ActionForward gcy_modi(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		myutil.xljk_xljkfdy_util(request);
		myform.deal_gbk();
		String xsxlgcy_xnid = request.getParameter("xn_id");
		myform.setXljk_xsxlgcyb_xnid(xsxlgcy_xnid);
		String modi_flag = request.getParameter("modi_flag");
		if (modi_flag != null && !modi_flag.equalsIgnoreCase("")) {
			if (modi_flag.equals("yes")) {
				xsxlgcy_xnid = request.getParameter("xsxlgcy_xnid");
				myform.setXljk_xsxlgcyb_xnid(xsxlgcy_xnid);
				String message = myutil.xsxlgcy_modi(myform);
				request.setAttribute("message", message);
			}
		} else {
			myform = myutil.xsxlgcy_view(myform);
		}
		DAO dao = DAO.getInstance();
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		request.setAttribute("xsxlgcy_xnid", xsxlgcy_xnid);
		return mapping.findForward("gcy_modi");
	}

	private ActionForward gcy_del(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		xljk_xyxljkjyry_from myform = (xljk_xyxljkjyry_from) form;
		xljk_xsxlgcy_util myutil = new xljk_xsxlgcy_util();
		myutil.xljk_xljkfdy_util(request);
		myform.deal_gbk();

		String xsxlgcy_xnid = request.getParameter("xn_id");
		myform.setXljk_xsxlgcyb_xnid(xsxlgcy_xnid);
		String message = myutil.xsxlgcy_del(myform);
		HttpSession session = request.getSession();
		request.setAttribute("message", message);
		String xydm = myform.getXydm();
		lrh_commen_util commen_util = new lrh_commen_util();
		String userDep = session.getAttribute("userDep").toString();
		String userType = commen_util.get_userType(userDep);
		if ("xx".equalsIgnoreCase(userType)) {
			xydm = myform.getXydm();
		} else {
			xydm = userDep;
			myform.setXydm(xydm);
		}
		String zydm = myform.getZydm();
		DAO dao = DAO.getInstance();
		request.setAttribute("njList", dao.getNjList());// 发送年级列表
		List sexList = myutil.get_dmwhb_dmList("sex");
		request.setAttribute("sexList", sexList);
		request.setAttribute("xyList", myutil.get_xyList());
		request.setAttribute("bjList", myutil.get_bjList(xydm, zydm));
		request.setAttribute("writeAble", "yes");
		request.setAttribute("userDep", userDep);
		request.setAttribute("userType", userType);
		return mapping.findForward("index_to_jsp");
	}

}