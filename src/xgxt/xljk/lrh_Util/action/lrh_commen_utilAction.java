/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.xljk.lrh_Util.action;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Timestamp;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import xgxt.action.Base;
import xgxt.base.Excel2Oracle;
import xgxt.form.CommanForm;
import xgxt.xljk.lrh_Util.form.lrh_commen_form;

/** 
 * MyEclipse Struts
 * Creation date: 08-25-2007
 * 
 * XDoclet definition:
 * @struts.action path="/lrh_commen_util" name="lrh_commen_form" scope="request" validate="true"
 */
public class lrh_commen_utilAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		lrh_commen_form lrh_commen_form = (lrh_commen_form) form;// TODO Auto-generated method stub
		try {
		    int i = Base.chkTimeOut(request.getSession());
		    if (i <= 2) {
		    	lrh_commen_form.setErrMsg("登陆超时，请重新登陆！");
			return new ActionForward("/login.jsp", false);
		    }

		    HttpSession session = request.getSession();
		    if (session == null) {
			request.setAttribute("errMsg", "sadfsdf");
			return mapping.findForward("false");
		    } 
		
			ActionForward myActFwd = null;
			String act = request.getParameter("act");
			String doType=request.getParameter("doType");
//		    String userName=session.getAttribute("userName").toString();
//			String userDep=session.getAttribute("userDep").toString();
//			String userNameReal=session.getAttribute("userNameReal").toString();
//			String userOnLine=session.getAttribute("userOnLine").toString();
		if (act.equals("lrh_commen_util")) {
			if(doType!=null&&!doType.equalsIgnoreCase(""))
			{
				if(doType.equals("date_export"))
				{
					myActFwd = date_export(mapping,form,request,response);	
				}
				else if(doType.equals("date_inport"))
				{
					//myActFwd = kqcc_view(mapping,form,request,response);	
					myActFwd = date_inport(mapping,form,request,response);	
				}
				else if(doType.equals("uploadFile"))
				{
					//uploadFile
					myActFwd = uploadFile(mapping,form,request,response);	
				}
			}
			else
			{
				myActFwd = index_to_jsp(mapping,form,request,response);	
			}
		}
		return myActFwd;
		}
	catch(Exception e){
		e.printStackTrace();
		lrh_commen_form.setErrMsg("数据连接中断，请重新登陆！");
    	return new ActionForward("/login.jsp", false);
		}
	}
	private ActionForward index_to_jsp(ActionMapping mapping, ActionForm form,
    	    HttpServletRequest request, HttpServletResponse response)
    	    throws Exception {
//			HttpSession session = request.getSession();
			lrh_commen_form lrh_commen_form = (lrh_commen_form) form;
//			lrh_commen_util commen_util= new lrh_commen_util();
//			WjcfUtil myutil = new WjcfUtil();
			String sql="";
//			String url="";
			String tableName="";
			try
			{
				Object commen_form=request.getAttribute("commen_form");
				lrh_commen_form=(lrh_commen_form)commen_form;
				sql=lrh_commen_form.getSql();
//				url=lrh_commen_form.getUrl();
				tableName=lrh_commen_form.getTableName();
			}catch (Exception ex)
			{
				ex.printStackTrace();
			}
			
			response.setContentType("application/vnd.ms-excel");
			Excel2Oracle.exportData(sql,tableName,response.getOutputStream());
			return null;
	}
	
	private ActionForward date_export(ActionMapping mapping, ActionForm form,
    	    HttpServletRequest request, HttpServletResponse response)
    	    throws Exception {
//			HttpSession session = request.getSession();
			lrh_commen_form lrh_commen_form = (lrh_commen_form) form;
//			lrh_commen_util commen_util= new lrh_commen_util();
//			WjcfUtil myutil = new WjcfUtil();
			String sql="";
//			String url="";
			String tableName="";
			try
			{
				Object commen_form=request.getAttribute("commen_form");
				lrh_commen_form=(lrh_commen_form)commen_form;
				sql=lrh_commen_form.getSql();
//				url=lrh_commen_form.getUrl();
				tableName=lrh_commen_form.getTableName();
				
			}catch (Exception ex)
			{
				ex.printStackTrace();
			}
			
			response.setContentType("application/vnd.ms-excel");
			Excel2Oracle.exportData(sql,tableName,response.getOutputStream());
			return null;
	}
	
	private ActionForward date_inport(ActionMapping mapping, ActionForm form,
    	    HttpServletRequest request, HttpServletResponse response)
    	    throws Exception {
			lrh_commen_form lrh_commen_form = (lrh_commen_form) form;
			String tableName="";
			try
			{
				Object commen_form=request.getAttribute("commen_form");
				lrh_commen_form=(lrh_commen_form)commen_form;
				tableName=lrh_commen_form.getTableName();
			}
			catch(Exception ex)
			{
				ex.printStackTrace();
			}
			if(tableName!=null&&!tableName.equalsIgnoreCase(""))
			{
			}
			else
			{
				tableName=request.getParameter("tableName");
			}
			lrh_commen_form.setTableName(tableName);
			return mapping.findForward("date_inport");
	}
	
	
	
	private ActionForward uploadFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		String dir = servlet.getServletContext().getRealPath("/upload");
		File f = new File(dir);
		if (!f.exists()) {
			f.mkdir();
		}
		HttpSession session = request.getSession();
		String fName = session.getAttribute("userName").toString();
		String tabName = request.getParameter("tableName");
		Timestamp date = new Timestamp(System.currentTimeMillis());
		fName += date.toString().substring(0, 19);
		fName = fName.replaceAll("-", "").replaceAll(" ", "").replaceAll(":",
		"");
		CommanForm hff = (CommanForm) form;
		FormFile file = hff.getFile();
		if (file == null) {
			return mapping.findForward("false");
		}
		int size = file.getFileSize();
		InputStream in = file.getInputStream();
		String filePath = dir + "/" + fName + ".xls";
		OutputStream out = new FileOutputStream(filePath);
		int bytesRead = 0;
		byte[] buffer = new byte[size];
		while ((bytesRead = in.read(buffer, 0, size)) != -1) {
			out.write(buffer, 0, bytesRead);
		}
		out.close();
		in.close();
		request.setAttribute("tabName", tabName);
		request.setAttribute("filepath", filePath);
		return mapping.findForward("success");
	}

}