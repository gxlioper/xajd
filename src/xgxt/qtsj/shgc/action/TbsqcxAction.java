/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.qtsj.shgc.action;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.base.Excel2Oracle;
import xgxt.qtsj.shgc.form.ShgcTbxxForm;
import xgxt.qtsj.shgc.service.TbsqcxService;
import xgxt.qtsj.shgc.service.TbxxwhService;

/**
 * <p>Title: 学生工作管理系统</p>
 * <p>Description: 上海工程保险管理模块投保申请查询Action</p>
 * <p>Copyright: Copyright (c) 2008</p>
 * <p>Company: zfsoft</p>
 * <p>Author: 李容</p>
 * <p>Version: 1.0</p>
 * <p>Time: 2008-06-19</p>
 */
public class TbsqcxAction extends DispatchAction {
	
	/**
	 * 投保申请结果查询
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */	
	public ActionForward appQue(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		ShgcTbxxForm tbxx = (ShgcTbxxForm) form;
		HttpSession session = request.getSession();
		TbsqcxService service = new TbsqcxService();
		TbxxwhService tbwhService = new TbxxwhService();
		String writeAble = Base.getWriteAble(request); 
		writeAble = request.getParameter("writeAble") ;
		List rs = null;
		
		String bjKey = "";
		String xydm = tbxx.getXydm();
		String userOnLine = session.getAttribute("userOnLine").toString();
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();
		String go = request.getParameter("go");
		String xh = tbxx.getXh();
		xh = userOnLine.equalsIgnoreCase("student") ? session.getAttribute("userName").toString() : xh;
		xydm = xydm==null? "" : xydm;
		
		//学院用户只能查询本学院信息
		if(userType.equalsIgnoreCase("xy")){
			xydm = userDep;
			tbxx.setXydm(xydm);			
		}
		
		bjKey = tbwhService.getBjKey(tbxx);
		
		//字符转换
		tbxx.setXh(xh);
		tbxx.setBxdc(DealString.toGBK(tbxx.getBxdc()));
		tbxx.setBxpzh(DealString.toGBK(tbxx.getBxpzh()));
		tbxx.setJfbj(DealString.toGBK(tbxx.getJfbj()));
		tbxx.setSpjl(DealString.toGBK(tbxx.getSpjl()));
		tbxx.setSqsj(DealString.toGBK(tbxx.getSqsj()));
		tbxx.setTbbj(DealString.toGBK(tbxx.getTbbj()));
		tbxx.setTbsj(DealString.toGBK(tbxx.getTbsj()));
		tbxx.setXm(DealString.toGBK(tbxx.getXm()));
		tbxx.setXxsh(DealString.toGBK(tbxx.getXxsh()));
		tbxx.setXyyj(DealString.toGBK(tbxx.getXyyj()));
		tbxx.setXysh(DealString.toGBK(tbxx.getXysh()));
		tbxx.setXyyj(DealString.toGBK(tbxx.getXyyj()));
		tbxx.setYesNo(DealString.toGBK(tbxx.getYesNo()));
		tbxx.setUserType(userType);
		
		if(go!=null && "go".equalsIgnoreCase(go)){
			tbxx = service.queryTbxx(tbxx);
			//数据集合
			rs = tbxx.getRs();
			//表头
			List topTr = tbxx.getTopTr();
			// =======begin 骆嘉伟 2009/4/9 ===========
			writeAble = "yes";
			// =======end 骆嘉伟 2009/4/9 ===========
			request.setAttribute("rs", rs);
			request.setAttribute("topTr", topTr);
			request.setAttribute("rsNum", rs.size());
		}
		request.setAttribute("writeAble", writeAble);
		request.setAttribute("njList", Base.getNjList());
		request.setAttribute("xnList", Base.getXnndList());
		request.setAttribute("xqList", Base.getXqList());
		request.setAttribute("xyList", Base.getXyList());
		request.setAttribute("zyList", Base.getZyMap().get(xydm));
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));
		return mapping.findForward("search");
	}
	
	/**
	 * 投保申请增加
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */	
	public ActionForward addTbsq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub		
		ShgcTbxxForm model = (ShgcTbxxForm) form;
		TbxxwhService tbxxService = new TbxxwhService();
		TbsqcxService service = new TbsqcxService();
		
		String doType = request.getParameter("doType");
		List bxxzList = tbxxService.getBxxzList();
		boolean flag = false;
		String sqsj = service.getCurrDate();
		//字符转换
		model.setJfbj(DealString.toGBK(model.getJfbj()));
		model.setTbbj(DealString.toGBK(model.getTbbj()));		
		//投保申请默认为学校审核通过
		model.setXxsh("未审核");
		model.setSqsj(sqsj);
		
		if(doType!=null && "add".equalsIgnoreCase(doType)){
			model.setBz(DealString.toGBK(model.getBz()));
			for(int i=0; i<1; i++){
				String bxxz = request.getParameter("bxxzdm" + i);
				String bf = request.getParameter("bf" + i);
				String bxpzh = request.getParameter("bxpzh" + i);
				model.setTbxzdm(bxxz);
				model.setBf(bf);
				model.setBxpzh(bxpzh);				
				flag = tbxxService.addTbxx(model,request);
			}
			request.setAttribute("result", flag);
		}		
		
		request.setAttribute("rs", model);		
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("tbgsdmList",tbxxService.getBxgsList());
		request.setAttribute("bxxzList", bxxzList);
		request.setAttribute("bxxzNum", bxxzList.size());		
		return mapping.findForward("addTbsq");
	}
	
	
	/**
	 * 修改投保申请信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward modTbsq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShgcTbxxForm model = (ShgcTbxxForm)form;
		HashMap<String, String> map = new HashMap<String, String>();
		TbxxwhService service = new TbxxwhService();
		boolean flag = false;
		
		String doType = request.getParameter("doType");
		String xh = request.getParameter("xh");
		String nd = request.getParameter("nd");
		List bxxzList = service.getBxxzList();
		List tbxzList = null;
		
		model.setXh(xh!=null && !xh.equals("") ? xh.trim() : "");
		model.setNd(nd!=null && !nd.equals("") ? nd.trim() : "");
		model.setJfbj(DealString.toGBK(model.getJfbj()));
		model.setTbbj(DealString.toGBK(model.getTbbj()));
		model.setXxsh("未审核");
		
		if(doType!=null && "mod".equalsIgnoreCase(doType)){		
			flag = service.delTbxx(model,request);
			if(flag){
			for(int i=0; i<bxxzList.size(); i++){
				String bxxz = request.getParameter("bxxzdm" + i);
				String bf = request.getParameter("bf" + i);
				String bxpzh = request.getParameter("bxpzh" + i);
				model.setTbxzdm(bxxz);
				model.setBf(bf);
				model.setBxpzh(bxpzh);
				flag = service.addTbxx(model, request);
			}
			}
			request.setAttribute("result", flag);
		}
		//获取学生投保的基本信息
		map = service.getTbxxByPk(model);
		// ========begin 骆嘉伟 2009/4/7 ===============
		String tbsj = "";
		String sqsj = map.get("sqsj");
		if (sqsj != null && !"".equals(sqsj)) {
			if (sqsj.length() > 8) {
				tbsj = sqsj.substring(0, 8);
				map.put("tbsj", tbsj);
			}
		}
		// ========end 骆嘉伟 2009/4/7 ===============
		//查询投保的所有保险险种列表
		tbxzList = service.getTbxzList(model);		
		
		request.setAttribute("tbxzList", tbxzList);	//已经投保的保险险种列表	
		request.setAttribute("tbxzNum", tbxzList.size());//投保的险种数		
		request.setAttribute("ndList", Base.getXnndList());
		request.setAttribute("tbgsdmList",service.getBxgsList());		
		request.setAttribute("bxxzList", bxxzList);	//总计保险险种列表
		request.setAttribute("bxxzNum", bxxzList.size());//保险险种数
		request.setAttribute("rs", map);
		return mapping.findForward("modTbsq");
	}
	
	/**
	 * 删除投保申请信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward delTbsq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShgcTbxxForm model = (ShgcTbxxForm)form;
		boolean flag = false;
		TbxxwhService service = new TbxxwhService();
		
		String xh = request.getParameter("xh");
		String nd = request.getParameter("nd");
		
		model.setXh(xh!=null && !xh.equals("") ? xh.trim() : "");
		model.setNd(nd!=null && !nd.equals("") ? nd.trim() : "");
		flag = service.delTbxx(model,request);
		request.setAttribute("result", flag);
		
		model.setXh("");
		model.setNd("");
		return this.appQue(mapping, form, request, response);
	}
	
	/**
	 * 导出数据方法
	 * */
	public ActionForward expData(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {		
		ShgcTbxxForm model = (ShgcTbxxForm) form;
		TbsqcxService service = new TbsqcxService();
		String sql = service.expData(model);
		
		response.reset();
		response.setContentType("application/vnd.ms-excel");
		Excel2Oracle.exportData(sql, "view_xsbxxx", response.getOutputStream());
		return mapping.findForward("success");
	}
	
}