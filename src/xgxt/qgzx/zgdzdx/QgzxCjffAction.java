/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.qgzx.zgdzdx;

import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.qgzx.service.QgzxService;

import com.zfsoft.basic.BasicAction;

/**
 * <p>
 * Title: 学生工作管理系统
 * </p>
 * <p>
 * Description: 中国地质大学勤工助学酬金发放Action
 * <p>
 * Copyright: Copyright (c) 2008
 * </p>
 * <p>
 * Company: zfsoft
 * </p>
 * <p>
 * Author: 李容
 * </p>
 * <p>
 * Version: 1.0
 * </p>
 * <p>
 * Time: 2009-02-10
 * </p>
 */
public class QgzxCjffAction extends BasicAction {
	
	/**
	 * 显示选择发放时间页面
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward xzffsj (ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pk = "gwdm||gwsbsj";//主键
		String pkValue = request.getParameter("pkValue");
		String type = DealString.toGBK(request.getParameter("type"));
		
		QgzxService service = new QgzxService();
		request.setAttribute("ndList", Base.getXnndList());//学年年度列表
		request.setAttribute("xqList", Base.getXqList());//学期列表 
		request.setAttribute("yfList", service.getYfList());//月份列表
		request.setAttribute("pk", pk);//主键
		request.setAttribute("pkValue", pkValue);//主键值
		request.setAttribute("type", type);//月工资或是临时岗工资
		return mapping.findForward("xzffsj");
	}

	/**
	 * 临时工资发放
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward lsgzff(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = "gwdm||gwsbsj";
		String curr_year = request.getParameter("nd");
		String curr_month = request.getParameter("yf");
		curr_month = curr_month == null || "".equalsIgnoreCase(curr_month) ? "0" : String.valueOf(Integer.parseInt(curr_month));
		
		model.setPk(pk);
		model.setPkValue(pkValue);
		model.setYear(curr_year);
		model.setMonth(curr_month);
		String currentPage = request.getParameter("currentPage");
		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "0" : currentPage;
		
		List rs = service.getLsgcjffInfo(model,currentPage);
		HashMap<String, String> gw = service.getGwinfoOne(model);
		String yrdwmc = gw.get("yrdwmc") == null ? "" : gw.get("yrdwmc");
		String gwdm = gw.get("gwdm") == null ? "" : gw.get("gwdm");
		request.setAttribute("yrdwmc", yrdwmc);
		request.setAttribute("gwdm", gwdm);

		String zje = service.getLsgcjze(model);
		zje = zje == null || "".equalsIgnoreCase(zje) ? "0" : zje;

		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("addRowNum", "0");
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		request.setAttribute("yf", curr_month);
		request.setAttribute("nd", curr_year);
		request.setAttribute("rs", rs);
		request.setAttribute("tr_length", rs.size());
		request.setAttribute("pTotal", rs.size());
		request.setAttribute("zje", zje);
		return mapping.findForward("lsgzff");
	}

	/**
	 * 月工资发放
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fillMonth(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");
		String curr_year = request.getParameter("nd");
		String curr_month = request.getParameter("yf");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");		
		
		curr_month = curr_month == null || "".equalsIgnoreCase(curr_month) ? "0" : String.valueOf(Integer.parseInt(curr_month));

		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1"
				: currentPage;
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0"
				: startPage;
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "25"
				: pageSize;

		String page = "ygzff";		

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? ""
				: pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? ""
				: gwxzmc.trim());
		model.setFflx("");
		List list = service.getQgzxStuList(model);
		request.setAttribute("type", "ygzff");
		request.setAttribute("title", "勤工助学劳务报酬发放表");

		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", startPage);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 月工资发放向下翻页 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fillMonthNext(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();

		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");
		String curr_year = request.getParameter("nd");		
		String curr_month = request.getParameter("yf");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");
		
		curr_month = curr_month == null || "".equalsIgnoreCase(curr_month) ? "0" : String.valueOf(Integer.parseInt(curr_month));

		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1": String.valueOf(Integer.parseInt(currentPage) + 1);
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0" : String.valueOf(Integer.parseInt(currentPage) * Integer.parseInt(pageSize) - 1);
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "25" : pageSize;

		String page = "ygzff";
		

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? "" : pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? "" : gwxzmc.trim());
		model.setFflx("");

		List list = service.getQgzxStuList(model);

		if (gwxzmc.contains("临时")) {// 临时岗工资发放
			request.setAttribute("type", "lsggzff");
			request.setAttribute("title", "勤工助学临时岗报酬发放表");
		} else {// 月工资发放
			request.setAttribute("type", "ygzff");
			request.setAttribute("title", "勤工助学劳务报酬发放表");
		}

		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", Integer.parseInt(startPage) - 24);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 月工资发放向上翻页
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fillMonthUp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();

		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");
		String curr_year = request.getParameter("nd");		
		String curr_month = request.getParameter("yf");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");
		
		curr_month = curr_month == null || "".equalsIgnoreCase(curr_month) ? "0" : String.valueOf(Integer.parseInt(curr_month));
		
		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1"
				: String.valueOf(Integer.parseInt(currentPage) - 1);
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0"
				: String.valueOf((Integer.parseInt(currentPage))
						* Integer.parseInt(pageSize) - 1);
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "24"
				: pageSize;

		String page = "ygzff";		

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? ""
				: pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? ""
				: gwxzmc.trim());
		model.setFflx("");

		List list = service.getQgzxStuList(model);

		if (gwxzmc.contains("临时")) {// 临时岗工资发放
			request.setAttribute("type", "lsggzff");
			request.setAttribute("title", "勤工助学临时岗报酬发放表");
		} else {// 月工资发放
			request.setAttribute("type", "ygzff");
			request.setAttribute("title", "勤工助学劳务报酬发放表");
		}
		
		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", Integer.parseInt(startPage) - 24);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 保存月工资发放
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward saveYgzffInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HttpSession session = request.getSession();
		QgzxCjffForm model = new QgzxCjffForm();
		QgzxCjffService service = new QgzxCjffService();

		String count = DealString.toGBK(request.getParameter("count"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String nd = DealString.toGBK(request.getParameter("nd"));
		String xn = DealString.toGBK(request.getParameter("xn"));
		String xq = DealString.toGBK(request.getParameter("xq"));
		String yf = DealString.toGBK(request.getParameter("yf"));

		model.setCount(count);
		model.setPk(pk);
		model.setPkValue(pkValue);
		model.setUserName(session.getAttribute("userName").toString());
		model.setNd(nd);
		model.setXn(xn);
		model.setXq(xq);
		model.setYf(yf);

		request.setAttribute("result", service.saveYgzffInfo(model, request));
		request.setAttribute("year",nd);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("month", yf);
		return fillMonth(mapping, form, request, response);
	}

	/**
	 * 月工资补发 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward reWorkPut(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");
		// String maxgz = DealString.toGBK(request.getParameter("maxgz"));

		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1"
				: currentPage;
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0"
				: startPage;
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "15"
				: pageSize;

		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		String page = "ygzbf";
		// String writeAble = Base.getWriteAble(request);
		String curr_year = DealString.toGBK(request.getParameter("nd"));
		String curr_month = DealString.toGBK(request.getParameter("yf"));
		String xn = DealString.toGBK(request.getParameter("xn"));
		String xq = DealString.toGBK(request.getParameter("xq"));

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setXn(xn);
		model.setXq(xq);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? ""
				: pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? ""
				: gwxzmc.trim());
		model.setFflx("补发");

		List list = service.getQgzxStuList(model);

		if (gwxzmc.contains("临时")) {// 临时岗工资发放
			request.setAttribute("type", "lsggzff");
			request.setAttribute("title", "勤工助学临时岗报酬补发表");
		} else {// 月工资发放
			request.setAttribute("type", "ygzff");
			request.setAttribute("title", "勤工助学劳务报酬补发表");
		}

		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("nd", curr_year);
		request.setAttribute("yf", curr_month);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", startPage);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 保存工资补发信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward saveGzbfInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HttpSession session = request.getSession();
		QgzxCjffForm model = new QgzxCjffForm();
		QgzxCjffService service = new QgzxCjffService();

		String count = DealString.toGBK(request.getParameter("count"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String nd = request.getParameter("nd");
		String yf = request.getParameter("yf");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");

		model.setCount(count);
		model.setPk(pk);
		model.setPkValue(pkValue);
		model.setNd(nd);
		model.setYf(yf);
		model.setXn(xn);
		model.setXq(xq);
		model.setUserName(session.getAttribute("userName").toString());

		request.setAttribute("result", service.saveGzbfInfo(model, request));// 信息保存
		return reWorkPut(mapping, form, request, response);
	}

	/**
	 * 保存临时工资信息
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 * @author luo
	 */
	public ActionForward saveGzlsInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HttpSession session = request.getSession();
		QgzxCjffForm model = new QgzxCjffForm();
		QgzxCjffService service = new QgzxCjffService();

		String count = DealString.toGBK(request.getParameter("count"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String nd = request.getParameter("nd");
		String yf = request.getParameter("yf");
		String xn = request.getParameter("xn");
		String xq = request.getParameter("xq");
		String addRowNum = request.getParameter("addRowNum");

		model.setCount(count);
		model.setPk(pk);
		model.setPkValue(pkValue);
		model.setNd(nd);
		model.setYf(yf);
		model.setXn(xn);
		model.setXq(xq);
		model.setUserName(session.getAttribute("userName").toString());

		request.setAttribute("result", service.saveGzLsInfo(model, addRowNum,
				request));// 信息保存
		return lsgzff(mapping, form, request, response);
	}

	/**
	 * 工资补发向下翻页
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rePayNext(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// QgzxCjffForm model = (QgzxCjffForm)form;
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");

		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1"
				: String.valueOf(Integer.parseInt(currentPage) + 1);
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0"
				: String.valueOf(Integer.parseInt(currentPage)
						* Integer.parseInt(pageSize) - 1);
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "15"
				: pageSize;

		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		String page = "ygzbf";
		// String writeAble = Base.getWriteAble(request);
		String curr_year = DealString.toGBK(request.getParameter("nd"));
		String curr_month = DealString.toGBK(request.getParameter("yf"));
		String xn = DealString.toGBK(request.getParameter("xn"));
		String xq = DealString.toGBK(request.getParameter("xq"));

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setXn(xn);
		model.setXq(xq);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? ""
				: pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? ""
				: gwxzmc.trim());
		model.setFflx("补发");

		List list = service.getQgzxStuList(model);

		if (gwxzmc.contains("临时")) {// 临时岗工资发放
			request.setAttribute("type", "lsggzff");
			request.setAttribute("title", "勤工助学临时岗报酬补发表");
		} else {// 月工资发放
			request.setAttribute("type", "ygzff");
			request.setAttribute("title", "勤工助学劳务报酬补发表");
		}
		
		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("nd", curr_year);
		request.setAttribute("yf", curr_month);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", Integer.parseInt(startPage) - 14);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 工资补发向下翻页
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rePayUp(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// QgzxCjffForm model = (QgzxCjffForm)form;
		String pkValue = DealString.toGBK(request.getParameter("pkValue"));
		String pk = DealString.toGBK(request.getParameter("pk"));
		String gwxzmc = DealString.toGBK(request.getParameter("gwxzmc"));
		String currentPage = request.getParameter("currentPage");
		String startPage = request.getParameter("startPage");
		String pageSize = request.getParameter("pageSize");

		currentPage = currentPage == null || "".equalsIgnoreCase(currentPage) ? "1"
				: String.valueOf(Integer.parseInt(currentPage) - 1);
		startPage = startPage == null || "".equalsIgnoreCase(startPage) ? "0"
				: String.valueOf((Integer.parseInt(currentPage))
						* Integer.parseInt(pageSize) - 1);
		pageSize = pageSize == null || "".equalsIgnoreCase(pageSize) ? "15"
				: pageSize;

		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		String page = "ygzbf";
		// String writeAble = Base.getWriteAble(request);
		String curr_year = DealString.toGBK(request.getParameter("nd"));
		String curr_month = DealString.toGBK(request.getParameter("yf"));
		String xn = DealString.toGBK(request.getParameter("xn"));
		String xq = DealString.toGBK(request.getParameter("xq"));

		model.setYear(curr_year);
		model.setMonth(curr_month);
		model.setXn(xn);
		model.setXq(xq);
		model.setPkValue(pkValue == null || "".equalsIgnoreCase(pkValue) ? ""
				: pkValue.trim());
		model.setPk(pk == null || "".equalsIgnoreCase(pk) ? "" : pk.trim());
		model.setGwxzmc(gwxzmc == null || "".equalsIgnoreCase(gwxzmc) ? ""
				: gwxzmc.trim());
		model.setFflx("补发");

		List list = service.getQgzxStuList(model);

		if (gwxzmc.contains("临时")) {// 临时岗工资发放
			request.setAttribute("type", "lsggzff");
			request.setAttribute("title", "勤工助学临时岗报酬补发表");
		} else {// 月工资发放
			request.setAttribute("type", "ygzff");
			request.setAttribute("title", "勤工助学劳务报酬补发表");
		}

		String nowtime = service.getNowTime();
		request.setAttribute("nowtime", nowtime);
		request.setAttribute("xn", xn);
		request.setAttribute("xq", xq);
		request.setAttribute("nd", curr_year);
		request.setAttribute("yf", curr_month);
		request.setAttribute("zje", service.getCjzje(model));
		request.setAttribute("currentPage", currentPage);
		request.setAttribute("startPage", Integer.parseInt(startPage) - 14);
		request.setAttribute("pageSize", pageSize);
		request.setAttribute("rs", list);
		request.setAttribute("pTotal", list.size());
		request.setAttribute("year", curr_year);
		request.setAttribute("month", curr_month);
		request.setAttribute("writeAble", "yes");// writeAble
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("pk", pk);
		request.setAttribute("post", service.getGwInfo(pk, pkValue));
		request.setAttribute("gwxzmc", gwxzmc);
		request.setAttribute("zgcjje", service.getQgzxConfig().get("myzgbc"));
		request.setAttribute("zggzsj", service.getQgzxConfig().get("myzgxs"));
		return mapping.findForward(page);
	}

	/**
	 * 删除学生酬金发放信息
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward delCjffInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		QgzxCjffForm model = (QgzxCjffForm) form;
		QgzxCjffService service = new QgzxCjffService();
		String pk = request.getParameter("pk");
		String tableName = request.getParameter("tableName");
		String realTable = request.getParameter("realTable");
		String xydm = model.getXydm();
		String zydm = model.getZydm();
		String nj = model.getNj();
		
		model.setFflx(request.getParameter("fflx"));
		model.setPk(request.getParameter("pkString"));
		boolean flag = service.deleteCjffInfo(model,request);
		
		request.setAttribute("tips", "勤工助学 - 酬金发放 - 酬金发放查询");
		request.setAttribute("flag", flag);
		request.setAttribute("tableName", tableName);
		request.setAttribute("realTable", realTable);
		request.setAttribute("pk", pk);
		setProperty(request, xydm, zydm, nj);
		return mapping.findForward("workPaySearch");
	}

	/**
	 * 加载页面的属性列表信息
	 * 
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 */
	public void setProperty(HttpServletRequest request, String xydm,
			String zydm, String nj) {
		QgzxCjffService service = new QgzxCjffService();
		String xy = "";
		String zy = "";
		String njLocal = nj;
		xy = xy == null ? "" : (xydm == null ? "" : xydm);
		zy = zy == null ? "" : (zydm == null ? "" : zydm);
		njLocal = nj == null ? "" : nj;
		String zyKey = xy == null ? "" : xy;
		String bjKey = xy + "!!" + zy + "!!" + njLocal;

		request.setAttribute("xqList", Base.getXqList());// 学期列表
		request.setAttribute("xnList", Base.getXnndList());// 学年列表
		request.setAttribute("njList", Base.getNjList());// 年级列表
		request.setAttribute("xyList", Base.getXyList());// 学院列表
		request.setAttribute("zyList", Base.getZyMap().get(zyKey));// 专业列表
		request.setAttribute("bjList", Base.getBjMap().get(bjKey));// 班级列表
		request.setAttribute("writeAble", "yes");// 判断用户读写权
		request.setAttribute("yrdwList", service.getYrdwList());// 用人单位
		request.setAttribute("yfList", service.getYfList());// 月份
		request.setAttribute("gwList", service.getGwList());// 岗位
	}
}