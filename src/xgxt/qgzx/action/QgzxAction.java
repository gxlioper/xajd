/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.qgzx.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.form.CommanForm;
import xgxt.qgzx.zgdzdx.QgzxZgdzdxService;
import xgxt.utils.FormModleCommon;

/**
 * MyEclipse Struts Creation date: 06-25-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class QgzxAction extends Action {
	/*
	 * Generated Methods
	 */
	String writeAble = "";

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		String myAction = mapping.getParameter();
		ActionForward myActFwd = null;
		try {
			// 判断用户读写权
			
			//writeAble = Base.getWriteAble(request);
			
			request.setAttribute("path", request.getServletPath().replace("/", ""));
			// 读写权相关

				String[] message = FormModleCommon.getWriteAbleAndTitle(request);
				writeAble = message != null && message.length >= 1 ? message[0]
						: "";

			
			
			String dxq = request.getParameter("writeAble");
			if (!"".equalsIgnoreCase(dxq) && dxq != null) {
				writeAble = dxq;
			}

			if ("stu_work_checkInit".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.stuWorkPageInit(mapping, form,
						request, response);
			} else if ("stu_work_info".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.addStuWorkLog(mapping, form,
						request, response);
			} else if ("stu_khmodi_Apply".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.StuKhModiApply(mapping, form,
						request, response);
			} else if ("stu_khmodi_Check".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.StuKhModiCheck(mapping, form,
						request, response);
			} else if ("stu_khapply_sava".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.StuKhApplySave(mapping, form,
						request, response);
			} else if ("khModiCheckOne".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.sutKhModiOneCheck(mapping,
						form, request, response);
			} else if ("SaveStuKhxgChkOne".equalsIgnoreCase(myAction)) {
				myActFwd = QgzxOperactionAction.sutKhModiOneCheckSave(mapping,
						form, request, response);
			} else if ("qgzx_gwsbb".equalsIgnoreCase(myAction)) { // 岗位申报报表
				myActFwd = QgzxOperactionAction.gwsbReportPrint(mapping, form,
						request, response);
			} else if ("qgzx_gwsqb".equalsIgnoreCase(myAction)) { // 学生岗位申请报表
				myActFwd = QgzxOperactionAction.gwsqReportPrint(mapping, form,
						request, response);
			} else if ("xskhPrint".equalsIgnoreCase(myAction)) {// 学生勤工助学月考核报表打印
				myActFwd = QgzxOperactionAction.xskhPrint(mapping, form,
						request, response);
			} else if ("qgzx_ynys_qgzxApply".equalsIgnoreCase(myAction)) { // 岗位申请表
				myActFwd = QgzxOperactionAction.YnysGwsqReportPrint(mapping,
						form, request, response);
			} else if ("qgzx_work_adjust".equalsIgnoreCase(myAction)) { // 岗位调整
				myActFwd = QgzxOperactionAction.YnysWorkAdjust(mapping, form,
						request, response);
			} else if ("qgzx_work_adjustInfo".equalsIgnoreCase(myAction)) { // 岗位调整信息
				myActFwd = QgzxOperactionAction.YnysWorkAdjustInfo(mapping,
						form, request, response);
			} else if ("qgzx_work_adjustSave".equalsIgnoreCase(myAction)) { // 岗位调整保存
				myActFwd = QgzxOperactionAction.YnysWorkAdjustSave(mapping,
						form, request, response);
			} else if ("qgzx_work_adjustAudi".equalsIgnoreCase(myAction)){//岗位调整审核
				myActFwd = QgzxOperactionAction.workAdjustAudi(mapping,
						form, request, response);
			} else if ("saveAdjustBatchAudi".equalsIgnoreCase(myAction)){//岗位调整批量审核
				myActFwd = QgzxOperactionAction.saveAdjustBatchAudi(mapping,
						form, request, response);
			} else if ("adjustDetails".equalsIgnoreCase(myAction)){//显示岗位调整详细信息
				myActFwd = QgzxOperactionAction.showAdjustDetails(mapping,
						form, request, response);
			}else if ("qgzx_jsxx_gwsq".equalsIgnoreCase(myAction)) { // 勤工助学申请
				myActFwd = QgzxOperactionAction.JsxxReportPrint(mapping, form,
						request, response);
			} else if ("qgzx_jsxx_gwsqSave".equalsIgnoreCase(myAction)) { // 勤工助学申请保存
				myActFwd = QgzxOperactionAction.JsxxGwsqSave(mapping, form,
						request, response);
			} else if ("qgzx_jsxx_gwsqPrint".equalsIgnoreCase(myAction)) { // 勤工助学申请表
				myActFwd = QgzxOperactionAction.JsxxGwsqPrint(mapping, form,
						request, response);
			} else if ("postStuChkBatch".equalsIgnoreCase(myAction)) { // 批量录用学生
				myActFwd = QgzxOperactionAction.BjlhPostStuChkBatch(mapping,
						form, request, response);
			} else if ("jfhzcx".equalsIgnoreCase(myAction)) { // 经费汇总查询
				myActFwd = QgzxOperactionAction.BjlhJfhzSearch(mapping, form,
						request, response);
			} else if ("workConf".equalsIgnoreCase(myAction)) { // 勤工助学参数设置
				myActFwd = QgzxOperactionAction.workConf(mapping, form,
						request, response);
			} else if ("workerApply".equalsIgnoreCase(myAction)) { // 岗位申请
				myActFwd = QgzxOperactionAction.workerApply(mapping, form,
						request, response);
			} else if ("workPaySearch".equalsIgnoreCase(myAction)) { // 酬金发放查询
				myActFwd = QgzxOperactionAction.workPaySearch(mapping, form,
						request, response, writeAble);
			} else if ("workPaySearchT".equalsIgnoreCase(myAction)) { // 酬金发放查询
				myActFwd = QgzxOperactionAction.workPaySearchT(mapping, form,
						request, response);
			} else if ("workPaySave".equalsIgnoreCase(myAction)) { // 酬金发放保存
				myActFwd = QgzxOperactionAction.workPaySave(mapping, form,
						request, response);
			} else if ("workOutlayTransfer".equalsIgnoreCase(myAction)) { // 经费划拨
				String type = "transfer";
				myActFwd = QgzxOperactionAction.workOutlayTransfer(mapping,
						form, request, response, type);
			} else if ("workOutlayAdd".equalsIgnoreCase(myAction)) { // 经费增拨
				String type = "add";
				myActFwd = QgzxOperactionAction.workOutlayTransfer(mapping,
						form, request, response, type);
			} else if ("workOutlayModi".equalsIgnoreCase(myAction)) { // 经费修改
				String type = "modi";
				myActFwd = QgzxOperactionAction.workOutlayTransfer(mapping,
						form, request, response, type);
			} else if ("VIEWREPORT".equalsIgnoreCase(myAction)) { // 酬金发放查看报表
				myActFwd = QgzxOperactionAction.viewReport(mapping, form,
						request, response);				
			} else if ("stuQgzxInfo".equalsIgnoreCase(myAction)){
				myActFwd = stuQgzxInfo(mapping, form, request, response);	
			}else if ("auditingControl".equalsIgnoreCase(myAction)){
				myActFwd = QgzxOperactionAction.auditingControl(mapping, form, request, response);	
			}
			//此处判断权限似有问题
			if(!"auditingControl".equalsIgnoreCase(myAction)){
				request.setAttribute("writeAble", writeAble);
			}
			return myActFwd;
		} catch (Exception e) {
			e.printStackTrace();
			return new ActionForward("/login.jsp", false);
		}
	}
	
	/**
	 * 申请了勤工助学的学生信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward stuQgzxInfo(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		HttpSession session = request.getSession();
		String userType = (String)session.getAttribute("userType");
		String userDep = (String)session.getAttribute("userDep");
		
		String go = request.getParameter("go");
		CommanForm model = (CommanForm)form;
		
		if("xy".equalsIgnoreCase(userType)){
			model.setXydm(userDep);
		}
		
		QgzxZgdzdxService service = new QgzxZgdzdxService(); 
		
		if("go".equalsIgnoreCase(go)){
			request.setAttribute("topTr", new String[]{"学号","年度","学年","学期名称","姓名",Base.YXPZXY_KEY+"名称","专业名称","班级名称"});
			request.setAttribute("rs", service.queryQgzxStu(model));
		}
		
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		
		request.setAttribute("qgzxInfo", service.getQgzxInfo());
		return mapping.findForward("stu_qgzx_info");
	}
}