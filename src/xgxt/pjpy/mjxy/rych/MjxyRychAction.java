/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.mjxy.rych;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.pjpy.mjxy.PjpyMjxyService;
import xgxt.pjpy.mjxy.jxj.MjxyJxjService;
import xgxt.pjpy.zjcm.rych.RychService;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;

/** 
 * MyEclipse Struts
 * Creation date: 08-18-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class MjxyRychAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rychSq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService mjxyJxjservice=new MjxyJxjService();
		RcswKqglXskqService rkxService=new RcswKqglXskqService();
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		MjxyRychService mjxyRychService=new MjxyRychService();
		RychService rychService = new RychService();
		
		String xn=Base.currXn;
		String tabName="xsrychb";
		String doType=request.getParameter("doType");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		String brjl=Base.isNull(request.getParameter("brjl"))? "" : request.getParameter("brjl");
		String drzw=Base.isNull(request.getParameter("drzw"))? "" : request.getParameter("drzw");
		String zhpfmc=Base.isNull(request.getParameter("zhpfmc"))? "" : request.getParameter("zhpfmc");
		StringBuilder pkValue=new StringBuilder();
		pkValue.append(request.getParameter("save_xh"));
		pkValue.append(request.getParameter("save_xn"));
		pkValue.append(request.getParameter("save_rychdm"));
		pkValue.append(request.getParameter("save_xq"));
		if("save".equalsIgnoreCase(doType)){
			this.insertOperation(request, tabName);
			mjxyRychService.insertRychxx(xh,brjl,drzw,zhpfmc);
			
		}
		
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		
		HashMap<String,String>allMap=new HashMap<String,String>();
		this.selectPageDataByOne(request, tabName, tabName, pkValue.toString());
		HashMap<String,String>hashMap=(HashMap<String,String>)request.getAttribute("rs");
		allMap.putAll(xsxxglService.selectStuinfo(xh));
		
		this.selectPageDataByOne(request, "xsrychxxb", "xsrychxxb", xh);
		HashMap<String,String>xsrychxx=(HashMap<String,String>)request.getAttribute("rs");
		allMap.putAll(xsrychxx);
		allMap.putAll(hashMap);
		
		rkxService.writeAbled(request, "prise_apply.do");
		//当前学年的补考科目数
		request.setAttribute("bkms",mjxyJxjservice.getBkkms(xn, xh));
		
		request.setAttribute("xh", xh);
		
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		request.setAttribute("zkms",mjxyJxjservice.getZkms(xn, xh) );
		request.setAttribute("zyrs", mjxyJxjservice.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("rychList", rychService.serv_getRychList());
		request.setAttribute("rs",allMap);
		request.setAttribute("path", "credit_apply.do");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("pjpyRychSq");
	}
	

	public ActionForward resultRych(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		MjxyRychForm rychForm=(MjxyRychForm)form;
		RychService rychService = new RychService();
		MjxyRychService service=new MjxyRychService();
		HttpSession session=request.getSession();
		String userType=session.getAttribute("userType").toString();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String userDep=session.getAttribute("userDep").toString();
		String doType=request.getParameter("doType");
		
		if("del".equalsIgnoreCase(doType)){
			this.deleteOperation(request, "xsrychb");
			doType="qry";
		}
		if("qry".equalsIgnoreCase(doType)){
			service.setDisabledCx(request, userType);
			String[]outputColumn={"pkValue","disabled","xn","xqmc","xh","xm","bjmc","rychmc","xysh","xxsh"};
			this.selectPageDataByPagination(request, rychForm, "xsrychb", "view_xsrychb", outputColumn);
		}
		
		if("student".equalsIgnoreCase(userOnLine)){
			rychForm.setXh(userName);
		}
		
		if("xy".equalsIgnoreCase(userType)){
			rychForm.setXydm(userDep);
		}
		
		
		request.setAttribute("rychList", rychService.serv_getRychList());
		
		request.setAttribute("path", "credit_result.do");
		FormModleCommon.commonRequestSet(request);
		
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("resultRych");
	}
	
	public ActionForward rychXx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService service=new MjxyJxjService();
		RcswKqglXskqService rkxService=new RcswKqglXskqService();
		RychService rychService=new RychService();
		MjxyRychService mjxyRychService=new MjxyRychService();
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		
		String xn=Base.currXn;
		String tabName="xsrychb";
		String doType=request.getParameter("doType");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		String pkValue=request.getParameter("pkValue");
		String brjl=Base.isNull(request.getParameter("brjl"))? "" : request.getParameter("brjl");
		String drzw=Base.isNull(request.getParameter("drzw"))? "" : request.getParameter("drzw");
		String zhpfmc=Base.isNull(request.getParameter("zhpfmc"))? "" : request.getParameter("zhpfmc");
		
		HashMap<String,String>hashMap=new HashMap<String,String>();
		HashMap<String,String>allMap=new HashMap<String,String>();
		if("save".equalsIgnoreCase(doType)){
			this.updateOperation(request, tabName);
			mjxyRychService.insertRychxx(xh,brjl,drzw,zhpfmc);
			
		}
		
		this.selectPageDataByOne(request, tabName, "view_xsrychb", pkValue);
		hashMap=(HashMap<String,String>)request.getAttribute("rs");
		xh=hashMap.get("xh");
		allMap.putAll(xsxxglService.selectStuinfo(xh));
		
		this.selectPageDataByOne(request, "xsrychxxb", "xsrychxxb", xh);
		HashMap<String,String>xsrychxx=(HashMap<String,String>)request.getAttribute("rs");
		allMap.putAll(xsrychxx);
		allMap.putAll(hashMap);
		
		
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		
		request.setAttribute("rs",allMap );
		
		rkxService.writeAbled(request, "credit_result.do");
		//当前学年的补考科目数
		request.setAttribute("bkms",service.getBkkms(xn, xh));
		
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		request.setAttribute("xh", xh);
		request.setAttribute("doType",doType );
		request.setAttribute("zkms",service.getZkms(xn, xh) );
		//专业人数
		request.setAttribute("zyrs", service.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("rychList",rychService.serv_getRychList());
		request.setAttribute("path", "credit_apply.do");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("pjpyRychSq");
	}
	
	/**
	 * 闽江学院荣誉称号审核
	 * method shRych
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward shRych(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		MjxyRychService service=new MjxyRychService();
		MjxyRychForm jtrychForm=(MjxyRychForm)form;
		RychService rychService = new RychService();
		
		String userDep= session.getAttribute("userDep").toString();
		String userType = session.getAttribute("userType").toString();
		String doType=request.getParameter("doType");
		String tabName="xsrychb";
		String viewName="view_xsrychb";
		String shjg=request.getParameter("shjg");
		if("save".equalsIgnoreCase(doType)){			
			//审核操作
			HashMap<String, String> valueMap =  service.setShzd(userType, shjg);
			
			
			//批量审核的primaryKey
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			//通用批量审核
			this.auditingBatchOperation(request, primaryMap,valueMap, tabName);
			doType="qry";
		}
		
		
		if("qry".equalsIgnoreCase(doType)){
			service.setDisabled(request, userType);
			String[]outputColumn={"pkValue","disabled","xn","xqmc","xh","xm","bjmc","rychmc","xysh","xxsh"};
			this.selectPageDataByPagination(request, form,tabName, viewName, outputColumn);
		}
		
		if("xy".equalsIgnoreCase(userType)){
			jtrychForm.setXydm(userDep);
		}
		
		request.setAttribute("rychList", rychService.serv_getRychList());
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("path", "credit_check.do");
		FormModleCommon.commonRequestSet(request);
		
		return mapping.findForward("shRych");
	}
	
	

	/**
	 * 荣誉称号单个审核
	 * method jxjShone
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	
	public ActionForward rychShone(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService service=new MjxyJxjService();
		RychService rychService=new RychService();
		MjxyRychService mjxyRychService=new MjxyRychService();
		MjxyRychForm rychForm=(MjxyRychForm)form;
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		
		String xn=Base.currXn;
		String tabName="xsrychb";
		String userType=session.getAttribute("userType").toString();
		String doType=request.getParameter("doType");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		String pkValue=request.getParameter("pkValue");
		
		HashMap<String,String>hashMap=new HashMap<String,String>();
		HashMap<String,String>allMap=new HashMap<String,String>();
		if("modi".equalsIgnoreCase(doType)){
			this.updateOperation(request, tabName);
		
		}
		
		this.selectPageDataByOne(request, tabName, "view_xsrychb", pkValue);
		hashMap=(HashMap<String,String>)request.getAttribute("rs");
		xh=hashMap.get("xh");
		allMap.putAll(xsxxglService.selectStuinfo(xh));
		
		this.selectPageDataByOne(request, "xsrychxxb", "xsrychxxb", xh);
		HashMap<String,String>xsrychxx=(HashMap<String,String>)request.getAttribute("rs");
		allMap.putAll(xsrychxx);
		allMap.putAll(hashMap);
		
		
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		
		mjxyRychService.writeRead(rychForm,request, allMap, userType);
		request.setAttribute("rs",allMap );
		
		
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		//当前学年的补考科目数
		request.setAttribute("bkms",service.getBkkms(xn, xh));
		//专业人数
		request.setAttribute("xh", xh);
		request.setAttribute("zkms",service.getZkms(xn, xh) );
		request.setAttribute("doType",doType );
		request.setAttribute("zyrs", service.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("rychList",rychService.serv_getRychList());
		request.setAttribute("path", "credit_check.do");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("rychShone");
	}
	
	/**
	 * 荣誉称号信息导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try {
			
			this.expPageData(request, response, "xsrychb", "view_xsrychb", null);
		
		} catch (Exception e) {
		
			e.printStackTrace();
		
		}			
		
		return mapping.findForward("success");
	}
}