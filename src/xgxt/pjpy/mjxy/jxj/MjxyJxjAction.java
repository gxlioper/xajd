/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.mjxy.jxj;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.pjpy.mjxy.PjpyMjxyService;
import xgxt.pjpy.mjxy.jtrych.MjxyJtrychForm;
import xgxt.pjpy.mjxy.jtrych.MjxyJtrychService;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;

/** 
 * MyEclipse Struts
 * Creation date: 08-18-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class MjxyJxjAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward jxjSq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService service=new MjxyJxjService();
		RcswKqglXskqService rkxService=new RcswKqglXskqService();
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		
		String xn=Base.currXn;
		String tabName="xsjxjb";
		String doType=request.getParameter("doType");
		
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		StringBuilder sb=new StringBuilder();
		sb.append(request.getParameter("save_xh"));
		sb.append(request.getParameter("save_jxjdm"));
		sb.append(request.getParameter("save_xn"));
		sb.append(request.getParameter("save_xq"));
		String pkValue=sb.toString();
		if("save".equalsIgnoreCase(doType)){
			this.insertOperation(request, tabName);
			
		}
		
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		
		HashMap<String,String> allMap=new HashMap<String,String>();
		allMap.putAll( xsxxglService.selectStuinfo(xh));
		this.selectPageDataByOne(request, tabName,tabName, pkValue);
		HashMap<String,String>rs=(HashMap<String,String>)request.getAttribute("rs");
		allMap.putAll(rs);
		rkxService.writeAbled(request, "prise_apply.do");
		//当前学年的补考科目数
		request.setAttribute("bkms",service.getBkkms(xn, xh));
		request.setAttribute("xh", xh);
		request.setAttribute("doType",doType );
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		request.setAttribute("zkms",service.getZkms(xn, xh) );
		//专业人数
		request.setAttribute("zyrs", service.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("jxjList", service.jxjList());
		request.setAttribute("rs",allMap);
		request.setAttribute("path", "prise_apply.do");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("pjpyJxjSq");
	}
	
	public ActionForward resultJxj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		MjxyJxjService service=new MjxyJxjService();
		MjxyJxjForm jxjForm=(MjxyJxjForm)form;
		HttpSession session=request.getSession();
		
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String tabName="xsjxjb";
		String doType=request.getParameter("doType");
		if("del".equalsIgnoreCase(doType)){
			this.deleteOperation(request, tabName);
			doType="qry";
		}
		if("qry".equalsIgnoreCase(doType)){
			service.setDisabledCx(request, userType);
			String[]outputColumn={"pkValue","disabled","xn","xqmc","xh","xm","bjmc","jxjmc","xysh","xxsh"};
			this.selectPageDataByPagination(request, jxjForm, "xsjxjb", "view_xsjxjb", outputColumn);
		}
		
		if("student".equalsIgnoreCase(userOnLine)){
			jxjForm.setXh(userName);
		}
		
		if("xy".equalsIgnoreCase(userType)){
			jxjForm.setXydm(userDep);
		}
		
		request.setAttribute("path", "prise_result.do");
		request.setAttribute("jxjList", service.jxjList());
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		FormModleCommon.setNdXnXqList(request);
		
		return mapping.findForward("resultJxj");
	}
	
	public ActionForward shJxj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		MjxyJxjService service=new MjxyJxjService();
		MjxyJxjForm jtrychForm=(MjxyJxjForm)form;
		
		String userDep= session.getAttribute("userDep").toString();
		String userType = session.getAttribute("userType").toString();
		String doType=request.getParameter("doType");
		String tabName="xsjxjb";
		String viewName="view_xsjxjb";
		String shjg=request.getParameter("shjg");
		if("save".equalsIgnoreCase(doType)){			
			//审核操作
			HashMap<String, String> valueMap =  service.setShzd(userType, shjg);
			
			
			//批量审核的primaryKey
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			//通用批量审核
			this.auditingBatchOperation(request, primaryMap,valueMap, tabName);
			doType="qry";
		}
		
		
		if("qry".equalsIgnoreCase(doType)){
			service.setDisabled(request, userType);
			String[]outputColumn={"pkValue","disabled","xn","xqmc","xh","xm","bjmc","jxjmc","xysh","xxsh"};
			this.selectPageDataByPagination(request, form,tabName, viewName, outputColumn);
		}
		
		if("xy".equalsIgnoreCase(userType)){
			jtrychForm.setXydm(userDep);
		}
		
		request.setAttribute("jxjList", service.jxjList());
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("path", "prise_check.do");
		FormModleCommon.commonRequestSet(request);
		
		return mapping.findForward("shJxj");
	}
	
	/**
	 * method jxjXx
	 * 奖学金单个信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward jxjXx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService service=new MjxyJxjService();
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		
		String xn=Base.currXn;
		String tabName="xsjxjb";
		String doType=request.getParameter("doType");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		String pkValue=request.getParameter("pkValue");
		HashMap<String,String>hashMap=new HashMap<String,String>();
		HashMap<String,String>allMap=new HashMap<String,String>();
		if("save".equalsIgnoreCase(doType)){
			this.updateOperation(request, tabName);
		}
		this.selectPageDataByOne(request, tabName, "view_xsjxjb", pkValue);
		hashMap=(HashMap<String,String>)request.getAttribute("rs");
		xh=hashMap.get("xh");
		allMap.putAll(xsxxglService.selectStuinfo(xh));
		allMap.putAll(hashMap);
		
		
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		request.setAttribute("rs",allMap );
		request.setAttribute("zkms",service.getZkms(xn, xh) );
		request.setAttribute("path", "prise_result.do");
		//当前学年的补考科目数
		request.setAttribute("bkms",service.getBkkms(xn, xh));
		//专业人数
		request.setAttribute("xh", xh);
		request.setAttribute("doType",doType );
		request.setAttribute("zyrs", service.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("jxjList", service.jxjList());
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("pjpyJxjSq");
	}
	
	/**
	 * 奖学金单个审核
	 * method jxjShone
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	
	public ActionForward jxjShone(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		XsxxglService xsxxglService=new XsxxglService();
		MjxyJxjService service=new MjxyJxjService();
		MjxyJxjForm jxjForm=(MjxyJxjForm)form;
		PjpyMjxyService pjpyService=new PjpyMjxyService();
		
		String xn=Base.currXn;
		String tabName="xsjxjb";
		String doType=request.getParameter("doType");
		String userType=session.getAttribute("userType").toString();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String xh=Base.isNull(request.getParameter("xh"))? "" :request.getParameter("xh");
		String pkValue=request.getParameter("pkValue");
		
		HashMap<String,String>hashMap=new HashMap<String,String>();
		HashMap<String,String>allMap=new HashMap<String,String>();
		if("modi".equalsIgnoreCase(doType)){
			this.updateOperation(request, tabName);
		}
		
		this.selectPageDataByOne(request, tabName, "view_xsjxjb", pkValue);
		hashMap=(HashMap<String,String>)request.getAttribute("rs");
		xh=hashMap.get("xh");
		allMap.putAll(xsxxglService.selectStuinfo(xh));
		allMap.putAll(hashMap);
		
		service.writeRead(jxjForm,request, allMap, userType);
		if("student".equalsIgnoreCase(userOnLine)){
			xh=userName;
		}
		
		request.setAttribute("zcfpm", pjpyService.getZcCjPm(xh, xn));
		request.setAttribute("rs",allMap );
		
		//当前学年的补考科目数
		request.setAttribute("bkms",service.getBkkms(xn, xh));
		//专业人数
		request.setAttribute("xh", xh);
		request.setAttribute("zkms",service.getZkms(xn, xh) );
		request.setAttribute("doType",doType );
		request.setAttribute("zyrs", service.getZyrs(xh));
		request.setAttribute("sqsj", GetTime.getNowTime2());
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xn",xn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("jxjList", service.jxjList());
		request.setAttribute("path", "prise_check.do");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("jxjShone");
	}
	
	
	/**
	 * 荣誉称号信息导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try {
			
			this.expPageData(request, response, "xsjxjb", "view_xsjxjb", null);
		
		} catch (Exception e) {
		
			e.printStackTrace();
		
		}			
		
		return mapping.findForward("success");
	}
}