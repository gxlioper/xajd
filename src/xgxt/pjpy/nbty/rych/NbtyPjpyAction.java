/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.nbty.rych;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.base.DealString;
import xgxt.base.Excel2Oracle;
import xgxt.daoActionLogic.StandardOperation;
import xgxt.form.CommanForm;
import xgxt.pjpy.czxx.jxj.JxjModel;
import xgxt.pjpy.nbty.NbtyPjpyForm;
import xgxt.pjpy.zjcm.PjpyZjcmActionForm;
import xgxt.pjpy.zjcm.PjpyZjcmUnit;
import xgxt.pjpy.zjcm.rych.RychModel;
import xgxt.pjpy.zjcm.rych.RychService;
import xgxt.qtsj.InsureForm;
import xgxt.qtsj.InsureService;
import xgxt.qtsj.shgc.service.TbxxwhService;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.utils.SearchUtils;
import xgxt.utils.String.StringUtils;
import xgxt.wjcf.wjcfutils.CommonAction;

import com.zfsoft.basic.BasicAction;
import common.Globals;

/** 
 * MyEclipse Struts
 * Creation date: 06-18-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NbtyPjpyAction extends BasicAction{
	/*
	 * Generated Methods
	 */
	protected static final String QUERY = "qry";//页面查询操作判断标志
	
	protected static final String DELETE = "del";//页面删除操作判断标志
	
	protected static final String VIEW = "view";//页面单个显示详细操作判断标志
	
	protected static final String MODIFY = "modi";//页面修改操作判断标志

	protected static final String SAVE = "save";//页面保存操作判断标志
	
	protected static final String TABNAME = "nbty_xsrychb";//表名
	
	protected static final String VIEWNAME = "view_nbty_xsrychb";//视图表名
	
	/** 
	 * 荣誉称号申请(学生)
	 * Method rychSq
	 * author qiu
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rychSq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception {
		HttpSession session=request.getSession();
		NbtyPjpyService nbtyPjpyService=new NbtyPjpyService();
		XsxxglService xsxxglService=new XsxxglService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		
		String userName = session.getAttribute("userName").toString();												//获取登陆名
		String userOnLine =session.getAttribute("userOnLine").toString();											//获取登陆权限
		String doType=request.getParameter("doType");															//doType要做的操作
		String pkValue=request.getParameter("save_xh")+	 Base.currXn+request.getParameter("save_rychdm");						//将XH，RYCHDM拼成pkValue
		String xh=request.getParameter("xh");
		HashMap<String, String> map = new HashMap<String, String>();
		
		if("student".equalsIgnoreCase(userOnLine)){
			   xh=userName;														//如果登陆的是学生将xh设置成
		}
		
		if(SAVE.equalsIgnoreCase(doType)){
									//插入后，再查询一遍
			this.insertOperation(request, TABNAME);								//保存荣誉称号信息		
			request.setAttribute("pkValue", pkValue);					//用于打印的pkValue
		}
		
		request.setAttribute("nowTime", GetTime.getNowTime2());
		service.writeAbled(request, "credit_apply.do");
		map=xsxxglService.selectStuinfo(xh);					//获取学生表信息存入Map
		request.setAttribute("rs", map);
		request.setAttribute("xn", Base.currXn);								//获取当前学年，放入request中
		request.setAttribute("nd", Base.currNd);								//获取当前年度
		request.setAttribute("xq", Base.currXq);								//获取当前学期，放入request中
		request.setAttribute("rychList",nbtyPjpyService.serv_getRychList());	//荣誉称号列表
		return mapping.findForward("rychSq");
	}
	/**
	 * Method rychSh
	 * 荣誉称号审核
	 * 根据辅导员
	 * 学院
	 * 学校
	 * 三级审核
	 */
	public ActionForward rychSh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {	
		HttpSession session=request.getSession();
		NbtyPjpyForm nbtyPjpyForm=(NbtyPjpyForm)form;
		NbtyPjpyService nbtyPjpyService=new NbtyPjpyService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		
		String userDep =session.getAttribute("userDep").toString();
		String doType=request.getParameter("doType");
		String shjg=request.getParameter("shjg");								//审核结果
		String shsj="";															//审核时间
		String shzd="";															//审核字段
		String userType=session.getAttribute("userType").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		HashMap<String,String>valueMap=new HashMap<String,String>();
		
		if(SAVE.equalsIgnoreCase(doType)){									//判断操作是否为审核
			
			if("true".equals(isFdy)){												//如果当前用户登陆权限为辅导员，并且操作为审核
				shzd="fdysh";
				shsj="fdyshsj";
			}else if("xy".equalsIgnoreCase(userType) ){							//如果当前用户登陆权限为学院，并且操作为审核
				shzd="xysh";
				shsj="xyshsj";
			}else if("xx".equalsIgnoreCase(userType)	
				||	"admin".equalsIgnoreCase(userType)){						//如果当前用户登陆权限为学校，并且操作为审核
				shzd="xxsh";
				shsj="xxshsj";
			}
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			valueMap.put(shzd,shjg );
			valueMap.put(shsj, GetTime.getNowTime2());
			this.auditingBatchOperation(request, primaryMap, valueMap, TABNAME);
			doType="go";
		}
		
		if("go".equalsIgnoreCase(doType)){			//查询
			if("true".equalsIgnoreCase(isFdy)){			//辅导员
				request.setAttribute("clientColumns", "(case xysh when '通过' then 'disabled' else '' end)disabled,");
			}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
				request.setAttribute("annexTerm", " and fdysh='通过' ");
				request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
			}else if("xx".equalsIgnoreCase(userType) 
					|| "admin".equalsIgnoreCase(userType)){
				request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
				request.setAttribute("annexTerm", " and xysh='通过' ");
			
			}
			String	[]outputColumn = new String[] { "pkValue","disabled", "xh", "xm", "xb", "xn","xqmc","nd", "bjmc",
						"rychmc", "fdysh","xysh", "xxsh"  };
			selectPageDataByPagination(request, nbtyPjpyForm, TABNAME, VIEWNAME, outputColumn);
			request.setAttribute("writeAble", "yes");
		}	
		
		service.writeAbled(request,"credit_result.do");
		nbtyPjpyForm.setQueryequals_xydm(userDep);	//获取当前登陆为学院用户时的，学院名称
		request.setAttribute("xydm", userDep);
		request.setAttribute("rychList",nbtyPjpyService.serv_getRychList());	//获取荣誉称号列表
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);						
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("rychSh");
	}
	
	
	
	/**
	 * 荣誉称号等记表
	 * 打印荣誉称号报表
	 * Method rychDjb  
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward rychDjb(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {	
		String pkValue = request.getParameter("pkValue");
		this.selectPageDataByOne(request,TABNAME, VIEWNAME,  pkValue);
		return mapping.findForward("rychDj");
	}


	
	
	/**
	 * 返回荣誉称号申请结果
	 * Method rychResult
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward rychResult(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		NbtyPjpyService nbtyPjpyService=new NbtyPjpyService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		HttpSession session=request.getSession();
		NbtyPjpyForm nbtyPjpyForm= (NbtyPjpyForm)form;
		
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userType=session.getAttribute("userType").toString();
		String doType = request.getParameter("doType");
		String go = request.getParameter("go");
		String userDep=session.getAttribute("userDep").toString();
		String userName=session.getAttribute("userName").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		
		if("student".equalsIgnoreCase(userOnLine)){				//如果是学生用户登陆，限制他的班级和专业												//如果登陆的是学生将xh设置成
			
			HashMap<String,String>map=nbtyPjpyService.getStuInfo(userName);
			
			request.setAttribute("annexTerm", "and xh='"+userName+"'");
			request.setAttribute("clientColumns", "(case fdysh when '通过' then 'disabled' else '' end)disabled,");
			
			String	[]outputColumn = new String[] { "pkValue","disabled", "xh", "xm", "xb", "xn","xqmc","nd", "bjmc",
					"rychmc", "fdysh","xysh", "xxsh"  };
			selectPageDataByPagination(request, nbtyPjpyForm,TABNAME, VIEWNAME, outputColumn);
			
			request.setAttribute("stuInfo", map);
			return mapping.findForward("stuInfo");
		}
		
		if(DELETE.equalsIgnoreCase(doType)){				//删除数据
			this.deleteOperation(request, "nbty_xsrychb");
			go = "go";//查询参数
		}
		
		if("go".equals(go)){//查询
			
			if("true".equalsIgnoreCase(isFdy)){	
				request.setAttribute("clientColumns", "(case xysh when '通过' then 'disabled' else '' end)disabled,");
			}else if("xy".equalsIgnoreCase(userType)){	
				request.setAttribute("clientColumns", "(case xxsh when '通过' then 'disabled' else '' end)disabled,");
			}else if("xx".equalsIgnoreCase(userType)
					|| "admin".equalsIgnoreCase(userType)){
				request.setAttribute("clientColumns", "(case xxsh when '通过' then '' else '' end)disabled,");
			}
			
			String	[]outputColumn = new String[] { "pkValue","disabled", "xh", "xm", "xb", "xn","xqmc","nd", "bjmc",
					"rychmc", "fdysh","xysh", "xxsh"  };
			selectPageDataByPagination(request, nbtyPjpyForm,TABNAME, VIEWNAME, outputColumn);
		}	
		
		service.writeAbled(request, "credit_check.do");
		nbtyPjpyForm.setQueryequals_xydm(userDep);
		appendProperties(request);//加载下拉列表数据
		request.setAttribute("writeAble", "yes");
		request.setAttribute("rychList", nbtyPjpyService.serv_getRychList());
		request.setAttribute("xydm", userDep);
		return mapping.findForward("rychResult");
	}
	
	/**
	 * 公用方法:在REQUEST中存放页面所要加载的属性
	 * @param request
	 * @param xydm
	 * @param zydm
	 * @param nj
	 * @return void
	 * @throws Exception
	 */
	public void appendProperties(HttpServletRequest request){		
		
		String userType = request.getSession().getAttribute("userType").toString();
		request.setAttribute("xqList", Base.getXqList());//学期列表
		request.setAttribute("xnList", Base.getXnndList());//学年列表		
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("userType", userType);//用户类型		
	}
	

	/**
	 * 返回单条记录信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward oneRych(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
	throws Exception {
		NbtyPjpyService nbtyPjpyService=new NbtyPjpyService();
		NbtyPjpyForm  nbtyPjpyForm=(NbtyPjpyForm)form;
		HttpSession session=request.getSession();
		String isFdy=session.getAttribute("isFdy").toString();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String userType=session.getAttribute("userType").toString();
		if(StringUtils.isNotNull(doType)){
			this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		}
		
		if(SAVE.equalsIgnoreCase(doType)){
			Map rs=(HashMap)request.getAttribute("rs");
			if("student".equalsIgnoreCase(userOnLine)){
				if(rs.get("fdysh").toString().equals("通过")){
					doType="view";
				}
			}
			if("true".equalsIgnoreCase(isFdy)){			//辅导员
				if(rs.get("xysh").toString().equals("通过")){		//如果登陆的是辅导员，并且学院审核是通过
					doType="view";
				}
			}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
				if(rs.get("xxsh").toString().equals("通过")){		//如果登陆的是辅导员，并且学院审核是通过
					doType="view";
				}
			}
			nbtyPjpyForm.setSave_rychdm(rs.get("rychdm").toString());
		}
		
		if(MODIFY.equalsIgnoreCase(doType)){				//执行的修改操作
			this.updateOperation(request, TABNAME);
		}
		
		
		
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("rychList",nbtyPjpyService.serv_getRychList());//荣誉称号列表
		request.setAttribute("doType", doType);
		appendProperties(request);//加载下拉列表数据
		
		return mapping.findForward("showOne");
	}
	
	
	/**
	 * 修改荣誉称号审核信息
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward shOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		
		HttpSession session=request.getSession();
		NbtyPjpyForm nbtyPjpyForm=(NbtyPjpyForm)form;
		
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String title="评奖评优 - 审核 - 荣誉称号审核";
		String userType=session.getAttribute("userType").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String shsj=GetTime.getNowTime2();//审核时间
		String disabled="";
		this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		Map rs=(HashMap)request.getAttribute("rs");
		if("true".equalsIgnoreCase(isFdy)){			//辅导员
			if(rs.get("xysh").toString().equals("通过"))		//如果登陆的是辅导员，并且学院审核是通过
			{
				disabled="disabled";
			}
		}else if("xy".equalsIgnoreCase(userType)){			//学院登陆)
			if(rs.get("xxsh").toString().equals("通过"))		//如果登陆的是辅导员，并且学院审核是通过
			{
				disabled="disabled";
			}
		}
		
		if(MODIFY.equalsIgnoreCase(doType)){	
		  
			this.updateOperation(request, TABNAME);
		
		}

		if("true".equals(isFdy)){								//加载单个审核时的审核结果
		
			nbtyPjpyForm.setSave_fdysh(((Map)request.getAttribute("rs")).get("fdysh").toString());	
	
		}else if("xy".equalsIgnoreCase(userType)){
		
			nbtyPjpyForm.setSave_xysh(((Map)request.getAttribute("rs")).get("xysh").toString());	
		
		}else if("".equalsIgnoreCase(userType) 
				|| "admin".equalsIgnoreCase(userType)){
			
			nbtyPjpyForm.setSave_xxsh(((Map)request.getAttribute("rs")).get("xxsh").toString());	
		
		}
		
		appendProperties(request);			//加载下拉列表数据
		request.setAttribute("title", title);
		request.setAttribute("disabled", disabled);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		request.setAttribute("nowTime", shsj);
		
		return mapping.findForward("shOne");
	}
	
	
	
	/**
	 * 荣誉称号信息导出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		try {
			
			this.expPageData(request, response, TABNAME, VIEWNAME, null);
		
		} catch (Exception e) {
		
			e.printStackTrace();
		
		}			
		
		return mapping.findForward("success");
	}
	
	
}