/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.nbty.wmqs;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.pjpy.nbty.NbtyPjpyForm;
import xgxt.pjpy.nbty.rych.NbtyPjpyService;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.utils.String.StringUtils;
import xgxt.xsgygl.dao.gyglDao;

import com.zfsoft.basic.BasicAction;

/** 
 * MyEclipse Struts
 * Creation date: 07-06-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NbtyWmqsAction extends BasicAction {
	/*
	 * Generated Methods
	 */
	protected static final String QUERY = "qry";//页面查询操作判断标志
	
	protected static final String DELETE = "del";//页面删除操作判断标志
	
	protected static final String VIEW = "view";//页面单个显示详细操作判断标志
	
	protected static final String MODIFY = "modi";//页面修改操作判断标志

	protected static final String SAVE = "save";//页面保存操作判断标志
	
	protected static final String TABNAME = "NBTY_WMQSDJB";//页面保存操作判断标志
	
	protected static final String VIEWNAME = "view_nbty_wmqsdjb";//页面保存操作判断标志
	
	/** 
	 * 文明寝室申请
	 * Method sqWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward sqWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		NbtyWqmsService nbtyWqmsService=new NbtyWqmsService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		//申请时间
		String sqsj=GetTime.getNowTime2();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userName=session.getAttribute("userName").toString();
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String isBzr=session.getAttribute("isBzr").toString();
		String xh=request.getParameter("xh");
		String doType=request.getParameter("doType");
		String haveQs=request.getParameter("haveQs");

		//拼接pkValue
		String pkValue=request.getParameter("save_xn")+request.getParameter("save_lddm")+request.getParameter("save_qsh");
		
		//学生用户，登陆直接给出他的寝室
		if("student".equalsIgnoreCase(userOnLine)){						
				xh=userName;
				//没有分配寝室的学生
				if(!nbtyWqmsService.setZsInfo(request,xh)){
					haveQs="no";
				}else{
					haveQs="yes";
				}
		}
		//已分配寝室
		if(SAVE.equalsIgnoreCase(doType)){
			String lddm=request.getParameter("save_lddm");
			String qsh=request.getParameter("save_qsh");
			if(!nbtyWqmsService.getZsInfo(lddm,qsh)){
				haveQs="no";
			}else{
				//判断是否是登陆用户所管辖的班级
				if(!"student".equals(userOnLine)){
					if(nbtyWqmsService.getQsByJs(request, userName, userType, userDep, isFdy, isBzr)){
						this.insertOperation(request, TABNAME);
						this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
						haveQs="yes";
					}else{
						request.setAttribute("notU", "yes");
					}
				}else{
					this.insertOperation(request, TABNAME);
				}
			}
		}
		
		service.writeAbled(request, "nbtyWmqs.do?method=sqWmqs");
		nbtyWqmsService.setLdlbInfo(request);
		request.setAttribute("haveQs", haveQs);
		request.setAttribute("xn", Base.currXn);
		request.setAttribute("sqsj",sqsj);
		request.setAttribute("pkValue", pkValue);
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("sqWmqs");
	}
	
	/** 
	 * 文明寝室审核
	 * Method shWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward shWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		NbtyWmqsForm nbtyWmqsForm=(NbtyWmqsForm)form;
		NbtyWqmsService nbtyWqmsService=new NbtyWqmsService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		HttpSession session=request.getSession();
		
		String userType =session.getAttribute("userType").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String isBzr=session.getAttribute("isBzr").toString();
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		String shjg=request.getParameter("shjg");
		String userName =session.getAttribute("userName").toString();
		
		if(MODIFY.equalsIgnoreCase(doType)){			
			//审核操作
			HashMap<String, String> valueMap = new HashMap<String,String>();
			
			//修改字段
			valueMap=(HashMap)nbtyWqmsService.getValueMap(isBzr, isFdy, userType, shjg);
			//批量审核的primaryKey
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			//通用批量审核
			this.auditingBatchOperation(request, primaryMap, valueMap, TABNAME);
			doType="qry";
		}
		
		//查询操作
		if(QUERY.equalsIgnoreCase(doType)){	
			//复选框的选择 权限，查询条件的设置
			nbtyWqmsService.disabled(request, userType, isFdy, isBzr);
			//通用条件查询
			nbtyWqmsService.getStuByTch(request, nbtyWmqsForm, userName);
			
		}
		
		if("xy".equalsIgnoreCase(userType)){
			nbtyWmqsForm.setXydm(userDep);
		}
		
		service.writeAbled(request, "nbtyWmqs.do?method=shWmqs");
		//获取楼栋、楼层、寝室号
		nbtyWqmsService.getLdLcQshList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		//学年列表	
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("shWmqs");
	}
	
	/** 
	 * 文明寝室申请结果
	 * Method resultWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward resultWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		HttpSession session=request.getSession();
		NbtyWmqsForm nbtyWmqsForm=(NbtyWmqsForm)form;
		NbtyWqmsService nbtyWqmsService=new NbtyWqmsService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		
		String userName=session.getAttribute("userName").toString();
		String userType=session.getAttribute("userType").toString();
		String userOnLine =session.getAttribute("userOnLine").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String isBzr=session.getAttribute("isBzr").toString();
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		if(DELETE.equalsIgnoreCase(doType)){   //删除操作
			this.deleteOperation(request, TABNAME);
			doType="qry";
		}
		
		//学生用户登陆
		if("student".equalsIgnoreCase(userOnLine)){		
			Map<String,String> map=nbtyWqmsService.getZsInfo(userName);
			String ssbh=map.get("lddm")+'-'+map.get("qsh");
			request.setAttribute("annexTerm", " and ssbh='"+ssbh+"'");
			String[] outputColumn={"pk","xn","ldmc","cs","qsh","bzrsh","fdysh","xysh","xxsh"};
			selectPageDataByPagination(request,nbtyWmqsForm,TABNAME, VIEWNAME, outputColumn);
			request.setAttribute("stuInfo", map);
			return mapping.findForward("stuInfo");
		}
		
		//查询操作
		if(QUERY.equalsIgnoreCase(doType)){
			//设置审核时复选框disabled属性
				nbtyWqmsService.disabled(userOnLine, userType, request, isBzr, isFdy);
				nbtyWqmsService.getStuByTch(request, nbtyWmqsForm, userName);
			
		}
		
		if("xy".equalsIgnoreCase(userType) 
				&& !"true".equalsIgnoreCase(isFdy)){
			nbtyWmqsForm.setXydm(userDep);
		}
		
		service.writeAbled(request, "xgxt/nbtyWmqs.do?method=resultWmqs");
		gyglDao.getLdLcQshList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("xnList", Base.getXnndList());//学年列表		
		return mapping.findForward("resultWmqs");
	}
	
	
	/** 
	 * 文明寝室单个审核
	 * Method shOneWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward shOneWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		NbtyWqmsService nbtyWqmsService=new NbtyWqmsService();
		NbtyWmqsForm  nbtyWmqsForm=(NbtyWmqsForm)form;
		HttpSession session=request.getSession();
		
		
		String isFdy=session.getAttribute("isFdy").toString();
		String isBzr=session.getAttribute("isBzr").toString();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String userType=session.getAttribute("userType").toString();
		String write="yes";
		
		if(StringUtils.isNotNull(doType)){
			this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		}
		
		HashMap<String,String> rs=(HashMap)request.getAttribute("rs");
		
		//获取审核结果，select中选项
		nbtyWqmsService.setShZd(nbtyWmqsForm, isBzr, isFdy, userType, rs);
		
		if(MODIFY.equalsIgnoreCase(doType)){				//执行的修改操作
			//用write来判断读写权利
			write=nbtyWqmsService.canWrite(write, rs, isFdy, isBzr, userType);
			if("yes".equalsIgnoreCase(write)){
				this.updateOperation(request, TABNAME);
			}
		}
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		request.setAttribute("write", write);
		return mapping.findForward("shOneWmqs");
	}
	
	
	/** 
	 * 文明寝室单条信息、修改
	 * Method oneWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	public ActionForward oneWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		HttpSession session=request.getSession();
		NbtyWqmsService nbtyWqmsService=new NbtyWqmsService();
		
		String doType =request.getParameter("doType");
		String pkValue=request.getParameter("pkValue");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userType=session.getAttribute("userType").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String isBzr=session.getAttribute("isBzr").toString();
		String write="yes";
		
		//传入的参数不为空时，根据pkValue查询出单条信息
		if(StringUtils.isNotNull(doType)){
			this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);	
		}
		
		//修改
		if(MODIFY.equalsIgnoreCase(doType)){
			
			
			HashMap<String,String>rs=(HashMap)request.getAttribute("rs");
			 //判断学生的读写权
			if("student".equalsIgnoreCase(userOnLine)){
				if("通过".equals(rs.get("fdysh")) 
						&& "通过".equals(rs.get("bzrsh"))){    
					write="no";
				}
			}
			
			//判断班主任，辅导员和学院的读写权
			write=nbtyWqmsService.canWrite(write, rs, isFdy, isBzr, userType);
			if("yes".equalsIgnoreCase(write)){
				this.updateOperation(request, TABNAME);
			}
		
		}
		request.setAttribute("write", write);	
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		return mapping.findForward("oneWmqs");
	}
	
	/** 
	 * 报表导出
	 * Method expDate
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			this.expPageData(request, response, TABNAME, VIEWNAME, null);
		} catch (Exception e) {
			e.printStackTrace();
		}			
		
		return mapping.findForward("success");
	}
	
	
	/**
	 * 申请表打印
	 * method printWmqs
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward printWmqs(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
			String pkValue = request.getParameter("pkValue");
			this.selectPageDataByOne(request,TABNAME, VIEWNAME,  pkValue);
			return mapping.findForward("printWmqs");
	}
}