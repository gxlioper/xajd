/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.nbty.wmbj;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.pjpy.nbty.rych.NbtyPjpyService;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;
import xgxt.xsgygl.dao.gyglDao;

/** 
 * MyEclipse Struts
 * Creation date: 07-09-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class NbtyWmbjAction extends BaseAction {
	
	protected static final String QUERY = "qry";//页面查询操作判断标志
	
	protected static final String DELETE = "del";//页面删除操作判断标志
	
	protected static final String VIEW = "view";//页面单个显示详细操作判断标志
	
	protected static final String MODIFY = "modi";//页面修改操作判断标志

	protected static final String SAVE = "save";//页面保存操作判断标志
	
	protected static final String TABNAME = "NBTY_WMBJDJB";//页面保存操作判断标志
	
	protected static final String VIEWNAME = "VIEW_NBTY_WMBJDJB";//页面保存操作判断标志
	 
	
	/** 
	 * 文明班级申请页面
	 * Method nbtySqWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward nbtySqWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		NbtyWmbjForm nbtyWmbjForm=(NbtyWmbjForm)form;
		HttpSession session=request.getSession();
		NbtyWmbjService nbtyWmbjService=new NbtyWmbjService();
		XsxxglService xsxxglService=new XsxxglService();
		RcswKqglXskqService service=new RcswKqglXskqService();
		
		HashMap<String,String> map = new HashMap<String, String>();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String userName=session.getAttribute("userName").toString();
		String doType=request.getParameter("doType");
		String pkValue=request.getParameter("save_xn")+request.getParameter("save_bjdm");
		//判断是否是学生干部
		String isBgb="yes";
		//获取申请时间
		String sqsj=GetTime.getNowTime2();
		
		//判断是否是班干部  true(不是班干部)
		if(nbtyWmbjService.notGbStudent(userName, userOnLine)){
			isBgb="no";
		}
		
		//不是  非干部的学生 并且为SAVE操作
		if(!nbtyWmbjService.notGbStudent(userName, userOnLine)
				&& SAVE.equalsIgnoreCase(doType)){
			//执行insert
			this.insertOperation(request, TABNAME);
			
		}
		
		//学院用户登陆,锁定学院下拉列表
		if("xy".equalsIgnoreCase(userType)){
			nbtyWmbjForm.setSave_xydm(userDep);
		}
		
		map=xsxxglService.selectStuinfo(userName);
		 //获取学院，班级和专业通用方法
		
		service.writeAbled(request, "pjpy_hzy_xjbjandwmbj.do?method=xjbjAndWmbjSq");
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);	
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("sqsj", sqsj);
		request.setAttribute("isBgb",isBgb);
		request.setAttribute("map", map);
		request.setAttribute("xn", Base.currXn);	
		return mapping.findForward("nbtySqWmbj");
	}
	
	/**
	 * 查询结果页面
	 * method nbtyResultWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward nbtyResultWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		RcswKqglXskqService service=new RcswKqglXskqService();
		HttpSession session=request.getSession();
		NbtyWmbjForm nbtyWmbjForm=(NbtyWmbjForm)form;
		NbtyWmbjService nbtyWmbjService=new NbtyWmbjService();
		NbtyPjpyService nbtyPjpyService=new NbtyPjpyService();
		
		String userName=session.getAttribute("userName").toString();
		String userType=session.getAttribute("userType").toString();
		String userOnLine =session.getAttribute("userOnLine").toString();
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		 
		//删除操作
		if(DELETE.equalsIgnoreCase(doType)){  
			this.deleteOperation(request, TABNAME);
			doType=QUERY;
		}
		
		//学生用户登陆
		if("student".equalsIgnoreCase(userOnLine)){		
				Map<String,String> map=nbtyPjpyService.getStuInfo(userName);
				String bjdm=map.get("bjdm");
				request.setAttribute("annexTerm", " and bjdm='"+bjdm+"'");
				String[] outputColumn={"pk","xn","bjmc","zymc","xymc","xysh","xxsh"};
				//返回rs，rsNum,tabTop
				selectPageDataByPagination(request,nbtyWmbjForm,TABNAME, VIEWNAME, outputColumn);
				request.setAttribute("stuInfo", map);
				return mapping.findForward("stuInfo");
		}
		
		
		if(QUERY.equalsIgnoreCase(doType)){//查询操作
			//判断对返回结果的读写权
			nbtyWmbjService.disabled(request,userType,userOnLine);
			//查询返回字段
			String[] outputColumn={"pk","disabled","xn","bjmc","zymc","xymc","xysh","xxsh"};
			//通用查询
			selectPageDataByPagination(request,nbtyWmbjForm,TABNAME, VIEWNAME, outputColumn);
		
		
		}
		
		if("xy".equalsIgnoreCase(userType)){
			nbtyWmbjForm.setXydm(userDep);
		}
		
		service.writeAbled(request,"ynys_xjbjsqqry.do");
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		//年度，学年，学期 列表
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("nbtyResultWmbj");
	}
	
	
	
	/** 
	 * 文明寝室单条信息、修改
	 * Method nbtyOneWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	
	public ActionForward nbtyOneWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session=request.getSession();
		NbtyWmbjService nbtyWmbjService=new NbtyWmbjService();
		
		String doType =request.getParameter("doType");
		String pkValue=request.getParameter("pkValue");
		String userOnLine=session.getAttribute("userOnLine").toString();
		String userType=session.getAttribute("userType").toString();
		String userName=session.getAttribute("userName").toString();
		String write=request.getParameter("write");
	
		if(MODIFY.equalsIgnoreCase(doType) 
			&& "yes".equalsIgnoreCase(write)){
			
			this.updateOperation(request, TABNAME);
		}
		write="yes";
		
		//JSP传入的是view时,只查询不修改
		this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		
		//判断班干部
		if((SAVE.equalsIgnoreCase(doType) || MODIFY.equalsIgnoreCase(doType))
			&& nbtyWmbjService.notGbStudent(userName, userOnLine)){
			write="no";
		}
		//获取selectPageDataByOne方法查询到的数据
		HashMap<String,String>rs=(HashMap)request.getAttribute("rs");
		//判断读写权 放入request

		nbtyWmbjService.canWrite(request, rs,doType,write, userType, userOnLine);

		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		return mapping.findForward("nbtyOneWmbj");
	}
	
	/** 
	 * 文明班级单个审核
	 * Method nbtyShOneWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward nbtyShOneWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		NbtyWmbjForm  nbtyWmbjForm=(NbtyWmbjForm)form;
		HttpSession session=request.getSession();
		NbtyWmbjService nbtyWmbjService=new NbtyWmbjService();
	
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String userType=session.getAttribute("userType").toString();
		String userOnLine=session.getAttribute("userOnLine").toString();
		String write=request.getParameter("write");
		//修改操作
		if(MODIFY.equalsIgnoreCase(doType)
				&& "yes".equalsIgnoreCase(write)){				
			this.updateOperation(request, TABNAME);
		}
		write="yes";
		
		
		//单条记录显示
		this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);
		
		//在FORM中设置单个审核时的SHJG
		nbtyWmbjService.setSh(request, nbtyWmbjForm, userType);
		
		//获取selectPageDataByOne方法中查询到的信息
		HashMap<String,String>rs=(HashMap)request.getAttribute("rs");
		
		//判断读写权 放入request
		nbtyWmbjService.canWrite(request, rs,write, userType, userOnLine);
			
		
		//锁定学院用户的XYDM
		if("xy".equalsIgnoreCase(userType)){
			nbtyWmbjForm.setSave_xysh(rs.get("xysh").toString());		
		}
		
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		return mapping.findForward("nbtyShOneWmbj");
	}
	
	
	/**
	 * 批量审核
	 * method nbtyShWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	
	public ActionForward nbtyShWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
	
		RcswKqglXskqService service=new RcswKqglXskqService();
		NbtyWmbjForm nbtyWmbjForm=(NbtyWmbjForm)form;
		NbtyWmbjService nbtyWmbjService=new NbtyWmbjService();
		HttpSession session=request.getSession();
		String userType =session.getAttribute("userType").toString();
		String doType=request.getParameter("doType");
		String userDep=session.getAttribute("userDep").toString();
		String shjg=request.getParameter("shjg");
		
		if(MODIFY.equalsIgnoreCase(doType)){		
			//获取要修改值的valueMap
			HashMap<String, String> valueMap = (HashMap)nbtyWmbjService.getValueMap(shjg, userType);
			//获取pkValue
			HashMap<String, String[]> primaryMap = getValueArrayMap(request, PRIFIX_PRIMARY_KEY);
			this.auditingBatchOperation(request, primaryMap, valueMap, TABNAME);
			doType="qry";
		}
		
		//条件查询  审核信息
		if(QUERY.equalsIgnoreCase(doType)){	
			 //过滤读写
			 nbtyWmbjService.disabled(request,userType);
			 String[] outputColumn={"pk","disabled","xn","bjmc","zymc","xymc","xysh","xxsh"};
			 this.selectPageDataByPagination(request,nbtyWmbjForm,TABNAME, VIEWNAME, outputColumn);
			
		}
		
		if("xy".equalsIgnoreCase(userType) ){
			nbtyWmbjForm.setXydm(userDep);
		}
		
		service.writeAbled(request, "xjbj_check.do");
		gyglDao.getLdLcQshList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("xnList", Base.getXnndList());//学年列表	
		return mapping.findForward("nbtyShWmbj");
	}
	
	
	/**
	 * 申请表打印
	 * method nbtyPrintWmbj
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	
	public ActionForward nbtyPrintWmbj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
			
		    String pkValue = request.getParameter("pkValue");
			this.selectPageDataByOne(request,TABNAME, VIEWNAME,  pkValue);
			return mapping.findForward("nbtyPrintWmbj");
	}
	
	
	
	/** 
	 * 报表导出
	 * Method expDate
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			this.expPageData(request, response, TABNAME, VIEWNAME, null);
		} catch (Exception e) {
			e.printStackTrace();
		}			
		
		return mapping.findForward("success");
	}
	
}