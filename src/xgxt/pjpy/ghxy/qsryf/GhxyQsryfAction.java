/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.pjpy.ghxy.qsryf;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.rcsw.kqgl.xskq.RcswKqglXskqService;
import xgxt.szdw.ghxy.njzrwh.GhxyNjzrwhService;
import xgxt.utils.FormModleCommon;
import xgxt.xsgygl.dao.gyglDao;
import xgxt.xsgygl.ghxy.qyfdywh.GhxyQyfdywhDao;
import xgxt.xsgygl.ghxy.qyfdywh.GhxyQyfdywhService;
import xgxt.xszz.nbty.jtjjknsbz.NbtyJtjjknsService;

/**
 * MyEclipse Struts Creation date: 08-05-2010
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class GhxyQsryfAction extends BaseAction {
	/*
	 * Generated Methods
	 */
	protected static final String QUERY = "qry"; // 查询页面

	protected static final String DELETE = "del";// 页面删除操作判断标志

	protected static final String VIEW = "view";// 页面单个显示详细操作判断标志

	protected static final String MODIFY = "modi";// 页面修改操作判断标志

	protected static final String SAVE = "save";// 页面保存操作判断标志

	protected static final String TABNAME = "ghxy_qsryfb";// 页面保存操作判断标志

	protected static final String VIEWNAME = "view_ghxy_qsryf";// 页面保存操作判断标志

	/**
	 * Method BjryWh 班级荣誉维护
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception
	 */
	public ActionForward qsryfWh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();
		GhxyQsryfForm ghxyQsryfForm = (GhxyQsryfForm) form;
		GhxyQsryfService ghxyQsryfService = new GhxyQsryfService();
		GhxyQsryfDao qsryfDao=new GhxyQsryfDao();
		
		String userType = session.getAttribute("userType").toString();
		String userDep = session.getAttribute("userDep").toString();
		String isFdy = session.getAttribute("isFdy").toString();
		String userName = session.getAttribute("userName").toString();
		String doType = request.getParameter("doType");
		String pc = request.getParameter("pc");
		String queryequals_pc = request.getParameter("queryequals_pc");
		String queryequals_xn = request.getParameter("queryequals_xn");
		String queryequals_xq = request.getParameter("queryequals_xq");
		queryequals_pc = Base.isNull(queryequals_pc) ? "" : queryequals_pc;
		queryequals_xn = Base.isNull(queryequals_xn) ? "" : queryequals_xn;
		queryequals_xq = Base.isNull(queryequals_xq) ? "" : queryequals_xq;
		if (MODIFY.equalsIgnoreCase(doType)) {
			// 批量保存操作
			ghxyQsryfService.plSave(request, ghxyQsryfForm, pc);

		}
		
		// 荣誉分批次List
		ghxyQsryfService.ryfPcList(request);
		// qsryfWh页面ssbh和text的信息加载
		if(qsryfDao.isGygly(userName)){
			ghxyQsryfService.getQsList(request, ghxyQsryfForm, queryequals_pc,
					queryequals_xn, queryequals_xq, userName);
		}
		request.setAttribute("dqxn", Base.currXn);
		request.setAttribute("dqxq", Base.currXq);
		request.setAttribute("path", "ghxyQsryf.do?method=qsryfWh");
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		FormModleCommon.setNdXnXqList(request);
		if(qsryfDao.isGygly(userName)){
			ghxyQsryfService.getSsxxByWh(request, userType, userName, isFdy, userDep);
		}else {
			gyglDao.getLdLcQshList(request);
		}
		return mapping.findForward("qsryfWh");
	}

	public ActionForward qsryfCx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();
		GhxyQsryfService ghxyQsryfService = new GhxyQsryfService();
		GhxyQyfdywhService ghxyQyfdywhService = new GhxyQyfdywhService();
		GhxyQsryfDao qsryfDao=new GhxyQsryfDao();
		GhxyQsryfForm qsryfForm=(GhxyQsryfForm)form;
		
		String userType=session.getAttribute("userType").toString();
		String userDep=session.getAttribute("userDep").toString();
		String userName = session.getAttribute("userName").toString();
		String doType = request.getParameter("doType");
		String isFdy=session.getAttribute("isFdy").toString();

		
		if (DELETE.equalsIgnoreCase(doType)) {
			this.deleteOperation(request, TABNAME);
			ghxyQsryfService.deleteQsxx();
			doType = "qry";
		}
		if (QUERY.equalsIgnoreCase(doType)) {
			
			ghxyQsryfService.selectQsryf(request, qsryfForm, userType, userName, isFdy, userDep);
		}
		

		if (ghxyQyfdywhService.isQyfdy(userName)) {
			request.setAttribute("isQyfdy", ghxyQyfdywhService.isQyfdy(userName));
			request.setAttribute("yqqdmList", ghxyQyfdywhService.getQyfdy(userName));
		} else {
			ghxyQsryfService.yqqList(request);
		}
		// 批次List
		ghxyQsryfService.ryfPcList(request);
		request.setAttribute("qyfdy", ghxyQyfdywhService.isQyfdy(userName));
		request.setAttribute("path", "ghxyQsryf.do?method=qsryfCx");
		request.setAttribute("isGyfdy", qsryfDao.isGygly(userName));
		request.setAttribute("isQyfdy", ghxyQyfdywhService.isQyfdy(userName));
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		if(qsryfDao.isGygly(userName)
				|| "xy".equalsIgnoreCase(userType)
				|| "true".equalsIgnoreCase(isFdy)
				|| ghxyQyfdywhService.isQyfdy(userName)){
			ghxyQsryfService.getSsxx(request, userType, userName, isFdy, userDep);
		}else if(!"stu".equalsIgnoreCase(userType)){
			gyglDao.getLdLcQshList(request);
		}

		if("stu".equalsIgnoreCase(userType)){
			HashMap<String,String>hashMap=ghxyQsryfService.getZsxx(userName);
			qsryfForm.setQueryequals_lddm(hashMap.get("lddm"));
			qsryfForm.setQueryequals_cs(hashMap.get("cs"));
			qsryfForm.setQueryequals_qsh(hashMap.get("qsh"));
			request.setAttribute("lddm", qsryfForm.getQueryequals_lddm());
			request.setAttribute("cs", qsryfForm.getQueryequals_cs());
			request.setAttribute("qsh", qsryfForm.getQueryequals_qsh());
		}
		
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("qsryfCx");
	}

	/**
	 * 班级荣誉分单个增加 method bjryfTj
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward qsryfTj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		String doType = request.getParameter("doType");

		GhxyQsryfForm ghxyBjryfForm = (GhxyQsryfForm) form;
		NbtyJtjjknsService nbtyJtjjknsService = new NbtyJtjjknsService();
		GhxyQsryfService service = new GhxyQsryfService();
		service.ryfPcList(request);

		// 保存操作
		if (SAVE.equalsIgnoreCase(doType)) {
			
			this.insertOperation(request, TABNAME);
		}
		// 刷新页面
		if ("new".equalsIgnoreCase(doType)) {
			String lddm = request.getParameter("lddm");
			String cs = request.getParameter("cs");
			String qsh = request.getParameter("qsh");
			ghxyBjryfForm.setLddm(lddm);
			ghxyBjryfForm.setCs(cs);
			ghxyBjryfForm.setQsh(qsh);
			service.getBjjfxx(request, lddm + "-" + qsh);
		}

		String xqmc = nbtyJtjjknsService.getXqMc(Base.currXq);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);

		// 指标List
		request.setAttribute("zbList", service.zbList());
		gyglDao.getLdLcQshList(request);
		request.setAttribute("xqmc", xqmc);
		request.setAttribute("xn", Base.currXn);
		request.setAttribute("xq", Base.currXq);
		return mapping.findForward("qsryfTj");
	}

	/**
	 * 寝室荣誉分单个修改 method bjryfTj
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward qsryfXx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();
		GhxyQsryfService service = new GhxyQsryfService();
		NbtyJtjjknsService nbtyJtjjknsService = new NbtyJtjjknsService();

		String userName = session.getAttribute("userName").toString();
		String userType = session.getAttribute("userType").toString();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String xqmc = nbtyJtjjknsService.getXqMc(Base.currXq);

		if (MODIFY.equalsIgnoreCase(doType)) {
			this.updateOperation(request, TABNAME);
		}

		this.selectPageDataByOne(request, TABNAME, VIEWNAME, pkValue);

		HashMap<String, String> hashMap = (HashMap<String, String>) request
				.getAttribute("rs");
		String ssbh = hashMap.get("plssbh");
		String pc = hashMap.get("pc");
		String xn = hashMap.get("xn");
		String xq = hashMap.get("xq");

		if (service.checkQsryf(userName, userType, ssbh, pc, xn, xq)) {
			request.setAttribute("write", "yes");
		} else {
			request.setAttribute("write", "no");
		}

		// 指标List
		request.setAttribute("zbList", service.zbList());
		// 批次List
		service.ryfPcList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xqmc", xqmc);
		return mapping.findForward("qsryfXx");
	}

	public ActionForward qsryfSz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		GhxyQsryfService service = new GhxyQsryfService();

		String tableName = "ghxy_qsryfblsz";
		String doType = request.getParameter("doType");

		// 查询操作
		if (SAVE.equalsIgnoreCase(doType)) {
			this.insertBatchOperation(request, tableName);
			doType = "qry";
		}

		if (DELETE.equalsIgnoreCase(doType)) {
			this.deleteOperation(request, tableName);
		}

		service.ryfdjList(request);
		service.getBlszxx(request);

		// 结果集
		request.setAttribute("path", "ghxyQsryf.do?method=qsryfSz");
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		FormModleCommon.setNdXnXqList(request);
		return mapping.findForward("qsryfSz");
	}

	/**
	 * 班级荣誉分审核
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward qsryfSh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();
		String doType = request.getParameter("doType");
		GhxyQyfdywhService ghxyQyfdywhService = new GhxyQyfdywhService();
		GhxyQsryfService service = new GhxyQsryfService();
		GhxyQsryfForm ghxyQsryfForm = (GhxyQsryfForm) form;
		NbtyJtjjknsService nbtyJtjjknsService = new NbtyJtjjknsService();
		// 保存操作
		String userType = session.getAttribute("userType").toString();
		String userName = session.getAttribute("userName").toString();
		String userDep=session.getAttribute("userDep").toString();
		String isFdy=session.getAttribute("isFdy").toString();
		String tabName = "ghxy_qsryfshb";
		String dj = request.getParameter("dj");
		String viewName = "view_ghxy_qsryfsh";
		String shjg = request.getParameter("shjg");
		String[] cbv = request.getParameterValues("primarykey_cbv");
		String nj = request.getParameter("queryequals_nj");
		String yqqdm = service.getQyfdy(userName);

		String pc = Base.isNull(request.getParameter("queryequals_pc")) ? null
				: request.getParameter("queryequals_pc");

		if (MODIFY.equalsIgnoreCase(doType)) {
			if(ghxyQyfdywhService.isQyfdy(userName)){
				service.shbSave(request, ghxyQsryfForm, pc);
			}

			if (service.checkQss(userName, dj, cbv.length, nj, yqqdm,pc)) {
				HashMap<String, String[]> primaryMap = getValueArrayMap(
						request, PRIFIX_PRIMARY_KEY);
				HashMap<String, String> valueMap = service.getShxx(userType,
						userName, shjg, dj);
				this.auditingBatchOperation(request, primaryMap, valueMap,
						tabName);
				doType = "qry";
			} else {
				request.setAttribute("bjbl", "no");
			}
		}
		if (QUERY.equalsIgnoreCase(doType)) {
			//根据用户权限限制查询结果
			service.getQsXx(request, userType, userName, isFdy, userDep);
			service.getReader(request, userType, userName);
			String[] outputColumn = { "pkValue", "disabled","xq", "xn", "xqmc",
					"plssbh", "yqqmc", "ldmc", "nj", "pcmc", "qsh", "cs","dxfz",
					"qyfdysh", "xxsh", "djmc" };
			
			this.selectPageDataByPagination(request, ghxyQsryfForm, tabName,
					viewName, outputColumn);
		}

		if (ghxyQyfdywhService.isQyfdy(userName)) {
			request.setAttribute("yqqdmList", ghxyQyfdywhService
					.getQyfdy(userName));
		} else {
			service.yqqList(request);
		}
		// 班级荣誉分等级
		service.ryfdjList(request);
		// 指标List
		request.setAttribute("zbList", service.zbList());
		// 批次List
		service.ryfPcList(request);

		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		FormModleCommon.setNdXnXqList(request);
		gyglDao.getLdLcQshList(request);
		request.setAttribute("path", "ghxyQsryf.do?method=qsryfSh");
		FormModleCommon.commonRequestSet(request);
		String xqmc = nbtyJtjjknsService.getXqMc(Base.currXq);
		request.setAttribute("isQyfdy", ghxyQyfdywhService.isQyfdy(userName));
		request.setAttribute("xqmc", xqmc);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("xn", Base.currXn);
		if(!"xx".equalsIgnoreCase(userType)
				&& !"admin".equalsIgnoreCase(userType)){
			service.getSsxx(request, userType, userName, isFdy, userDep);
		}else{
			gyglDao.getLdLcQshList(request);
		}
		return mapping.findForward("qsryfSh");
	}

	/**
	 * bjryfShOne单个审核
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward qsryfShOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		HttpSession session = request.getSession();
		GhxyQsryfService service = new GhxyQsryfService();
		GhxyQyfdywhService ghxyQyfdywhService = new GhxyQyfdywhService();
		NbtyJtjjknsService nbtyJtjjknsService = new NbtyJtjjknsService();
		GhxyQsryfForm ghxyQsryfForm=(GhxyQsryfForm)form;
		
		String userName = session.getAttribute("userName").toString();
		String doType = request.getParameter("doType");
		String pkValue = request.getParameter("pkValue");
		String djdm = request.getParameter("save_djdm");
		String tabName = "ghxy_qsryfshb";
		String viewName = "view_ghxy_qsryfsh";
		String userType=session.getAttribute("userType").toString();

		// 单条记录显示
		this.selectPageDataByOne(request, tabName, viewName, pkValue);

		HashMap<String, String> map = (HashMap<String, String>) request
				.getAttribute("rs");
		String nj = map.get("nj");
		String yqqdm = service.getQyfdy(userName);

		String pc=request.getParameter("save_pc");
		String []xnArr={Base.currXn};
		String []xqArr={Base.currXq};
		String [] primarykey={pkValue};
		ghxyQsryfForm.setCheckVal(primarykey);
		ghxyQsryfForm.setPrimarykey_cbv(primarykey);
		ghxyQsryfForm.setXnArr(xnArr);
		ghxyQsryfForm.setXqArr(xqArr);
		// 修改操作
		if (MODIFY.equalsIgnoreCase(doType)) {
			if(ghxyQyfdywhService.isQyfdy(userName)){
				service.shbSave(request, ghxyQsryfForm, pc);
			}

			if (service.checkQss(userName, djdm, 1, nj, yqqdm,pc)){ 
				
				service.shbSave(request, ghxyQsryfForm, pc);

				this.updateOperation(request, tabName);
			} else {
				request.setAttribute("bjbl", "no");
			}
		}

		if ("通过".equalsIgnoreCase(map.get("xxsh"))
				&& (!"admin".equalsIgnoreCase(userType)
				|| !"xx".equalsIgnoreCase(userType))) {
			request.setAttribute("write", "no");
		}
		service.getBjjfxx(request, map.get("plssbh"));
		// 荣誉分等级LIST
		service.ryfdjList(request);
		request.setAttribute("isQyfdy", ghxyQyfdywhService.isQyfdy(userName));
		String xqmc = nbtyJtjjknsService.getXqMc(Base.currXq);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("xqmc", xqmc);
		request.setAttribute("pkValue", pkValue);
		request.setAttribute("doType", doType);
		
		return mapping.findForward("qsryfShOne");
	}

	/**
	 * 报表导出 Method expDate
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	public ActionForward expDate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try {
			this.expPageData(request, response, TABNAME, VIEWNAME, null);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return mapping.findForward("success");
	}

}