/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.comm.sjjc;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.action.Base;
import xgxt.utils.FormModleCommon;
import xgxt.utils.SearchUtils;

/**
 * MyEclipse Struts Creation date: 07-04-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * 
 * @author qlj
 */
public class DataDetectAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * 异常数据检测模块 Method detectManage
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward detectManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		DataDetectService service = new DataDetectService();
		DataDetectForm myForm = (DataDetectForm) form;

		// 模块类型
		String mklx = request.getParameter("mklx");
		myForm.setMklx(mklx);

		// 学校代码
		String xxdm = Base.xxdm;
		myForm.setXxdm(xxdm);

		request.setAttribute("mklx", mklx);

		// 功能模块路径
		request.setAttribute("path", "dataDetect.do?method=detectManage&mklx="
				+ mklx);
		// 获取title和读写权
		FormModleCommon.commonRequestSet(request);

		// 根据学校代码、模块类型获取数据检测信息
		request.setAttribute("sjjcList", service.getSjjcByXxMk(myForm));
		return mapping.findForward("detectManage");
	}

	/**
	 * 异常数据检测处理模块
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward disposeManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		DataDetectService service = new DataDetectService();
		DataDetectForm myForm = (DataDetectForm) form;

		// 模块类型
		String mklx = request.getParameter("mklx");
		// 异常类型代码
		String yclxdm = request.getParameter("yclxdm");
		// 操作类型
		String doType = request.getParameter("doType");

		myForm.setYclxdm(yclxdm);

		// 删除异常数据操作
		if ("del".equalsIgnoreCase(doType)) {
			boolean result = service.delData(myForm);
			request.setAttribute("result", result);
		}

		// 返回异常数据检测查询结果集
		request.setAttribute("rs", service.getJcsjList(myForm));
		// 字段名
		request.setAttribute("topTr", SearchUtils.getTopTr(myForm
				.getTableName(), myForm.getColList(), null));

		// -------------------自动补空行功能数据设置----------------------
		// 结果集名称
		String rsName = "rs";
		// 是否需要checkbox
		String isCheckBox = "yes";
		// 显示的起始列
		String startNum = "0";
		// 显示列数
		String showNum = String.valueOf(myForm.getColList().length - 1);

		request.setAttribute("rsName", rsName);
		request.setAttribute("isCheckBox", isCheckBox);
		request.setAttribute("startNum", startNum);
		request.setAttribute("showNum", showNum);
		request.setAttribute("pObj", myForm.getPages());

		// -------------------自动补空行功能数据设置end----------------------

		// 获取读写权和title
		request.setAttribute("path", "dataDetect.do?method=detectManage&mklx="
				+ mklx);
		FormModleCommon.commonRequestSet(request);
		// 异常类型名称
		request.setAttribute("yclxmc", myForm.getYclxmc());
		return mapping.findForward("disposeManage");
	}
}