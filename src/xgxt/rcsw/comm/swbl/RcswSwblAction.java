/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.rcsw.comm.swbl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.upload.FormFile;

import xgxt.action.Base;
import xgxt.comm.CommSetting;
import xgxt.comm.MessageInfo;
import xgxt.form.RequestForm;
import xgxt.form.User;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;

import com.zfsoft.basic.BasicAction;

/** 
 * MyEclipse Struts
 * Creation date: 09-06-2011
 * 
 * @author 裘力俊
 */
public class RcswSwblAction extends BasicAction {
	/*
	 * Generated Methods
	 */
	
	/**
	 * 事务办理项目设置管理
	 */
	public ActionForward xmszManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service = new RcswSwblService();
		
		List<String[]>rs=service.getXmszList(myForm);
		List<HashMap<String,String>>topTr=service.getXmszTopTr(myForm);
		
		request.setAttribute("topTr", topTr);
		request.setAttribute("rs", rs);
		return mapping.findForward("xmszManage");
	}
	
	
	/** 
	 * 事务办理申请
	 * Method swblSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward swblSq(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		
		HttpSession session =request.getSession();
		XsxxglService stuService = new XsxxglService();
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service=new RcswSwblService();
		String xmdm=request.getParameter("xmdm");
		//项目设置信息
		HashMap<String,String>xmszMap=new HashMap<String,String>();
		//学生信息
		HashMap<String,String>stuInfo=new HashMap<String,String>();
		
		myForm.setXmdm(xmdm);
		xmszMap=service.getXmszb(myForm);
		
		User user = getUser(request);// 用户对象
		//用户类型(学生、老师)
		String userOnLine=session.getAttribute("userOnLine").toString();
		//提示信息
		String message = "";
		String xh="";
		String doType=request.getParameter("doType");
		
		//  判断用户类型
		//  -------------学生基本信息---------------
		if("stu".equalsIgnoreCase(user.getUserType())){
			
			stuInfo=stuService.selectStuinfo(user.getUserName());
			xh=user.getUserName();
		}else if("teacher".equalsIgnoreCase(userOnLine)){
			xh=request.getParameter("xh");
			if(!Base.isNull(xh)){
				stuInfo=stuService.selectStuinfo(xh);
			}
		}
		
		// ====================保存操作 begin===================
		if("save".equalsIgnoreCase(doType)){
			boolean flag=false;
			//文件
			FormFile file = myForm.getUploadFile();
			// 上传路径
			String filepath = service.upLoadFile(request, file, "swbl");
			myForm.setScwj(filepath);
			//保存日常事务信息
			flag=service.saveSwblSq(myForm);
			//保存子项目
			if(flag){
				flag=service.saveSwblZx(myForm, user);
			}
			//保存审核表数据
			if(flag){
				flag=service.saveXmsh(myForm);
			}
			message = flag ? MessageInfo.MESSAGE_SAVE_SUCCESS
					: MessageInfo.MESSAGE_SAVE_FALSE;
			request.setAttribute("message", message);
		}
		// ====================保存操作 end===================
		
		
		// ------------request begin-------------
		request.setAttribute("stuInfo", stuInfo);
		request.setAttribute("xmszMap", xmszMap);
		
		// -----------判断是否需要分级别 begin---------
		if("是".equalsIgnoreCase(xmszMap.get("sffj"))){
			//如果需要分级给出分级所需显示字段
			request.setAttribute("fjzdList", service.getFjzdxs(myForm));
		}
		// -----------判断是否需要分级别 end---------
		
		//通过反射获取数据列表
		service.resultXlkList(myForm,request);
		
		// -----------title加载、权限控制 begin------------
		request.setAttribute("path", "rcswSwbl.do?method=swblSq&xmdm="+xmdm);
		FormModleCommon.commonRequestSet(request);
		// -----------title加载、权限控制 end------------
		
		request.setAttribute("xsxxZdList", service.getXsxxXs(myForm));
		request.setAttribute("doType", "add");
		request.setAttribute("xmdm", xmdm);
		request.setAttribute("xh", xh);
		request.setAttribute("sqsj", GetTime.getNowTime2());
		// ------------request end---------------
		
		return mapping.findForward("swblSq");
	}
	
	/** 
	 * 事务办理修改
	 * Method swblSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward swblXg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		// 用户对象
		User user=getUser(request);
		
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service=new RcswSwblService();
		
		String message = "";// 提示信息
		//主键
		String pkValue=request.getParameter("pkValue");
		//操作类型
		String doType=request.getParameter("doType");
		//项目代码
		String xmdm= request.getParameter("xmdm");
		
		//项目设置信息
		HashMap<String,String>xmszMap=service.getXmszb(myForm);
		HashMap<String,String>stuInfo=new HashMap<String,String>();
		
		
		// ==================加载学生信息===================
		if(!Base.isNull(pkValue)){
			
			stuInfo=service.getSwblMap(myForm);
		}
		
		// -----------判断是否需要分级别 begin---------
		if("是".equalsIgnoreCase(xmszMap.get("sffj"))){
			//如果需要分级给出分级所需显示字段
			request.setAttribute("fjzdList", service.getFjzdxs(myForm));
		}
		
		//  -----------title加载、权限控制 begin------------
		request.setAttribute("path", "rcswSwbl.do?method=swblSq&xmdm="+xmdm);
		FormModleCommon.commonRequestSet(request);
		// -----------title加载、权限控制 end------------
		
		if("save".equalsIgnoreCase(doType)){

			FormFile file = myForm.getUploadFile();
			// 上传路径
			String filepath = service.upLoadFile(request, file, "swbl");

			myForm.setScwj(filepath);
			
			boolean flag=service.updateSwbl(myForm);
			if(flag){
				flag=service.saveSwblZx(myForm, user);
			}
			
			message = flag ? MessageInfo.MESSAGE_SAVE_SUCCESS
					: MessageInfo.MESSAGE_SAVE_FALSE;
			request.setAttribute("message", message);
			
		}
		//通过反射获取数据列表
		service.resultXlkList(myForm,request);
		// -----------判断是否需要分级别 end---------
		request.setAttribute("stuInfo", stuInfo);
		request.setAttribute("xmszMap", xmszMap);
		request.setAttribute("xmdm", stuInfo.get("xmdm"));
		request.setAttribute("xh", stuInfo.get("xh"));
		request.setAttribute("sqsj", stuInfo.get("sqsj"));
		request.setAttribute("doType", doType);
		return mapping.findForward("swblSq");
	}
	
	/** 
	 * 事务办理查询
	 * Method swblCx
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward swblCx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		User user=getUser(request);
		String xmdm=request.getParameter("xmdm");
		RcswSwblForm myForm=(RcswSwblForm)form;
		RequestForm rForm = new RequestForm();
		RcswSwblService service=new RcswSwblService();
		List<String[]>rs=new ArrayList<String[]>();
		String doType=request.getParameter("doType");
		
		if("del".equalsIgnoreCase(doType)){
			
			service.delSwblxx(myForm);
		}
		
		rs=service.getXsSwblList(myForm);
		// ------------------request begin---------------------
		
		// -----------title加载、权限控制 begin------------
		request.setAttribute("path", "rcswSwbl.do?method=swblSq&xmdm="+xmdm);
		FormModleCommon.commonRequestSet(request);
		// -----------title加载、权限控制 end------------
		
		//项目代码
		request.setAttribute("xmdm", xmdm);
		
		// ===============结果集补空行 begin=================
		List<HashMap<String,String>>topTr=service.getCxTopTr(rForm);
		CommSetting commSetting = new CommSetting();

		// 结果集名称
		String rsName = "rs";
		commSetting.setRsName(rsName);

		// 是否需要checkbox
		String isCheckBox = "yes";
		commSetting.setIsCheckBox(isCheckBox);

		// 显示的起始列
		String startNum = "0";
		commSetting.setStartNum(startNum);

		// 显示列数
		String showNum =String.valueOf(topTr.size());
		commSetting.setShowNum(showNum);
		rForm.setCommSetting(commSetting);
		service.setRequestValue(rForm, user, request);
		//  ===============结果集补空行 end=================
		
		// ==============表头begin ==========
		request.setAttribute("topTr", service.getCxTopTr(rForm));
		// ==============  表头end ==========
		
		//  ============显示结果begin============
		request.setAttribute("rs", rs);
		// ============显示结果end============
		
		
		// ------------------request end---------------------
		return mapping.findForward("swblCx");
	}
	
	/** 
	 * 事务办理审核
	 * Method swblSh
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward swblSh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String xmdm=request.getParameter("xmdm");
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service=new RcswSwblService();
		RequestForm rForm = new RequestForm();
		List<String[]>rs=new ArrayList<String[]>();
		
		String doType=request.getParameter("doType");
		
		User user=getUser(request);
		
		if("del".equalsIgnoreCase(doType)){
			
			service.delSwblxx(myForm);
		}
		
		myForm.setUser(user);
		List<HashMap<String, String>> spgwList = service.getUserSpgw(myForm);
		
		//一人存在多审核岗位时控制
		service.shgwKz(request, myForm, spgwList);
		myForm.setUser(user);
		
		if("plsh".equalsIgnoreCase(doType)){
			
			service.updateShzt(myForm);
		}
		
		if(!Base.isNull(myForm.getShgw())){
			rs=service.getSpxxInfo(myForm);
		}
		// ------------------request begin---------------------
		
		// ===============结果集补空行 begin=================
		List<HashMap<String,String>>topTr=service.getShTopTr(rForm);
		CommSetting commSetting = new CommSetting();

		// 结果集名称
		String rsName = "rs";
		commSetting.setRsName(rsName);

		// 是否需要checkbox
		String isCheckBox = "yes";
		commSetting.setIsCheckBox(isCheckBox);

		// 显示的起始列
		String startNum = "0";
		commSetting.setStartNum(startNum);

		// 显示列数
		String showNum =String.valueOf(topTr.size());
		commSetting.setShowNum(showNum);
		rForm.setCommSetting(commSetting);
		service.setRequestValue(rForm, user, request);
		//  ===============结果集补空行 end=================

		
		// -----------title加载、权限控制 begin------------
		request.setAttribute("path", "rcswSwbl.do?method=swblSq&xmdm="+xmdm);
		FormModleCommon.commonRequestSet(request);
		// -----------title加载、权限控制 end------------
		
		//项目代码
		request.setAttribute("xmdm", xmdm);
		
		//=================结果集begion=================
		
		// ==============表头begin ==========
		request.setAttribute("topTr", topTr);
		// ==============  表头end ==========
		
		//  ============显示结果begin============
		request.setAttribute("rs", rs);
		// ============显示结果end============
		
		// =================结果集end=================
		
		// ------------------request end---------------------
		return mapping.findForward("swblSh");
	}
	
	/** 
	 * 事务办理单个审核
	 * Method swblSq
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward swblDgsh(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		
		HttpSession session =request.getSession();
		XsxxglService stuService = new XsxxglService();

		User user=getUser(request);
		
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service=new RcswSwblService();
		String pkValue=request.getParameter("pkValue");
		String doType=request.getParameter("doType");
		String xmdm= request.getParameter("xmdm");
		
		HashMap<String,String>xmszMap=service.getXmszb(myForm);
		HashMap<String,String>stuInfo=new HashMap<String,String>();
		
		if(!Base.isNull(pkValue)){
			
			stuInfo=service.getSwblMap(myForm);
		}
		
		// -----------判断是否需要分级别 begin---------
		if("是".equalsIgnoreCase(xmszMap.get("sffj"))){
			//如果需要分级给出分级所需显示字段
			request.setAttribute("fjzdList", service.getFjzdxs(myForm));
		}
		
		//  -----------title加载、权限控制 begin------------
		request.setAttribute("path", "rcswSwbl.do?method=swblSq&xmdm="+xmdm);
		FormModleCommon.commonRequestSet(request);
		// -----------title加载、权限控制 end------------
		
		if("save".equalsIgnoreCase(doType)){

			service.updateShzt(myForm);
			
		}
		//通过反射获取数据列表
		service.resultXlkList(myForm,request);
		// -----------判断是否需要分级别 end---------
		
		
		request.setAttribute("stuInfo", stuInfo);
		request.setAttribute("xmszMap", xmszMap);
		request.setAttribute("primary_key", pkValue);
		request.setAttribute("shgw", myForm.getShgw());
		request.setAttribute("xmdm", stuInfo.get("xmdm"));
		request.setAttribute("xh", stuInfo.get("xh"));
		request.setAttribute("sqsj", stuInfo.get("sqsj"));
		request.setAttribute("doType", doType);
		request.setAttribute("shxxInfo", service.getShxxInfo(myForm));
		return mapping.findForward("swblSq");
	}
	
	
	
	public ActionForward swblSz(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		RcswSwblForm myForm=(RcswSwblForm)form;
		RcswSwblService service=new RcswSwblService();
		List<HashMap<String,String>>swsqzdList=service.getSwsqzd(myForm);
		List<HashMap<String,String>>xsxxzdList=service.getXsxxzd(myForm);
		request.setAttribute("swsqzdList", swsqzdList);
		request.setAttribute("xsxxzdList", xsxxzdList);
		return mapping.findForward("swblSz");
	}
}