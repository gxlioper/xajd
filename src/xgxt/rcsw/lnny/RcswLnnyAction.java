/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.rcsw.lnny;

import java.io.File;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import jxl.write.WritableWorkbook;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.DAO.DAO;
import xgxt.action.Base;
import xgxt.action.BaseAction;
import xgxt.form.User;
import xgxt.studentInfo.service.XsxxglService;
import xgxt.utils.ExcelMethods;
import xgxt.utils.FormModleCommon;
import xgxt.utils.GetTime;

/** 
 * MyEclipse Struts
 * Creation date: 04-19-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RcswLnnyAction extends BaseAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * 学生一日规范分
	 * Method yrgfManage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward yrgfManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		HttpSession session=request.getSession();
		
		DAO dao=DAO.getInstance();
		
		RcswLnnyService service=new RcswLnnyService();
		RcswLnnyForm myForm=(RcswLnnyForm)form;
		String doType=request.getParameter("doType");
		String userName=session.getAttribute("userName").toString();
		
		myForm.setUser(getUser(request));
		myForm.setXn(Base.currXn);
		myForm.setXq(Base.currXq);
		myForm.setNd(Base.currNd);
		myForm.setDjsj(GetTime.getNowTime2());
		if("".equalsIgnoreCase(myForm.getDfsj())
				|| null==myForm.getDfsj()){
			myForm.setDfsj(GetTime.getNowTime2());
		}
		myForm.setUserName(userName);
		
		if("save".equalsIgnoreCase(doType)){
			
			request.setAttribute("result", service.saveYrgf(myForm,request));
			doType="query";
		}
		
		
		if("".equalsIgnoreCase(myForm.getXmlxdm())
				|| null==myForm.getXmlxdm()){
			service.initXmlxdm(myForm);
			if("".equalsIgnoreCase(myForm.getXmlxdm())
					|| null==myForm.getXmlxdm()){
				request.setAttribute("yhInfo", "请先维护项目类型!");
				return new ActionForward("/yhInfo.do",false);
			}
		}
		
		
		if("query".equalsIgnoreCase(doType)){
			request.setAttribute("rs", service.getRs(myForm,request));
		}
		
		String[]colListCN={"学号","姓名","班级","操作","一日规范分"};
		
		request.setAttribute("topTr", dao.arrayToList(colListCN, colListCN));
		
		String xmlxgl=request.getParameter("xmlxgl");
		request.setAttribute("xmlxgl", xmlxgl);
		request.setAttribute("xn", myForm.getXn());
		request.setAttribute("xq", myForm.getXq());
		request.setAttribute("nd", myForm.getNd());
		request.setAttribute("djsj", myForm.getDjsj());
		request.setAttribute("path", "rcswLnny.do?method=yrgfTjcx");
		request.setAttribute("dfsj", myForm.getDfsj());
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		
		request.setAttribute("pageSize", myForm.getPages().getPageSize());
		request.setAttribute("xmlxList", service.getXmlxList());
		request.setAttribute("xmList", service.getXmList());
		request.setAttribute("divxmList", service.getXmList(myForm));
		return mapping.findForward("yrgfManage");
	}
	

	/** 
	 * 学生一日规范分
	 * Method yrgfManage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward yrgfTjcx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		RcswLnnyService service=new RcswLnnyService();
		RcswLnnyForm myForm=(RcswLnnyForm)form;
		User user=getUser(request);
		
		myForm.setUser(user);
		String doType=request.getParameter("doType");
		if(!service.checkExistsXm()){
			String msg = "请先维护项目类型！";
			request.setAttribute("yhInfo", msg);
			return new ActionForward("/yhInfo.do", false);
		}
		
		//统计查询
		if("query".equalsIgnoreCase(doType)){
			
			request.setAttribute("rs",  service.getTjxx(myForm,request));
		}
		
		request.setAttribute("xn", Base.currXn);
		request.setAttribute("xq", Base.currXq);
		request.setAttribute("nd", Base.currNd);
		request.setAttribute("dqsj", GetTime.getNowTime2());
		
		
		request.setAttribute("path", "rcswLnny.do?method=yrgfTjcx");
		request.setAttribute("djsj", myForm.getDjsj());
		FormModleCommon.commonRequestSet(request);
		FormModleCommon.setNdXnXqList(request);
		FormModleCommon.setNjXyZyBjListForFdyBzr(request);
		request.setAttribute("pageSize", myForm.getPages().getPageSize());
		request.setAttribute("xmlxList", service.getXmlxList());
		request.setAttribute("xmList", service.getXmList());
		request.setAttribute("divxmList", service.getXmList(myForm));
		return mapping.findForward("yrgfTjcx");
	}
	
	/** 
	 * 学生一日规范分统计表
	 * Method yrgfManage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward yrgfTj(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		RcswLnnyForm myForm = (RcswLnnyForm) form;
		RcswLnnyService service=new RcswLnnyService();
		User user=getUser(request);
		
		myForm.setUser(user);
		String modelPath =servlet.getServletContext().getRealPath("") + "/print/rcsw/rcsw_tjlgdx_tzcj.xls";
		response.setContentType("application/vnd.ms-excel");
		WritableWorkbook wwb = ExcelMethods.getWritableWorkbook(new File(modelPath), response.getOutputStream());
	    service.yrgffTj(myForm,request, wwb);
	    return mapping.findForward("");
	}
	
	/** 
	 * 学生一日规范分
	 * Method yrgfManage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward xsyrgff(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		DAO dao=DAO.getInstance();
		
		RcswLnnyService service=new RcswLnnyService();
		RcswLnnyForm myForm=(RcswLnnyForm)form;
		String xh=request.getParameter("xh");
		String xn=request.getParameter("xn");
		String xq=request.getParameter("xq");
		String nd=request.getParameter("nd");
		String kssj=request.getParameter("kssj");
		String jssj=request.getParameter("jssj");
		
		myForm.setXh(xh);
		myForm.setXn(xn);
		myForm.setXq(xq);
		myForm.setNd(nd);
		myForm.setKssj(kssj);
		myForm.setJssj(jssj);
		
		XsxxglService xsxxService=new XsxxglService();
		request.setAttribute("xsxx",xsxxService.selectStuinfo(xh));
		request.setAttribute("xmlxList", service.getXsXmlxList(myForm));
		request.setAttribute("xmxxList", service.getXsXmList(myForm));
		String[]colListCN={"项目名称","学年","学期","年度","打分时间","分值"};
		request.setAttribute("topTr", dao.arrayToList(colListCN, colListCN));
		request.setAttribute("path", "rcswLnny.do?method=yrgfTjcx");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("xsyrgff");
	}
}