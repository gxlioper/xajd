/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package xgxt.gygl.gyfzr.gyfdy;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import xgxt.action.Base;
import xgxt.comm.MessageInfo;
import xgxt.gygl.jbsz.GyglJbszForm;
import xgxt.gygl.jbsz.GyglJbszService;
import xgxt.utils.FormModleCommon;

/** 
 * MyEclipse Struts
 * Creation date: 07-14-2011
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class GyglGyfdyAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method gyfdyManage
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward gyfdyManage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		GyglGyfdyForm myForm=(GyglGyfdyForm)form;
		GyglGyfdyService service=new GyglGyfdyService();
		List<String[]>rs=new ArrayList<String[]>();
		
		String doType=request.getParameter("doType");
		
		String path="gyglGyfdy.do?method=gyfdyManage";
		
		if("query".equalsIgnoreCase(doType)){
			myForm.getSearchModel().setPath(path);
			rs=service.getGyfdy(myForm);

			request.setAttribute("searchTj", myForm.getSearchModel());
			request.setAttribute("rs", rs);
		}
		
		//	-------------------自动补空行功能数据设置----------------------
		// 结果集名称
		String rsName = "rs";
		// 是否需要checkbox
		String isCheckBox = "no";
		// 显示的起始列
		String startNum = "0";
		// 显示列数
		String showNum =String.valueOf(4);
		
		request.setAttribute("rsName", rsName);
		request.setAttribute("isCheckBox", isCheckBox);
		request.setAttribute("startNum", startNum);
		request.setAttribute("showNum", showNum);
		request.setAttribute("pObj",myForm.getPages());
		
		// -------------------自动补空行功能数据设置end----------------------
		request.setAttribute("topTr", service.getTopTr("gyfdy"));
		request.setAttribute("path",path);
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("gyfdyManage");
	}
	
	/** 
	 * Method gyldfdy
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward gyldfdy(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		
		GyglGyfdyForm myForm = (GyglGyfdyForm) form;
		GyglGyfdyService service = new GyglGyfdyService();
		String doType=request.getParameter("doType");
		String yhm=request.getParameter("yhm");
		GyglJbszService jbszService = new GyglJbszService();
		GyglJbszForm jbszModel = jbszService.getGyjbszModel();
		
		HashMap<String,String>rs=new HashMap<String,String>();
		List<HashMap<String,String>>wfpList=new ArrayList<HashMap<String,String>>();
		List<HashMap<String,String>>yfpList=new ArrayList<HashMap<String,String>>();
		
		if("save".equalsIgnoreCase(doType)){
			myForm.setYhm(yhm);
			boolean flag=service.saveGxld(myForm);
			String message = flag ? MessageInfo.MESSAGE_SAVE_SUCCESS
					: MessageInfo.MESSAGE_SAVE_FALSE;
			request.setAttribute("message", message);
		}
		
		if(!Base.isNull(yhm)){
			rs=service.getGyfdyMap(myForm);
			myForm.setYhm(yhm);
			wfpList=service.getWfpldxxList(myForm);
			yfpList=service.getYfpldList(yhm);
		}
		
		request.setAttribute("czxq", jbszModel.getCzxq());
		request.setAttribute("czyq", jbszModel.getCzyq());
		request.setAttribute("path","gyglGyfdy.do?method=gyfdyManage");
		FormModleCommon.commonRequestSet(request);
		request.setAttribute("xqList", service.getXqxx());
		request.setAttribute("yqList", service.getYqxx(myForm));
		request.setAttribute("rs", rs);
		request.setAttribute("wfpList", wfpList);
		request.setAttribute("yfpList", yfpList);
		return mapping.findForward("gyldfdy");
	}
	
	/** 
	 * 获取用户表用户信息
	 * Method gyfdyxx
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward gyfdyxx(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GyglGyfdyForm myForm = (GyglGyfdyForm) form;
		GyglGyfdyService service = new GyglGyfdyService();
		List<String[]> rs = new ArrayList<String[]>();
		
		String doType=request.getParameter("doType");
	
		if ("query".equalsIgnoreCase(doType)) {
			rs=service.getGyfdyxx(myForm);
		}
		
		//-------------------自动补空行功能数据设置----------------------
		// 结果集名称
		String rsName = "rs";
		// 是否需要checkbox
		String isCheckBox = "no";
		// 显示的起始列
		String startNum = "0";
		// 显示列数
		String showNum =String.valueOf(5);
		
		request.setAttribute("rsName", rsName);
		request.setAttribute("isCheckBox", isCheckBox);
		request.setAttribute("startNum", startNum);
		request.setAttribute("showNum", showNum);
		request.setAttribute("pObj",myForm.getPages());
		
		// -------------------自动补空行功能数据设置end----------------------
		request.setAttribute("zwList", service.getZwList(myForm));
		request.setAttribute("bmdmList", service.getBmdmList(myForm));
		request.setAttribute("topTr", service.getTopTr("fdyxx"));
		request.setAttribute("rs", rs);
		request.setAttribute("path","gyglGyfdy.do?method=gyfdyManage");
		FormModleCommon.commonRequestSet(request);
		return mapping.findForward("gyfdyxx");
	}
}