/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zfsoft.basic;

import java.util.Date;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import xgxt.form.CommanForm;


public class CommonOperAction extends BasicAction {
	
	String tabName = "test_temp";
	String viewName = "view_test_temp";
	
	/** 
	 * Method dataAdd
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataAdd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		System.out.println(new Date()+":now");
		this.insertOperation(request, tabName);		
		System.out.println(new Date());
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataAddBatch
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataAddBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.insertBatchOperation(request, tabName);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataUpdate
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataUpdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.updateOperation(request, tabName);
//		String pkValue = (HashMap<String,String>)request.getAttribute("rs");
//		this.selectPageDataByOne(request, tabName, viewName, pkValue);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataUpdateBatch
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataUpdateBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
//		this.updateBatchOperation(request, tabName);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataDelete
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataDelete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.deleteOperation(request, tabName);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataQueryPagination
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward dataQueryPagination(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
		CommanForm model = new CommanForm();
		String[] outputColumn = {"xh","xm","bjmc","xn","xmdm","bz"};
		this.selectPageDataByPagination(request, model, tabName, viewName, outputColumn);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method dataQuery
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward dataQuery(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String[] outputColumn = {"xh","xm","bjmc","xn","xmdm","bz"};
		this.selectPageData(request, tabName, viewName, outputColumn);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method auditingBatchOperation
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward auditingBatchOperation(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.auditingBatchOperation(request, tabName);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method selectPageDataByOne
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward selectPageDataByOne(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.selectPageDataByOne(request, tabName, viewName, "20031501042009-2010");
		return mapping.findForward("success");
	}
	
	/** 
	 * Method savePageDataBatch
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward savePageDataBatch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		this.savePageDataBatch(request, tabName, viewName);
		return mapping.findForward("success");
	}
	
	/** 
	 * Method savePageDataBatch2
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward savePageDataBatch2(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HashMap<String, String[]> primaryArrayMap = new HashMap<String, String[]>();
		HashMap<String, String> primaryMap = new HashMap<String, String>();
		HashMap<String, String> tableMap = new HashMap<String, String>();
		
		primaryArrayMap.put("xh", new String[]{"2003150103","2003150104","2003150105","2003150106"});
		primaryMap.put("xn", "2009-2010");
		
		tableMap.put("tableName", tabName);
		tableMap.put("viewName", viewName);
		
		this.savePageDataBatch(request, primaryArrayMap, primaryMap, tableMap);
		return mapping.findForward("success");
	}
}